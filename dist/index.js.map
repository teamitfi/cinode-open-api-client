{"mappings":"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","sources":["src/index.ts","src/Cinode.ts","src/core/AxiosHttpRequest.ts","src/core/BaseHttpRequest.ts","src/core/request.ts","src/core/ApiError.ts","src/core/CancelablePromise.ts","src/services/AbsenceService.ts","src/services/AbsencesService.ts","src/services/AbsenceTypeService.ts","src/services/AvailabilityService.ts","src/services/CompanyService.ts","src/services/CompanyAddressUsersService.ts","src/services/CompanyCandidateService.ts","src/services/CompanyCandidateEventService.ts","src/services/CompanyCandidateEventMeetingService.ts","src/services/CompanyCandidateEventMeetingsService.ts","src/services/CompanyCandidateEventNoteService.ts","src/services/CompanyCandidateEventNotesService.ts","src/services/CompanyCandidateEventsService.ts","src/services/CompanyCandidateEventTaskService.ts","src/services/CompanyCandidateEventTasksService.ts","src/services/CompanyCandidateFileAttachmentService.ts","src/services/CompanyCandidateFileAttachmentsService.ts","src/services/CompanyCandidatePipelinesService.ts","src/services/CompanyCandidatesService.ts","src/services/CompanyCandidateSkillsService.ts","src/services/CompanyCandidateUriAttachmentService.ts","src/services/CompanyCandidateUriAttachmentsService.ts","src/services/CompanyCandidateUserService.ts","src/services/CompanyCapabilitiesService.ts","src/services/CompanyCurrenciesService.ts","src/services/CompanyCustomerService.ts","src/services/CompanyCustomerAddressService.ts","src/services/CompanyCustomerContactService.ts","src/services/CompanyCustomerContactsService.ts","src/services/CompanyCustomerContactTagsService.ts","src/services/CompanyCustomerEventService.ts","src/services/CompanyCustomerEventsService.ts","src/services/CompanyCustomerEventsMeetingService.ts","src/services/CompanyCustomerEventsMeetingsService.ts","src/services/CompanyCustomerEventsNoteService.ts","src/services/CompanyCustomerEventsNotesService.ts","src/services/CompanyCustomerEventsTaskService.ts","src/services/CompanyCustomerEventsTasksService.ts","src/services/CompanyCustomerFileAttachmentService.ts","src/services/CompanyCustomerManagersService.ts","src/services/CompanyCustomersService.ts","src/services/CompanyCustomersExtendedService.ts","src/services/CompanyCustomerTagsService.ts","src/services/CompanyImageService.ts","src/services/CompanyImagesService.ts","src/services/CompanyManagersService.ts","src/services/CompanyProfilesService.ts","src/services/CompanyProjectFileAttachmentService.ts","src/services/CompanyRecruitmentManagersService.ts","src/services/CompanyResumesService.ts","src/services/CompanySubcontractorGroupService.ts","src/services/CompanySubcontractorGroupMembersService.ts","src/services/CompanySubcontractorGroupsService.ts","src/services/CompanyTagService.ts","src/services/CompanyTagsService.ts","src/services/CompanyTeamService.ts","src/services/CompanyTeamManagersService.ts","src/services/CompanyTeamMemberService.ts","src/services/CompanyTeamMembersService.ts","src/services/CompanyTeamsService.ts","src/services/CompanyTeamUsersService.ts","src/services/CompanyUserService.ts","src/services/CompanyUserConvertService.ts","src/services/CompanyUserEmployeeEventService.ts","src/services/CompanyUserEmployeeEventMeetingService.ts","src/services/CompanyUserEmployeeEventNoteService.ts","src/services/CompanyUserEmployeeEventsService.ts","src/services/CompanyUserEmployeeEventsMeetingsService.ts","src/services/CompanyUserEmployeeEventsNotesService.ts","src/services/CompanyUserEmployeeEventsTasksService.ts","src/services/CompanyUserEmployeeEventTaskService.ts","src/services/CompanyUserFullService.ts","src/services/CompanyUserPermissionsService.ts","src/services/CompanyUserProfileService.ts","src/services/CompanyUserProfileCommitmentService.ts","src/services/CompanyUserProfileEducationService.ts","src/services/CompanyUserProfileEmployerService.ts","src/services/CompanyUserProfileExtSkillService.ts","src/services/CompanyUserProfileImportService.ts","src/services/CompanyUserProfileLanguageService.ts","src/services/CompanyUserProfileLanguagesService.ts","src/services/CompanyUserProfilePresentationService.ts","src/services/CompanyUserProfileReferenceService.ts","src/services/CompanyUserProfilesService.ts","src/services/CompanyUserProfileSkillService.ts","src/services/CompanyUserProfileTrainingService.ts","src/services/CompanyUserProfileWorkExperienceService.ts","src/services/CompanyUserResumeService.ts","src/services/CompanyUserResumesService.ts","src/services/CompanyUserRolesService.ts","src/services/CompanyUsersService.ts","src/services/CompanyUsersExtendedService.ts","src/services/CompanyUserSkillService.ts","src/services/CompanyUserSkillsService.ts","src/services/CompanyUserSubcontractorService.ts","src/services/CompanyUserSubcontractorEventService.ts","src/services/CompanyUserSubcontractorEventMeetingService.ts","src/services/CompanyUserSubcontractorEventNoteService.ts","src/services/CompanyUserSubcontractorEventsService.ts","src/services/CompanyUserSubcontractorEventsMeetingsService.ts","src/services/CompanyUserSubcontractorEventsNotesService.ts","src/services/CompanyUserSubcontractorEventsTasksService.ts","src/services/CompanyUserSubcontractorEventTaskService.ts","src/services/CompanyUserSubcontractorFileAttachmentService.ts","src/services/CompanyUserSubcontractorFileAttachmentsService.ts","src/services/CompanyUserSubcontractorRolesService.ts","src/services/CompanyUserSubcontractorsService.ts","src/services/CompanyUserTagsService.ts","src/services/CompanyUserTeamsService.ts","src/services/CompanyWebhookService.ts","src/services/CompanyWebhooksService.ts","src/services/DynamicCompanyUserResumeService.ts","src/services/KeywordSearchService.ts","src/services/MentionsService.ts","src/services/PartnersService.ts","src/services/ProjectService.ts","src/services/ProjectAssignmentService.ts","src/services/ProjectAssignmentMemberService.ts","src/services/ProjectAssignmentsService.ts","src/services/ProjectAssignmentSkillsService.ts","src/services/ProjectEventService.ts","src/services/ProjectEventsService.ts","src/services/ProjectEventsMeetingService.ts","src/services/ProjectEventsMeetingsService.ts","src/services/ProjectEventsNoteService.ts","src/services/ProjectEventsNotesService.ts","src/services/ProjectEventsTaskService.ts","src/services/ProjectEventsTasksService.ts","src/services/ProjectPipelinesService.ts","src/services/ProjectReferenceService.ts","src/services/ProjectReferencesService.ts","src/services/ProjectsService.ts","src/services/ProjectTagsService.ts","src/services/RecruitmentSourcesService.ts","src/services/SearchCompanyCandidateService.ts","src/services/SearchCompanyCustomerContactService.ts","src/services/SearchCompanyCustomersService.ts","src/services/SearchCompanyUserService.ts","src/services/SearchProjectService.ts","src/services/SkillSearchService.ts","src/services/SkillSearchTermService.ts","src/core/OpenAPI.ts","src/models/AccessLevel.ts","src/models/ActionType.ts","src/models/AddressType.ts","src/models/AttachmentType.ts","src/models/CompanyCandidateQuerySort.ts","src/models/CompanyCandidateState.ts","src/models/CompanyCustomerContactQuerySort.ts","src/models/CompanyCustomerQuerySort.ts","src/models/CompanyProfileSort.ts","src/models/CompanySize.ts","src/models/CompanyUserCandidateStatus.ts","src/models/CompanyUserQuerySort.ts","src/models/CompanyUserStatus.ts","src/models/CompanyUserSubcontractorStatus.ts","src/models/CompanyUserType.ts","src/models/ContractType.ts","src/models/EventNoteType.ts","src/models/EventStatusValue.ts","src/models/EventTaskType.ts","src/models/EventType.ts","src/models/EventVisibility.ts","src/models/ExtentType.ts","src/models/ImageSize.ts","src/models/KeywordType.ts","src/models/LanguageLevel.ts","src/models/LongRunningStatus.ts","src/models/ModuleType.ts","src/models/PartnerConnectionTrustType.ts","src/models/PdfEngineType.ts","src/models/PdfOrientation.ts","src/models/ProjectAssignmentAllocationStatus.ts","src/models/ProjectAssignmentExtentType.ts","src/models/ProjectAssignmentMemberAllocationStatus.ts","src/models/ProjectAssignmentMemberState.ts","src/models/ProjectAssignmentMemberType.ts","src/models/ProjectAssignmentRequestStatus.ts","src/models/ProjectAssignmentStatus.ts","src/models/ProjectPriority.ts","src/models/ProjectQuerySort.ts","src/models/ProjectState.ts","src/models/SaveToApiOption.ts","src/models/SortOrder.ts","src/models/Status.ts","src/models/StringComparisonOperator.ts","src/models/TemplateAssetType.ts","src/models/TrainingType.ts","src/models/UserGender.ts","src/models/WebhookEntityType.ts","src/models/WordEngineType.ts"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport { Cinode } from './Cinode';\n\nexport { ApiError } from './core/ApiError';\nexport { BaseHttpRequest } from './core/BaseHttpRequest';\nexport { CancelablePromise, CancelError } from './core/CancelablePromise';\nexport { OpenAPI } from './core/OpenAPI';\nexport type { OpenAPIConfig } from './core/OpenAPI';\n\nexport type { AbscencePeriodDayModel } from './models/AbscencePeriodDayModel';\nexport type { AbsenceAddEditModel } from './models/AbsenceAddEditModel';\nexport type { AbsencePeriodDtoModel } from './models/AbsencePeriodDtoModel';\nexport type { AbsencePeriodModel } from './models/AbsencePeriodModel';\nexport type { AbsenceTypeDto } from './models/AbsenceTypeDto';\nexport type { AbsenceTypeModel } from './models/AbsenceTypeModel';\nexport { AccessLevel } from './models/AccessLevel';\nexport { ActionType } from './models/ActionType';\nexport type { AddCompanySubcontractorGroupMemberModel } from './models/AddCompanySubcontractorGroupMemberModel';\nexport type { AddressInfoBlockViewModel } from './models/AddressInfoBlockViewModel';\nexport { AddressType } from './models/AddressType';\nexport { AttachmentType } from './models/AttachmentType';\nexport type { AvailabilityFilterModel } from './models/AvailabilityFilterModel';\nexport type { AvailabilityModel } from './models/AvailabilityModel';\nexport type { CalendarDayModel } from './models/CalendarDayModel';\nexport type { ClassicCompanyUserResumeModel } from './models/ClassicCompanyUserResumeModel';\nexport type { CommitmentBlockItemModel } from './models/CommitmentBlockItemModel';\nexport type { CommitmentBlockModel } from './models/CommitmentBlockModel';\nexport type { CompanyAddressModel } from './models/CompanyAddressModel';\nexport type { CompanyBaseModel } from './models/CompanyBaseModel';\nexport type { CompanyCandidateAddCandidateUserModel } from './models/CompanyCandidateAddCandidateUserModel';\nexport type { CompanyCandidateAddInviteModel } from './models/CompanyCandidateAddInviteModel';\nexport type { CompanyCandidateAddModel } from './models/CompanyCandidateAddModel';\nexport type { CompanyCandidateAttachmentModel } from './models/CompanyCandidateAttachmentModel';\nexport type { CompanyCandidateBaseModel } from './models/CompanyCandidateBaseModel';\nexport type { CompanyCandidateEventBaseModel } from './models/CompanyCandidateEventBaseModel';\nexport type { CompanyCandidateEventMeetingModel } from './models/CompanyCandidateEventMeetingModel';\nexport type { CompanyCandidateEventModel } from './models/CompanyCandidateEventModel';\nexport type { CompanyCandidateEventNoteModel } from './models/CompanyCandidateEventNoteModel';\nexport type { CompanyCandidateEventTaskModel } from './models/CompanyCandidateEventTaskModel';\nexport type { CompanyCandidateExtendedModel } from './models/CompanyCandidateExtendedModel';\nexport type { CompanyCandidateFileAttachmentListModel } from './models/CompanyCandidateFileAttachmentListModel';\nexport type { CompanyCandidateFileAttachmentModel } from './models/CompanyCandidateFileAttachmentModel';\nexport type { CompanyCandidatePipelineModel } from './models/CompanyCandidatePipelineModel';\nexport type { CompanyCandidatePipelineStageModel } from './models/CompanyCandidatePipelineStageModel';\nexport { CompanyCandidateQuerySort } from './models/CompanyCandidateQuerySort';\nexport type { CompanyCandidateQuerySortPageAndSortByModel } from './models/CompanyCandidateQuerySortPageAndSortByModel';\nexport type { CompanyCandidateSkillAddModel } from './models/CompanyCandidateSkillAddModel';\nexport type { CompanyCandidateSkillModel } from './models/CompanyCandidateSkillModel';\nexport { CompanyCandidateState } from './models/CompanyCandidateState';\nexport type { CompanyCandidateUriAttachmentAddModel } from './models/CompanyCandidateUriAttachmentAddModel';\nexport type { CompanyCandidateUriAttachmentModel } from './models/CompanyCandidateUriAttachmentModel';\nexport type { CompanyCapabilitiesModel } from './models/CompanyCapabilitiesModel';\nexport type { CompanyCustomerAddModel } from './models/CompanyCustomerAddModel';\nexport type { CompanyCustomerAddressAddEditModel } from './models/CompanyCustomerAddressAddEditModel';\nexport type { CompanyCustomerAddressModel } from './models/CompanyCustomerAddressModel';\nexport type { CompanyCustomerAttachmentModel } from './models/CompanyCustomerAttachmentModel';\nexport type { CompanyCustomerBaseModel } from './models/CompanyCustomerBaseModel';\nexport type { CompanyCustomerContactAddEditModel } from './models/CompanyCustomerContactAddEditModel';\nexport type { CompanyCustomerContactBaseModel } from './models/CompanyCustomerContactBaseModel';\nexport type { CompanyCustomerContactModel } from './models/CompanyCustomerContactModel';\nexport { CompanyCustomerContactQuerySort } from './models/CompanyCustomerContactQuerySort';\nexport type { CompanyCustomerContactQuerySortPageAndSortByModel } from './models/CompanyCustomerContactQuerySortPageAndSortByModel';\nexport type { CompanyCustomerDeleteModel } from './models/CompanyCustomerDeleteModel';\nexport type { CompanyCustomerEditModel } from './models/CompanyCustomerEditModel';\nexport type { CompanyCustomerExtendedModel } from './models/CompanyCustomerExtendedModel';\nexport type { CompanyCustomerManagerModel } from './models/CompanyCustomerManagerModel';\nexport type { CompanyCustomerManagersAddEditModel } from './models/CompanyCustomerManagersAddEditModel';\nexport type { CompanyCustomerModel } from './models/CompanyCustomerModel';\nexport { CompanyCustomerQuerySort } from './models/CompanyCustomerQuerySort';\nexport type { CompanyCustomerQuerySortPageAndSortByModel } from './models/CompanyCustomerQuerySortPageAndSortByModel';\nexport type { CompanyEnabledModuleModel } from './models/CompanyEnabledModuleModel';\nexport type { CompanyImageModel } from './models/CompanyImageModel';\nexport type { CompanyModel } from './models/CompanyModel';\nexport type { CompanyProfileFilterModel } from './models/CompanyProfileFilterModel';\nexport type { CompanyProfilesModel } from './models/CompanyProfilesModel';\nexport { CompanyProfileSort } from './models/CompanyProfileSort';\nexport type { CompanyProfileSortPageAndSortByModel } from './models/CompanyProfileSortPageAndSortByModel';\nexport type { CompanyRecruitmentManagerModel } from './models/CompanyRecruitmentManagerModel';\nexport type { CompanyResumeTemplateBaseModel } from './models/CompanyResumeTemplateBaseModel';\nexport type { CompanyResumeTemplateLanguageModel } from './models/CompanyResumeTemplateLanguageModel';\nexport { CompanySize } from './models/CompanySize';\nexport type { CompanySubcontractorGroupBaseModel } from './models/CompanySubcontractorGroupBaseModel';\nexport type { CompanySubcontractorGroupModel } from './models/CompanySubcontractorGroupModel';\nexport type { CompanyTagBaseModel } from './models/CompanyTagBaseModel';\nexport type { CompanyTagModel } from './models/CompanyTagModel';\nexport type { CompanyTagTypeModel } from './models/CompanyTagTypeModel';\nexport type { CompanyUserAddModel } from './models/CompanyUserAddModel';\nexport type { CompanyUserBaseModel } from './models/CompanyUserBaseModel';\nexport type { CompanyUserCandidateModel } from './models/CompanyUserCandidateModel';\nexport { CompanyUserCandidateStatus } from './models/CompanyUserCandidateStatus';\nexport type { CompanyUserEditModel } from './models/CompanyUserEditModel';\nexport type { CompanyUserEventBaseModel } from './models/CompanyUserEventBaseModel';\nexport type { CompanyUserEventMeetingAddEditModel } from './models/CompanyUserEventMeetingAddEditModel';\nexport type { CompanyUserEventMeetingModel } from './models/CompanyUserEventMeetingModel';\nexport type { CompanyUserEventModel } from './models/CompanyUserEventModel';\nexport type { CompanyUserEventNoteAddEditModel } from './models/CompanyUserEventNoteAddEditModel';\nexport type { CompanyUserEventNoteModel } from './models/CompanyUserEventNoteModel';\nexport type { CompanyUserEventTaskAddEditModel } from './models/CompanyUserEventTaskAddEditModel';\nexport type { CompanyUserEventTaskModel } from './models/CompanyUserEventTaskModel';\nexport type { CompanyUserExtendedModel } from './models/CompanyUserExtendedModel';\nexport type { CompanyUserFullModel } from './models/CompanyUserFullModel';\nexport type { CompanyUserImageModel } from './models/CompanyUserImageModel';\nexport type { CompanyUserInfoBlockViewModel } from './models/CompanyUserInfoBlockViewModel';\nexport type { CompanyUserModel } from './models/CompanyUserModel';\nexport type { CompanyUserPermissionsEditModel } from './models/CompanyUserPermissionsEditModel';\nexport type { CompanyUserProfileAddEditModel } from './models/CompanyUserProfileAddEditModel';\nexport type { CompanyUserProfileBaseModel } from './models/CompanyUserProfileBaseModel';\nexport type { CompanyUserProfileCommitmentAddEditModel } from './models/CompanyUserProfileCommitmentAddEditModel';\nexport type { CompanyUserProfileCommitmentModel } from './models/CompanyUserProfileCommitmentModel';\nexport type { CompanyUserProfileCommitmentTranslationModel } from './models/CompanyUserProfileCommitmentTranslationModel';\nexport type { CompanyUserProfileEducationAddEditModel } from './models/CompanyUserProfileEducationAddEditModel';\nexport type { CompanyUserProfileEducationModel } from './models/CompanyUserProfileEducationModel';\nexport type { CompanyUserProfileEducationTranslationModel } from './models/CompanyUserProfileEducationTranslationModel';\nexport type { CompanyUserProfileEmployerAddEditModel } from './models/CompanyUserProfileEmployerAddEditModel';\nexport type { CompanyUserProfileEmployerModel } from './models/CompanyUserProfileEmployerModel';\nexport type { CompanyUserProfileEmployerTranslationModel } from './models/CompanyUserProfileEmployerTranslationModel';\nexport type { CompanyUserProfileExtSkillAddEditModel } from './models/CompanyUserProfileExtSkillAddEditModel';\nexport type { CompanyUserProfileExtSkillModel } from './models/CompanyUserProfileExtSkillModel';\nexport type { CompanyUserProfileExtSkillTranslationModel } from './models/CompanyUserProfileExtSkillTranslationModel';\nexport type { CompanyUserProfileFullModel } from './models/CompanyUserProfileFullModel';\nexport type { CompanyUserProfileLanguageAddModel } from './models/CompanyUserProfileLanguageAddModel';\nexport type { CompanyUserProfileLanguageBranchModel } from './models/CompanyUserProfileLanguageBranchModel';\nexport type { CompanyUserProfileLanguageEditModel } from './models/CompanyUserProfileLanguageEditModel';\nexport type { CompanyUserProfileLanguageModel } from './models/CompanyUserProfileLanguageModel';\nexport type { CompanyUserProfilePresentationEditModel } from './models/CompanyUserProfilePresentationEditModel';\nexport type { CompanyUserProfilePresentationModel } from './models/CompanyUserProfilePresentationModel';\nexport type { CompanyUserProfilePresentationTranslationModel } from './models/CompanyUserProfilePresentationTranslationModel';\nexport type { CompanyUserProfileReferenceAddEditModel } from './models/CompanyUserProfileReferenceAddEditModel';\nexport type { CompanyUserProfileReferenceModel } from './models/CompanyUserProfileReferenceModel';\nexport type { CompanyUserProfileReferenceTranslationModel } from './models/CompanyUserProfileReferenceTranslationModel';\nexport type { CompanyUserProfileSkillAddModel } from './models/CompanyUserProfileSkillAddModel';\nexport type { CompanyUserProfileSkillEditModel } from './models/CompanyUserProfileSkillEditModel';\nexport type { CompanyUserProfileSkillHistoryModel } from './models/CompanyUserProfileSkillHistoryModel';\nexport type { CompanyUserProfileSkillModel } from './models/CompanyUserProfileSkillModel';\nexport type { CompanyUserProfileSkillTranslationModel } from './models/CompanyUserProfileSkillTranslationModel';\nexport type { CompanyUserProfileTrainingAddEditModel } from './models/CompanyUserProfileTrainingAddEditModel';\nexport type { CompanyUserProfileTrainingModel } from './models/CompanyUserProfileTrainingModel';\nexport type { CompanyUserProfileTrainingTranslationModel } from './models/CompanyUserProfileTrainingTranslationModel';\nexport type { CompanyUserProfileTranslationModel } from './models/CompanyUserProfileTranslationModel';\nexport type { CompanyUserProfileWorkExperienceAddEditModel } from './models/CompanyUserProfileWorkExperienceAddEditModel';\nexport type { CompanyUserProfileWorkExperienceModel } from './models/CompanyUserProfileWorkExperienceModel';\nexport type { CompanyUserProfileWorkExperienceSkillAddModel } from './models/CompanyUserProfileWorkExperienceSkillAddModel';\nexport type { CompanyUserProfileWorkExperienceTranslationModel } from './models/CompanyUserProfileWorkExperienceTranslationModel';\nexport type { CompanyUserProjectAssignmentModel } from './models/CompanyUserProjectAssignmentModel';\nexport { CompanyUserQuerySort } from './models/CompanyUserQuerySort';\nexport type { CompanyUserQuerySortPageAndSortByModel } from './models/CompanyUserQuerySortPageAndSortByModel';\nexport type { CompanyUserResumeBaseModel } from './models/CompanyUserResumeBaseModel';\nexport type { CompanyUserSearchSkillModel } from './models/CompanyUserSearchSkillModel';\nexport type { CompanyUserSkillModel } from './models/CompanyUserSkillModel';\nexport { CompanyUserStatus } from './models/CompanyUserStatus';\nexport type { CompanyUserSubcontractorAddEditModel } from './models/CompanyUserSubcontractorAddEditModel';\nexport type { CompanyUserSubcontractorAttachmentModel } from './models/CompanyUserSubcontractorAttachmentModel';\nexport type { CompanyUserSubcontractorBaseModel } from './models/CompanyUserSubcontractorBaseModel';\nexport type { CompanyUserSubcontractorFileAttachmentListModel } from './models/CompanyUserSubcontractorFileAttachmentListModel';\nexport type { CompanyUserSubcontractorFileAttachmentModel } from './models/CompanyUserSubcontractorFileAttachmentModel';\nexport type { CompanyUserSubcontractorModel } from './models/CompanyUserSubcontractorModel';\nexport type { CompanyUserSubcontractorRoleMemberModel } from './models/CompanyUserSubcontractorRoleMemberModel';\nexport type { CompanyUserSubcontractorRolesModel } from './models/CompanyUserSubcontractorRolesModel';\nexport { CompanyUserSubcontractorStatus } from './models/CompanyUserSubcontractorStatus';\nexport { CompanyUserType } from './models/CompanyUserType';\nexport { ContractType } from './models/ContractType';\nexport type { ConvertCompanyUserToAadAccountModel } from './models/ConvertCompanyUserToAadAccountModel';\nexport type { CountryModel } from './models/CountryModel';\nexport type { CreatedModel } from './models/CreatedModel';\nexport type { CurrencyModel } from './models/CurrencyModel';\nexport type { CustomerEventBaseModel } from './models/CustomerEventBaseModel';\nexport type { CustomerEventMeetingAddEditModel } from './models/CustomerEventMeetingAddEditModel';\nexport type { CustomerEventMeetingModel } from './models/CustomerEventMeetingModel';\nexport type { CustomerEventModel } from './models/CustomerEventModel';\nexport type { CustomerEventNoteAddEditModel } from './models/CustomerEventNoteAddEditModel';\nexport type { CustomerEventNoteModel } from './models/CustomerEventNoteModel';\nexport type { CustomerEventTaskAddEditModel } from './models/CustomerEventTaskAddEditModel';\nexport type { CustomerEventTaskModel } from './models/CustomerEventTaskModel';\nexport type { DynamicCompanyUserResumeModel } from './models/DynamicCompanyUserResumeModel';\nexport type { DynamicTemplateViewModel } from './models/DynamicTemplateViewModel';\nexport type { EducationBlockItemModel } from './models/EducationBlockItemModel';\nexport type { EducationBlockModel } from './models/EducationBlockModel';\nexport type { EmployerBlockItemModel } from './models/EmployerBlockItemModel';\nexport type { EmployerBlockModel } from './models/EmployerBlockModel';\nexport type { ErrorModel } from './models/ErrorModel';\nexport type { EventCommentModel } from './models/EventCommentModel';\nexport type { EventMeetingAddEditModel } from './models/EventMeetingAddEditModel';\nexport type { EventNoteAddEditModel } from './models/EventNoteAddEditModel';\nexport { EventNoteType } from './models/EventNoteType';\nexport { EventStatusValue } from './models/EventStatusValue';\nexport type { EventTaskAddEditModel } from './models/EventTaskAddEditModel';\nexport { EventTaskType } from './models/EventTaskType';\nexport { EventType } from './models/EventType';\nexport { EventVisibility } from './models/EventVisibility';\nexport { ExtentType } from './models/ExtentType';\nexport type { ExtraSkillBlockModel } from './models/ExtraSkillBlockModel';\nexport type { ExtraSkillItemBlockModel } from './models/ExtraSkillItemBlockModel';\nexport type { FilterModel } from './models/FilterModel';\nexport type { HighlightedWorkExperienceBlockItemModel } from './models/HighlightedWorkExperienceBlockItemModel';\nexport type { HighlightedWorkExperienceBlockModel } from './models/HighlightedWorkExperienceBlockModel';\nexport type { ICompanyAddressViewModel } from './models/ICompanyAddressViewModel';\nexport type { ICompanyCandidatePatchDocument } from './models/ICompanyCandidatePatchDocument';\nexport type { ICompanyUserEmployeePatchDocument } from './models/ICompanyUserEmployeePatchDocument';\nexport type { IContactInfoViewModel } from './models/IContactInfoViewModel';\nexport type { IDynamicBlockViewModel } from './models/IDynamicBlockViewModel';\nexport type { ImageBlockModel } from './models/ImageBlockModel';\nexport { ImageSize } from './models/ImageSize';\nexport type { ImportProfileAsyncOperation } from './models/ImportProfileAsyncOperation';\nexport type { ITemplateCompany } from './models/ITemplateCompany';\nexport type { ITemplateLogotype } from './models/ITemplateLogotype';\nexport type { ITemplateProfileImage } from './models/ITemplateProfileImage';\nexport type { ITemplateSharedAssetViewModel } from './models/ITemplateSharedAssetViewModel';\nexport type { ITemplateStyleAssetViewModel } from './models/ITemplateStyleAssetViewModel';\nexport type { ITemplateUserInfo } from './models/ITemplateUserInfo';\nexport type { JsonPatchDocument } from './models/JsonPatchDocument';\nexport type { KeywordModel } from './models/KeywordModel';\nexport type { KeywordSynonymModel } from './models/KeywordSynonymModel';\nexport { KeywordType } from './models/KeywordType';\nexport type { LanguageBlockModel } from './models/LanguageBlockModel';\nexport type { LanguageItemBlockModel } from './models/LanguageItemBlockModel';\nexport { LanguageLevel } from './models/LanguageLevel';\nexport type { Link } from './models/Link';\nexport type { LocationBlockModel } from './models/LocationBlockModel';\nexport type { LocationModel } from './models/LocationModel';\nexport { LongRunningStatus } from './models/LongRunningStatus';\nexport type { MentionTextModel } from './models/MentionTextModel';\nexport { ModuleType } from './models/ModuleType';\nexport type { Operation } from './models/Operation';\nexport type { PartnerBaseModel } from './models/PartnerBaseModel';\nexport type { PartnerConnectionBaseModel } from './models/PartnerConnectionBaseModel';\nexport { PartnerConnectionTrustType } from './models/PartnerConnectionTrustType';\nexport type { PartnerRecipientBaseModel } from './models/PartnerRecipientBaseModel';\nexport type { PartnersFilterModel } from './models/PartnersFilterModel';\nexport type { PartnersOverviewModel } from './models/PartnersOverviewModel';\nexport { PdfEngineType } from './models/PdfEngineType';\nexport { PdfOrientation } from './models/PdfOrientation';\nexport type { PresentationBlockModel } from './models/PresentationBlockModel';\nexport type { ProfileLanguageModel } from './models/ProfileLanguageModel';\nexport type { ProjectAddEditModel } from './models/ProjectAddEditModel';\nexport type { ProjectAssignmentAddModel } from './models/ProjectAssignmentAddModel';\nexport { ProjectAssignmentAllocationStatus } from './models/ProjectAssignmentAllocationStatus';\nexport type { ProjectAssignmentAnnouncementBaseModel } from './models/ProjectAssignmentAnnouncementBaseModel';\nexport type { ProjectAssignmentAnnounceModel } from './models/ProjectAssignmentAnnounceModel';\nexport type { ProjectAssignmentBaseModel } from './models/ProjectAssignmentBaseModel';\nexport type { ProjectAssignmentEditModel } from './models/ProjectAssignmentEditModel';\nexport { ProjectAssignmentExtentType } from './models/ProjectAssignmentExtentType';\nexport type { ProjectAssignmentFilterModel } from './models/ProjectAssignmentFilterModel';\nexport { ProjectAssignmentMemberAllocationStatus } from './models/ProjectAssignmentMemberAllocationStatus';\nexport type { ProjectAssignmentMemberEmployeeAddModel } from './models/ProjectAssignmentMemberEmployeeAddModel';\nexport type { ProjectAssignmentMemberEmployeeEditModel } from './models/ProjectAssignmentMemberEmployeeEditModel';\nexport type { ProjectAssignmentMemberModel } from './models/ProjectAssignmentMemberModel';\nexport { ProjectAssignmentMemberState } from './models/ProjectAssignmentMemberState';\nexport type { ProjectAssignmentMemberStateHistoryModel } from './models/ProjectAssignmentMemberStateHistoryModel';\nexport type { ProjectAssignmentMemberSubcontractorAddModel } from './models/ProjectAssignmentMemberSubcontractorAddModel';\nexport type { ProjectAssignmentMemberSubcontractorEditModel } from './models/ProjectAssignmentMemberSubcontractorEditModel';\nexport { ProjectAssignmentMemberType } from './models/ProjectAssignmentMemberType';\nexport type { ProjectAssignmentModel } from './models/ProjectAssignmentModel';\nexport { ProjectAssignmentRequestStatus } from './models/ProjectAssignmentRequestStatus';\nexport type { ProjectAssignmentSkillAddModel } from './models/ProjectAssignmentSkillAddModel';\nexport type { ProjectAssignmentSkillBaseModel } from './models/ProjectAssignmentSkillBaseModel';\nexport type { ProjectAssignmentSkillEditModel } from './models/ProjectAssignmentSkillEditModel';\nexport type { ProjectAssignmentSkillModel } from './models/ProjectAssignmentSkillModel';\nexport { ProjectAssignmentStatus } from './models/ProjectAssignmentStatus';\nexport type { ProjectAssignmentWithStatusModel } from './models/ProjectAssignmentWithStatusModel';\nexport type { ProjectAttachmentModel } from './models/ProjectAttachmentModel';\nexport type { ProjectBaseModel } from './models/ProjectBaseModel';\nexport type { ProjectEventBaseModel } from './models/ProjectEventBaseModel';\nexport type { ProjectEventMeetingAddEditModel } from './models/ProjectEventMeetingAddEditModel';\nexport type { ProjectEventMeetingModel } from './models/ProjectEventMeetingModel';\nexport type { ProjectEventModel } from './models/ProjectEventModel';\nexport type { ProjectEventNoteAddEditModel } from './models/ProjectEventNoteAddEditModel';\nexport type { ProjectEventNoteModel } from './models/ProjectEventNoteModel';\nexport type { ProjectEventTaskAddEditModel } from './models/ProjectEventTaskAddEditModel';\nexport type { ProjectEventTaskModel } from './models/ProjectEventTaskModel';\nexport type { ProjectModel } from './models/ProjectModel';\nexport type { ProjectPipelineModel } from './models/ProjectPipelineModel';\nexport type { ProjectPipelineStageModel } from './models/ProjectPipelineStageModel';\nexport { ProjectPriority } from './models/ProjectPriority';\nexport { ProjectQuerySort } from './models/ProjectQuerySort';\nexport type { ProjectQuerySortPageAndSortByModel } from './models/ProjectQuerySortPageAndSortByModel';\nexport type { ProjectReferenceModel } from './models/ProjectReferenceModel';\nexport { ProjectState } from './models/ProjectState';\nexport type { ProjectStateHistoryModel } from './models/ProjectStateHistoryModel';\nexport type { ProjectStateReasonModel } from './models/ProjectStateReasonModel';\nexport type { RecruitmentSourceModel } from './models/RecruitmentSourceModel';\nexport type { ReferenceBlockItemModel } from './models/ReferenceBlockItemModel';\nexport type { ReferenceBlockModel } from './models/ReferenceBlockModel';\nexport type { ResumeModel } from './models/ResumeModel';\nexport type { RoleModel } from './models/RoleModel';\nexport { SaveToApiOption } from './models/SaveToApiOption';\nexport type { SearchCompanyCandidateQueryModel } from './models/SearchCompanyCandidateQueryModel';\nexport type { SearchCompanyCandidateResultModel } from './models/SearchCompanyCandidateResultModel';\nexport type { SearchCompanyCustomerContactQueryModel } from './models/SearchCompanyCustomerContactQueryModel';\nexport type { SearchCompanyCustomerContactResultModel } from './models/SearchCompanyCustomerContactResultModel';\nexport type { SearchCompanyCustomerQueryModel } from './models/SearchCompanyCustomerQueryModel';\nexport type { SearchCompanyCustomerResultModel } from './models/SearchCompanyCustomerResultModel';\nexport type { SearchCompanyUserQueryModel } from './models/SearchCompanyUserQueryModel';\nexport type { SearchCompanyUserResultModel } from './models/SearchCompanyUserResultModel';\nexport type { SearchProjectQueryModel } from './models/SearchProjectQueryModel';\nexport type { SearchProjectsResultModel } from './models/SearchProjectsResultModel';\nexport type { SearchSkillModel } from './models/SearchSkillModel';\nexport type { SearchSkillQueryModel } from './models/SearchSkillQueryModel';\nexport type { SearchSkillResultModel } from './models/SearchSkillResultModel';\nexport type { SkillBlockItemModel } from './models/SkillBlockItemModel';\nexport type { SkillByCategoryBlockItemModel } from './models/SkillByCategoryBlockItemModel';\nexport type { SkillByCategoryBlockModel } from './models/SkillByCategoryBlockModel';\nexport type { SkillModelModel } from './models/SkillModelModel';\nexport type { SkillResultModel } from './models/SkillResultModel';\nexport type { SkillSearchQueryTermModel } from './models/SkillSearchQueryTermModel';\nexport { SortOrder } from './models/SortOrder';\nexport { Status } from './models/Status';\nexport { StringComparisonOperator } from './models/StringComparisonOperator';\nexport type { TeamAddEditModel } from './models/TeamAddEditModel';\nexport type { TeamBaseModel } from './models/TeamBaseModel';\nexport type { TeamManagerEditModel } from './models/TeamManagerEditModel';\nexport type { TeamManagerModel } from './models/TeamManagerModel';\nexport type { TeamMemberAddModel } from './models/TeamMemberAddModel';\nexport type { TeamMemberEditModel } from './models/TeamMemberEditModel';\nexport type { TeamMemberModel } from './models/TeamMemberModel';\nexport type { TeamMemberMoveModel } from './models/TeamMemberMoveModel';\nexport type { TeamModel } from './models/TeamModel';\nexport { TemplateAssetType } from './models/TemplateAssetType';\nexport type { TextBlockModel } from './models/TextBlockModel';\nexport type { TopSkillBlockItemModel } from './models/TopSkillBlockItemModel';\nexport type { TopSkillBlockModel } from './models/TopSkillBlockModel';\nexport type { TrainingBlockModel } from './models/TrainingBlockModel';\nexport type { TrainingItemBlockModel } from './models/TrainingItemBlockModel';\nexport { TrainingType } from './models/TrainingType';\nexport type { UpdatedModel } from './models/UpdatedModel';\nexport { UserGender } from './models/UserGender';\nexport type { ValidationModel } from './models/ValidationModel';\nexport type { WebhookAddModel } from './models/WebhookAddModel';\nexport type { WebhookConfigurationAddModel } from './models/WebhookConfigurationAddModel';\nexport type { WebhookConfigurationModel } from './models/WebhookConfigurationModel';\nexport type { WebhookCredentialsAddModel } from './models/WebhookCredentialsAddModel';\nexport type { WebhookCredentialsModel } from './models/WebhookCredentialsModel';\nexport { WebhookEntityType } from './models/WebhookEntityType';\nexport type { WebhookModel } from './models/WebhookModel';\nexport { WordEngineType } from './models/WordEngineType';\nexport type { WorkExperienceBlockItemModel } from './models/WorkExperienceBlockItemModel';\nexport type { WorkExperienceBlockModel } from './models/WorkExperienceBlockModel';\n\nexport { AbsenceService } from './services/AbsenceService';\nexport { AbsencesService } from './services/AbsencesService';\nexport { AbsenceTypeService } from './services/AbsenceTypeService';\nexport { AvailabilityService } from './services/AvailabilityService';\nexport { CompanyService } from './services/CompanyService';\nexport { CompanyAddressUsersService } from './services/CompanyAddressUsersService';\nexport { CompanyCandidateService } from './services/CompanyCandidateService';\nexport { CompanyCandidateEventService } from './services/CompanyCandidateEventService';\nexport { CompanyCandidateEventMeetingService } from './services/CompanyCandidateEventMeetingService';\nexport { CompanyCandidateEventMeetingsService } from './services/CompanyCandidateEventMeetingsService';\nexport { CompanyCandidateEventNoteService } from './services/CompanyCandidateEventNoteService';\nexport { CompanyCandidateEventNotesService } from './services/CompanyCandidateEventNotesService';\nexport { CompanyCandidateEventsService } from './services/CompanyCandidateEventsService';\nexport { CompanyCandidateEventTaskService } from './services/CompanyCandidateEventTaskService';\nexport { CompanyCandidateEventTasksService } from './services/CompanyCandidateEventTasksService';\nexport { CompanyCandidateFileAttachmentService } from './services/CompanyCandidateFileAttachmentService';\nexport { CompanyCandidateFileAttachmentsService } from './services/CompanyCandidateFileAttachmentsService';\nexport { CompanyCandidatePipelinesService } from './services/CompanyCandidatePipelinesService';\nexport { CompanyCandidatesService } from './services/CompanyCandidatesService';\nexport { CompanyCandidateSkillsService } from './services/CompanyCandidateSkillsService';\nexport { CompanyCandidateUriAttachmentService } from './services/CompanyCandidateUriAttachmentService';\nexport { CompanyCandidateUriAttachmentsService } from './services/CompanyCandidateUriAttachmentsService';\nexport { CompanyCandidateUserService } from './services/CompanyCandidateUserService';\nexport { CompanyCapabilitiesService } from './services/CompanyCapabilitiesService';\nexport { CompanyCurrenciesService } from './services/CompanyCurrenciesService';\nexport { CompanyCustomerService } from './services/CompanyCustomerService';\nexport { CompanyCustomerAddressService } from './services/CompanyCustomerAddressService';\nexport { CompanyCustomerContactService } from './services/CompanyCustomerContactService';\nexport { CompanyCustomerContactsService } from './services/CompanyCustomerContactsService';\nexport { CompanyCustomerContactTagsService } from './services/CompanyCustomerContactTagsService';\nexport { CompanyCustomerEventService } from './services/CompanyCustomerEventService';\nexport { CompanyCustomerEventsService } from './services/CompanyCustomerEventsService';\nexport { CompanyCustomerEventsMeetingService } from './services/CompanyCustomerEventsMeetingService';\nexport { CompanyCustomerEventsMeetingsService } from './services/CompanyCustomerEventsMeetingsService';\nexport { CompanyCustomerEventsNoteService } from './services/CompanyCustomerEventsNoteService';\nexport { CompanyCustomerEventsNotesService } from './services/CompanyCustomerEventsNotesService';\nexport { CompanyCustomerEventsTaskService } from './services/CompanyCustomerEventsTaskService';\nexport { CompanyCustomerEventsTasksService } from './services/CompanyCustomerEventsTasksService';\nexport { CompanyCustomerFileAttachmentService } from './services/CompanyCustomerFileAttachmentService';\nexport { CompanyCustomerManagersService } from './services/CompanyCustomerManagersService';\nexport { CompanyCustomersService } from './services/CompanyCustomersService';\nexport { CompanyCustomersExtendedService } from './services/CompanyCustomersExtendedService';\nexport { CompanyCustomerTagsService } from './services/CompanyCustomerTagsService';\nexport { CompanyImageService } from './services/CompanyImageService';\nexport { CompanyImagesService } from './services/CompanyImagesService';\nexport { CompanyManagersService } from './services/CompanyManagersService';\nexport { CompanyProfilesService } from './services/CompanyProfilesService';\nexport { CompanyProjectFileAttachmentService } from './services/CompanyProjectFileAttachmentService';\nexport { CompanyRecruitmentManagersService } from './services/CompanyRecruitmentManagersService';\nexport { CompanyResumesService } from './services/CompanyResumesService';\nexport { CompanySubcontractorGroupService } from './services/CompanySubcontractorGroupService';\nexport { CompanySubcontractorGroupMembersService } from './services/CompanySubcontractorGroupMembersService';\nexport { CompanySubcontractorGroupsService } from './services/CompanySubcontractorGroupsService';\nexport { CompanyTagService } from './services/CompanyTagService';\nexport { CompanyTagsService } from './services/CompanyTagsService';\nexport { CompanyTeamService } from './services/CompanyTeamService';\nexport { CompanyTeamManagersService } from './services/CompanyTeamManagersService';\nexport { CompanyTeamMemberService } from './services/CompanyTeamMemberService';\nexport { CompanyTeamMembersService } from './services/CompanyTeamMembersService';\nexport { CompanyTeamsService } from './services/CompanyTeamsService';\nexport { CompanyTeamUsersService } from './services/CompanyTeamUsersService';\nexport { CompanyUserService } from './services/CompanyUserService';\nexport { CompanyUserConvertService } from './services/CompanyUserConvertService';\nexport { CompanyUserEmployeeEventService } from './services/CompanyUserEmployeeEventService';\nexport { CompanyUserEmployeeEventMeetingService } from './services/CompanyUserEmployeeEventMeetingService';\nexport { CompanyUserEmployeeEventNoteService } from './services/CompanyUserEmployeeEventNoteService';\nexport { CompanyUserEmployeeEventsService } from './services/CompanyUserEmployeeEventsService';\nexport { CompanyUserEmployeeEventsMeetingsService } from './services/CompanyUserEmployeeEventsMeetingsService';\nexport { CompanyUserEmployeeEventsNotesService } from './services/CompanyUserEmployeeEventsNotesService';\nexport { CompanyUserEmployeeEventsTasksService } from './services/CompanyUserEmployeeEventsTasksService';\nexport { CompanyUserEmployeeEventTaskService } from './services/CompanyUserEmployeeEventTaskService';\nexport { CompanyUserFullService } from './services/CompanyUserFullService';\nexport { CompanyUserPermissionsService } from './services/CompanyUserPermissionsService';\nexport { CompanyUserProfileService } from './services/CompanyUserProfileService';\nexport { CompanyUserProfileCommitmentService } from './services/CompanyUserProfileCommitmentService';\nexport { CompanyUserProfileEducationService } from './services/CompanyUserProfileEducationService';\nexport { CompanyUserProfileEmployerService } from './services/CompanyUserProfileEmployerService';\nexport { CompanyUserProfileExtSkillService } from './services/CompanyUserProfileExtSkillService';\nexport { CompanyUserProfileImportService } from './services/CompanyUserProfileImportService';\nexport { CompanyUserProfileLanguageService } from './services/CompanyUserProfileLanguageService';\nexport { CompanyUserProfileLanguagesService } from './services/CompanyUserProfileLanguagesService';\nexport { CompanyUserProfilePresentationService } from './services/CompanyUserProfilePresentationService';\nexport { CompanyUserProfileReferenceService } from './services/CompanyUserProfileReferenceService';\nexport { CompanyUserProfilesService } from './services/CompanyUserProfilesService';\nexport { CompanyUserProfileSkillService } from './services/CompanyUserProfileSkillService';\nexport { CompanyUserProfileTrainingService } from './services/CompanyUserProfileTrainingService';\nexport { CompanyUserProfileWorkExperienceService } from './services/CompanyUserProfileWorkExperienceService';\nexport { CompanyUserResumeService } from './services/CompanyUserResumeService';\nexport { CompanyUserResumesService } from './services/CompanyUserResumesService';\nexport { CompanyUserRolesService } from './services/CompanyUserRolesService';\nexport { CompanyUsersService } from './services/CompanyUsersService';\nexport { CompanyUsersExtendedService } from './services/CompanyUsersExtendedService';\nexport { CompanyUserSkillService } from './services/CompanyUserSkillService';\nexport { CompanyUserSkillsService } from './services/CompanyUserSkillsService';\nexport { CompanyUserSubcontractorService } from './services/CompanyUserSubcontractorService';\nexport { CompanyUserSubcontractorEventService } from './services/CompanyUserSubcontractorEventService';\nexport { CompanyUserSubcontractorEventMeetingService } from './services/CompanyUserSubcontractorEventMeetingService';\nexport { CompanyUserSubcontractorEventNoteService } from './services/CompanyUserSubcontractorEventNoteService';\nexport { CompanyUserSubcontractorEventsService } from './services/CompanyUserSubcontractorEventsService';\nexport { CompanyUserSubcontractorEventsMeetingsService } from './services/CompanyUserSubcontractorEventsMeetingsService';\nexport { CompanyUserSubcontractorEventsNotesService } from './services/CompanyUserSubcontractorEventsNotesService';\nexport { CompanyUserSubcontractorEventsTasksService } from './services/CompanyUserSubcontractorEventsTasksService';\nexport { CompanyUserSubcontractorEventTaskService } from './services/CompanyUserSubcontractorEventTaskService';\nexport { CompanyUserSubcontractorFileAttachmentService } from './services/CompanyUserSubcontractorFileAttachmentService';\nexport { CompanyUserSubcontractorFileAttachmentsService } from './services/CompanyUserSubcontractorFileAttachmentsService';\nexport { CompanyUserSubcontractorRolesService } from './services/CompanyUserSubcontractorRolesService';\nexport { CompanyUserSubcontractorsService } from './services/CompanyUserSubcontractorsService';\nexport { CompanyUserTagsService } from './services/CompanyUserTagsService';\nexport { CompanyUserTeamsService } from './services/CompanyUserTeamsService';\nexport { CompanyWebhookService } from './services/CompanyWebhookService';\nexport { CompanyWebhooksService } from './services/CompanyWebhooksService';\nexport { DynamicCompanyUserResumeService } from './services/DynamicCompanyUserResumeService';\nexport { KeywordSearchService } from './services/KeywordSearchService';\nexport { MentionsService } from './services/MentionsService';\nexport { PartnersService } from './services/PartnersService';\nexport { ProjectService } from './services/ProjectService';\nexport { ProjectAssignmentService } from './services/ProjectAssignmentService';\nexport { ProjectAssignmentMemberService } from './services/ProjectAssignmentMemberService';\nexport { ProjectAssignmentsService } from './services/ProjectAssignmentsService';\nexport { ProjectAssignmentSkillsService } from './services/ProjectAssignmentSkillsService';\nexport { ProjectEventService } from './services/ProjectEventService';\nexport { ProjectEventsService } from './services/ProjectEventsService';\nexport { ProjectEventsMeetingService } from './services/ProjectEventsMeetingService';\nexport { ProjectEventsMeetingsService } from './services/ProjectEventsMeetingsService';\nexport { ProjectEventsNoteService } from './services/ProjectEventsNoteService';\nexport { ProjectEventsNotesService } from './services/ProjectEventsNotesService';\nexport { ProjectEventsTaskService } from './services/ProjectEventsTaskService';\nexport { ProjectEventsTasksService } from './services/ProjectEventsTasksService';\nexport { ProjectPipelinesService } from './services/ProjectPipelinesService';\nexport { ProjectReferenceService } from './services/ProjectReferenceService';\nexport { ProjectReferencesService } from './services/ProjectReferencesService';\nexport { ProjectsService } from './services/ProjectsService';\nexport { ProjectTagsService } from './services/ProjectTagsService';\nexport { RecruitmentSourcesService } from './services/RecruitmentSourcesService';\nexport { SearchCompanyCandidateService } from './services/SearchCompanyCandidateService';\nexport { SearchCompanyCustomerContactService } from './services/SearchCompanyCustomerContactService';\nexport { SearchCompanyCustomersService } from './services/SearchCompanyCustomersService';\nexport { SearchCompanyUserService } from './services/SearchCompanyUserService';\nexport { SearchProjectService } from './services/SearchProjectService';\nexport { SkillSearchService } from './services/SkillSearchService';\nexport { SkillSearchTermService } from './services/SkillSearchTermService';\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\nimport type { OpenAPIConfig } from './core/OpenAPI';\nimport { AxiosHttpRequest } from './core/AxiosHttpRequest';\nimport { AbsenceService } from './services/AbsenceService';\nimport { AbsencesService } from './services/AbsencesService';\nimport { AbsenceTypeService } from './services/AbsenceTypeService';\nimport { AvailabilityService } from './services/AvailabilityService';\nimport { CompanyService } from './services/CompanyService';\nimport { CompanyAddressUsersService } from './services/CompanyAddressUsersService';\nimport { CompanyCandidateService } from './services/CompanyCandidateService';\nimport { CompanyCandidateEventService } from './services/CompanyCandidateEventService';\nimport { CompanyCandidateEventMeetingService } from './services/CompanyCandidateEventMeetingService';\nimport { CompanyCandidateEventMeetingsService } from './services/CompanyCandidateEventMeetingsService';\nimport { CompanyCandidateEventNoteService } from './services/CompanyCandidateEventNoteService';\nimport { CompanyCandidateEventNotesService } from './services/CompanyCandidateEventNotesService';\nimport { CompanyCandidateEventsService } from './services/CompanyCandidateEventsService';\nimport { CompanyCandidateEventTaskService } from './services/CompanyCandidateEventTaskService';\nimport { CompanyCandidateEventTasksService } from './services/CompanyCandidateEventTasksService';\nimport { CompanyCandidateFileAttachmentService } from './services/CompanyCandidateFileAttachmentService';\nimport { CompanyCandidateFileAttachmentsService } from './services/CompanyCandidateFileAttachmentsService';\nimport { CompanyCandidatePipelinesService } from './services/CompanyCandidatePipelinesService';\nimport { CompanyCandidatesService } from './services/CompanyCandidatesService';\nimport { CompanyCandidateSkillsService } from './services/CompanyCandidateSkillsService';\nimport { CompanyCandidateUriAttachmentService } from './services/CompanyCandidateUriAttachmentService';\nimport { CompanyCandidateUriAttachmentsService } from './services/CompanyCandidateUriAttachmentsService';\nimport { CompanyCandidateUserService } from './services/CompanyCandidateUserService';\nimport { CompanyCapabilitiesService } from './services/CompanyCapabilitiesService';\nimport { CompanyCurrenciesService } from './services/CompanyCurrenciesService';\nimport { CompanyCustomerService } from './services/CompanyCustomerService';\nimport { CompanyCustomerAddressService } from './services/CompanyCustomerAddressService';\nimport { CompanyCustomerContactService } from './services/CompanyCustomerContactService';\nimport { CompanyCustomerContactsService } from './services/CompanyCustomerContactsService';\nimport { CompanyCustomerContactTagsService } from './services/CompanyCustomerContactTagsService';\nimport { CompanyCustomerEventService } from './services/CompanyCustomerEventService';\nimport { CompanyCustomerEventsService } from './services/CompanyCustomerEventsService';\nimport { CompanyCustomerEventsMeetingService } from './services/CompanyCustomerEventsMeetingService';\nimport { CompanyCustomerEventsMeetingsService } from './services/CompanyCustomerEventsMeetingsService';\nimport { CompanyCustomerEventsNoteService } from './services/CompanyCustomerEventsNoteService';\nimport { CompanyCustomerEventsNotesService } from './services/CompanyCustomerEventsNotesService';\nimport { CompanyCustomerEventsTaskService } from './services/CompanyCustomerEventsTaskService';\nimport { CompanyCustomerEventsTasksService } from './services/CompanyCustomerEventsTasksService';\nimport { CompanyCustomerFileAttachmentService } from './services/CompanyCustomerFileAttachmentService';\nimport { CompanyCustomerManagersService } from './services/CompanyCustomerManagersService';\nimport { CompanyCustomersService } from './services/CompanyCustomersService';\nimport { CompanyCustomersExtendedService } from './services/CompanyCustomersExtendedService';\nimport { CompanyCustomerTagsService } from './services/CompanyCustomerTagsService';\nimport { CompanyImageService } from './services/CompanyImageService';\nimport { CompanyImagesService } from './services/CompanyImagesService';\nimport { CompanyManagersService } from './services/CompanyManagersService';\nimport { CompanyProfilesService } from './services/CompanyProfilesService';\nimport { CompanyProjectFileAttachmentService } from './services/CompanyProjectFileAttachmentService';\nimport { CompanyRecruitmentManagersService } from './services/CompanyRecruitmentManagersService';\nimport { CompanyResumesService } from './services/CompanyResumesService';\nimport { CompanySubcontractorGroupService } from './services/CompanySubcontractorGroupService';\nimport { CompanySubcontractorGroupMembersService } from './services/CompanySubcontractorGroupMembersService';\nimport { CompanySubcontractorGroupsService } from './services/CompanySubcontractorGroupsService';\nimport { CompanyTagService } from './services/CompanyTagService';\nimport { CompanyTagsService } from './services/CompanyTagsService';\nimport { CompanyTeamService } from './services/CompanyTeamService';\nimport { CompanyTeamManagersService } from './services/CompanyTeamManagersService';\nimport { CompanyTeamMemberService } from './services/CompanyTeamMemberService';\nimport { CompanyTeamMembersService } from './services/CompanyTeamMembersService';\nimport { CompanyTeamsService } from './services/CompanyTeamsService';\nimport { CompanyTeamUsersService } from './services/CompanyTeamUsersService';\nimport { CompanyUserService } from './services/CompanyUserService';\nimport { CompanyUserConvertService } from './services/CompanyUserConvertService';\nimport { CompanyUserEmployeeEventService } from './services/CompanyUserEmployeeEventService';\nimport { CompanyUserEmployeeEventMeetingService } from './services/CompanyUserEmployeeEventMeetingService';\nimport { CompanyUserEmployeeEventNoteService } from './services/CompanyUserEmployeeEventNoteService';\nimport { CompanyUserEmployeeEventsService } from './services/CompanyUserEmployeeEventsService';\nimport { CompanyUserEmployeeEventsMeetingsService } from './services/CompanyUserEmployeeEventsMeetingsService';\nimport { CompanyUserEmployeeEventsNotesService } from './services/CompanyUserEmployeeEventsNotesService';\nimport { CompanyUserEmployeeEventsTasksService } from './services/CompanyUserEmployeeEventsTasksService';\nimport { CompanyUserEmployeeEventTaskService } from './services/CompanyUserEmployeeEventTaskService';\nimport { CompanyUserFullService } from './services/CompanyUserFullService';\nimport { CompanyUserPermissionsService } from './services/CompanyUserPermissionsService';\nimport { CompanyUserProfileService } from './services/CompanyUserProfileService';\nimport { CompanyUserProfileCommitmentService } from './services/CompanyUserProfileCommitmentService';\nimport { CompanyUserProfileEducationService } from './services/CompanyUserProfileEducationService';\nimport { CompanyUserProfileEmployerService } from './services/CompanyUserProfileEmployerService';\nimport { CompanyUserProfileExtSkillService } from './services/CompanyUserProfileExtSkillService';\nimport { CompanyUserProfileImportService } from './services/CompanyUserProfileImportService';\nimport { CompanyUserProfileLanguageService } from './services/CompanyUserProfileLanguageService';\nimport { CompanyUserProfileLanguagesService } from './services/CompanyUserProfileLanguagesService';\nimport { CompanyUserProfilePresentationService } from './services/CompanyUserProfilePresentationService';\nimport { CompanyUserProfileReferenceService } from './services/CompanyUserProfileReferenceService';\nimport { CompanyUserProfilesService } from './services/CompanyUserProfilesService';\nimport { CompanyUserProfileSkillService } from './services/CompanyUserProfileSkillService';\nimport { CompanyUserProfileTrainingService } from './services/CompanyUserProfileTrainingService';\nimport { CompanyUserProfileWorkExperienceService } from './services/CompanyUserProfileWorkExperienceService';\nimport { CompanyUserResumeService } from './services/CompanyUserResumeService';\nimport { CompanyUserResumesService } from './services/CompanyUserResumesService';\nimport { CompanyUserRolesService } from './services/CompanyUserRolesService';\nimport { CompanyUsersService } from './services/CompanyUsersService';\nimport { CompanyUsersExtendedService } from './services/CompanyUsersExtendedService';\nimport { CompanyUserSkillService } from './services/CompanyUserSkillService';\nimport { CompanyUserSkillsService } from './services/CompanyUserSkillsService';\nimport { CompanyUserSubcontractorService } from './services/CompanyUserSubcontractorService';\nimport { CompanyUserSubcontractorEventService } from './services/CompanyUserSubcontractorEventService';\nimport { CompanyUserSubcontractorEventMeetingService } from './services/CompanyUserSubcontractorEventMeetingService';\nimport { CompanyUserSubcontractorEventNoteService } from './services/CompanyUserSubcontractorEventNoteService';\nimport { CompanyUserSubcontractorEventsService } from './services/CompanyUserSubcontractorEventsService';\nimport { CompanyUserSubcontractorEventsMeetingsService } from './services/CompanyUserSubcontractorEventsMeetingsService';\nimport { CompanyUserSubcontractorEventsNotesService } from './services/CompanyUserSubcontractorEventsNotesService';\nimport { CompanyUserSubcontractorEventsTasksService } from './services/CompanyUserSubcontractorEventsTasksService';\nimport { CompanyUserSubcontractorEventTaskService } from './services/CompanyUserSubcontractorEventTaskService';\nimport { CompanyUserSubcontractorFileAttachmentService } from './services/CompanyUserSubcontractorFileAttachmentService';\nimport { CompanyUserSubcontractorFileAttachmentsService } from './services/CompanyUserSubcontractorFileAttachmentsService';\nimport { CompanyUserSubcontractorRolesService } from './services/CompanyUserSubcontractorRolesService';\nimport { CompanyUserSubcontractorsService } from './services/CompanyUserSubcontractorsService';\nimport { CompanyUserTagsService } from './services/CompanyUserTagsService';\nimport { CompanyUserTeamsService } from './services/CompanyUserTeamsService';\nimport { CompanyWebhookService } from './services/CompanyWebhookService';\nimport { CompanyWebhooksService } from './services/CompanyWebhooksService';\nimport { DynamicCompanyUserResumeService } from './services/DynamicCompanyUserResumeService';\nimport { KeywordSearchService } from './services/KeywordSearchService';\nimport { MentionsService } from './services/MentionsService';\nimport { PartnersService } from './services/PartnersService';\nimport { ProjectService } from './services/ProjectService';\nimport { ProjectAssignmentService } from './services/ProjectAssignmentService';\nimport { ProjectAssignmentMemberService } from './services/ProjectAssignmentMemberService';\nimport { ProjectAssignmentsService } from './services/ProjectAssignmentsService';\nimport { ProjectAssignmentSkillsService } from './services/ProjectAssignmentSkillsService';\nimport { ProjectEventService } from './services/ProjectEventService';\nimport { ProjectEventsService } from './services/ProjectEventsService';\nimport { ProjectEventsMeetingService } from './services/ProjectEventsMeetingService';\nimport { ProjectEventsMeetingsService } from './services/ProjectEventsMeetingsService';\nimport { ProjectEventsNoteService } from './services/ProjectEventsNoteService';\nimport { ProjectEventsNotesService } from './services/ProjectEventsNotesService';\nimport { ProjectEventsTaskService } from './services/ProjectEventsTaskService';\nimport { ProjectEventsTasksService } from './services/ProjectEventsTasksService';\nimport { ProjectPipelinesService } from './services/ProjectPipelinesService';\nimport { ProjectReferenceService } from './services/ProjectReferenceService';\nimport { ProjectReferencesService } from './services/ProjectReferencesService';\nimport { ProjectsService } from './services/ProjectsService';\nimport { ProjectTagsService } from './services/ProjectTagsService';\nimport { RecruitmentSourcesService } from './services/RecruitmentSourcesService';\nimport { SearchCompanyCandidateService } from './services/SearchCompanyCandidateService';\nimport { SearchCompanyCustomerContactService } from './services/SearchCompanyCustomerContactService';\nimport { SearchCompanyCustomersService } from './services/SearchCompanyCustomersService';\nimport { SearchCompanyUserService } from './services/SearchCompanyUserService';\nimport { SearchProjectService } from './services/SearchProjectService';\nimport { SkillSearchService } from './services/SkillSearchService';\nimport { SkillSearchTermService } from './services/SkillSearchTermService';\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\nexport class Cinode {\n    public readonly absence: AbsenceService;\n    public readonly absences: AbsencesService;\n    public readonly absenceType: AbsenceTypeService;\n    public readonly availability: AvailabilityService;\n    public readonly company: CompanyService;\n    public readonly companyAddressUsers: CompanyAddressUsersService;\n    public readonly companyCandidate: CompanyCandidateService;\n    public readonly companyCandidateEvent: CompanyCandidateEventService;\n    public readonly companyCandidateEventMeeting: CompanyCandidateEventMeetingService;\n    public readonly companyCandidateEventMeetings: CompanyCandidateEventMeetingsService;\n    public readonly companyCandidateEventNote: CompanyCandidateEventNoteService;\n    public readonly companyCandidateEventNotes: CompanyCandidateEventNotesService;\n    public readonly companyCandidateEvents: CompanyCandidateEventsService;\n    public readonly companyCandidateEventTask: CompanyCandidateEventTaskService;\n    public readonly companyCandidateEventTasks: CompanyCandidateEventTasksService;\n    public readonly companyCandidateFileAttachment: CompanyCandidateFileAttachmentService;\n    public readonly companyCandidateFileAttachments: CompanyCandidateFileAttachmentsService;\n    public readonly companyCandidatePipelines: CompanyCandidatePipelinesService;\n    public readonly companyCandidates: CompanyCandidatesService;\n    public readonly companyCandidateSkills: CompanyCandidateSkillsService;\n    public readonly companyCandidateUriAttachment: CompanyCandidateUriAttachmentService;\n    public readonly companyCandidateUriAttachments: CompanyCandidateUriAttachmentsService;\n    public readonly companyCandidateUser: CompanyCandidateUserService;\n    public readonly companyCapabilities: CompanyCapabilitiesService;\n    public readonly companyCurrencies: CompanyCurrenciesService;\n    public readonly companyCustomer: CompanyCustomerService;\n    public readonly companyCustomerAddress: CompanyCustomerAddressService;\n    public readonly companyCustomerContact: CompanyCustomerContactService;\n    public readonly companyCustomerContacts: CompanyCustomerContactsService;\n    public readonly companyCustomerContactTags: CompanyCustomerContactTagsService;\n    public readonly companyCustomerEvent: CompanyCustomerEventService;\n    public readonly companyCustomerEvents: CompanyCustomerEventsService;\n    public readonly companyCustomerEventsMeeting: CompanyCustomerEventsMeetingService;\n    public readonly companyCustomerEventsMeetings: CompanyCustomerEventsMeetingsService;\n    public readonly companyCustomerEventsNote: CompanyCustomerEventsNoteService;\n    public readonly companyCustomerEventsNotes: CompanyCustomerEventsNotesService;\n    public readonly companyCustomerEventsTask: CompanyCustomerEventsTaskService;\n    public readonly companyCustomerEventsTasks: CompanyCustomerEventsTasksService;\n    public readonly companyCustomerFileAttachment: CompanyCustomerFileAttachmentService;\n    public readonly companyCustomerManagers: CompanyCustomerManagersService;\n    public readonly companyCustomers: CompanyCustomersService;\n    public readonly companyCustomersExtended: CompanyCustomersExtendedService;\n    public readonly companyCustomerTags: CompanyCustomerTagsService;\n    public readonly companyImage: CompanyImageService;\n    public readonly companyImages: CompanyImagesService;\n    public readonly companyManagers: CompanyManagersService;\n    public readonly companyProfiles: CompanyProfilesService;\n    public readonly companyProjectFileAttachment: CompanyProjectFileAttachmentService;\n    public readonly companyRecruitmentManagers: CompanyRecruitmentManagersService;\n    public readonly companyResumes: CompanyResumesService;\n    public readonly companySubcontractorGroup: CompanySubcontractorGroupService;\n    public readonly companySubcontractorGroupMembers: CompanySubcontractorGroupMembersService;\n    public readonly companySubcontractorGroups: CompanySubcontractorGroupsService;\n    public readonly companyTag: CompanyTagService;\n    public readonly companyTags: CompanyTagsService;\n    public readonly companyTeam: CompanyTeamService;\n    public readonly companyTeamManagers: CompanyTeamManagersService;\n    public readonly companyTeamMember: CompanyTeamMemberService;\n    public readonly companyTeamMembers: CompanyTeamMembersService;\n    public readonly companyTeams: CompanyTeamsService;\n    public readonly companyTeamUsers: CompanyTeamUsersService;\n    public readonly companyUser: CompanyUserService;\n    public readonly companyUserConvert: CompanyUserConvertService;\n    public readonly companyUserEmployeeEvent: CompanyUserEmployeeEventService;\n    public readonly companyUserEmployeeEventMeeting: CompanyUserEmployeeEventMeetingService;\n    public readonly companyUserEmployeeEventNote: CompanyUserEmployeeEventNoteService;\n    public readonly companyUserEmployeeEvents: CompanyUserEmployeeEventsService;\n    public readonly companyUserEmployeeEventsMeetings: CompanyUserEmployeeEventsMeetingsService;\n    public readonly companyUserEmployeeEventsNotes: CompanyUserEmployeeEventsNotesService;\n    public readonly companyUserEmployeeEventsTasks: CompanyUserEmployeeEventsTasksService;\n    public readonly companyUserEmployeeEventTask: CompanyUserEmployeeEventTaskService;\n    public readonly companyUserFull: CompanyUserFullService;\n    public readonly companyUserPermissions: CompanyUserPermissionsService;\n    public readonly companyUserProfile: CompanyUserProfileService;\n    public readonly companyUserProfileCommitment: CompanyUserProfileCommitmentService;\n    public readonly companyUserProfileEducation: CompanyUserProfileEducationService;\n    public readonly companyUserProfileEmployer: CompanyUserProfileEmployerService;\n    public readonly companyUserProfileExtSkill: CompanyUserProfileExtSkillService;\n    public readonly companyUserProfileImport: CompanyUserProfileImportService;\n    public readonly companyUserProfileLanguage: CompanyUserProfileLanguageService;\n    public readonly companyUserProfileLanguages: CompanyUserProfileLanguagesService;\n    public readonly companyUserProfilePresentation: CompanyUserProfilePresentationService;\n    public readonly companyUserProfileReference: CompanyUserProfileReferenceService;\n    public readonly companyUserProfiles: CompanyUserProfilesService;\n    public readonly companyUserProfileSkill: CompanyUserProfileSkillService;\n    public readonly companyUserProfileTraining: CompanyUserProfileTrainingService;\n    public readonly companyUserProfileWorkExperience: CompanyUserProfileWorkExperienceService;\n    public readonly companyUserResume: CompanyUserResumeService;\n    public readonly companyUserResumes: CompanyUserResumesService;\n    public readonly companyUserRoles: CompanyUserRolesService;\n    public readonly companyUsers: CompanyUsersService;\n    public readonly companyUsersExtended: CompanyUsersExtendedService;\n    public readonly companyUserSkill: CompanyUserSkillService;\n    public readonly companyUserSkills: CompanyUserSkillsService;\n    public readonly companyUserSubcontractor: CompanyUserSubcontractorService;\n    public readonly companyUserSubcontractorEvent: CompanyUserSubcontractorEventService;\n    public readonly companyUserSubcontractorEventMeeting: CompanyUserSubcontractorEventMeetingService;\n    public readonly companyUserSubcontractorEventNote: CompanyUserSubcontractorEventNoteService;\n    public readonly companyUserSubcontractorEvents: CompanyUserSubcontractorEventsService;\n    public readonly companyUserSubcontractorEventsMeetings: CompanyUserSubcontractorEventsMeetingsService;\n    public readonly companyUserSubcontractorEventsNotes: CompanyUserSubcontractorEventsNotesService;\n    public readonly companyUserSubcontractorEventsTasks: CompanyUserSubcontractorEventsTasksService;\n    public readonly companyUserSubcontractorEventTask: CompanyUserSubcontractorEventTaskService;\n    public readonly companyUserSubcontractorFileAttachment: CompanyUserSubcontractorFileAttachmentService;\n    public readonly companyUserSubcontractorFileAttachments: CompanyUserSubcontractorFileAttachmentsService;\n    public readonly companyUserSubcontractorRoles: CompanyUserSubcontractorRolesService;\n    public readonly companyUserSubcontractors: CompanyUserSubcontractorsService;\n    public readonly companyUserTags: CompanyUserTagsService;\n    public readonly companyUserTeams: CompanyUserTeamsService;\n    public readonly companyWebhook: CompanyWebhookService;\n    public readonly companyWebhooks: CompanyWebhooksService;\n    public readonly dynamicCompanyUserResume: DynamicCompanyUserResumeService;\n    public readonly keywordSearch: KeywordSearchService;\n    public readonly mentions: MentionsService;\n    public readonly partners: PartnersService;\n    public readonly project: ProjectService;\n    public readonly projectAssignment: ProjectAssignmentService;\n    public readonly projectAssignmentMember: ProjectAssignmentMemberService;\n    public readonly projectAssignments: ProjectAssignmentsService;\n    public readonly projectAssignmentSkills: ProjectAssignmentSkillsService;\n    public readonly projectEvent: ProjectEventService;\n    public readonly projectEvents: ProjectEventsService;\n    public readonly projectEventsMeeting: ProjectEventsMeetingService;\n    public readonly projectEventsMeetings: ProjectEventsMeetingsService;\n    public readonly projectEventsNote: ProjectEventsNoteService;\n    public readonly projectEventsNotes: ProjectEventsNotesService;\n    public readonly projectEventsTask: ProjectEventsTaskService;\n    public readonly projectEventsTasks: ProjectEventsTasksService;\n    public readonly projectPipelines: ProjectPipelinesService;\n    public readonly projectReference: ProjectReferenceService;\n    public readonly projectReferences: ProjectReferencesService;\n    public readonly projects: ProjectsService;\n    public readonly projectTags: ProjectTagsService;\n    public readonly recruitmentSources: RecruitmentSourcesService;\n    public readonly searchCompanyCandidate: SearchCompanyCandidateService;\n    public readonly searchCompanyCustomerContact: SearchCompanyCustomerContactService;\n    public readonly searchCompanyCustomers: SearchCompanyCustomersService;\n    public readonly searchCompanyUser: SearchCompanyUserService;\n    public readonly searchProject: SearchProjectService;\n    public readonly skillSearch: SkillSearchService;\n    public readonly skillSearchTerm: SkillSearchTermService;\n    public readonly request: BaseHttpRequest;\n    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n        this.request = new HttpRequest({\n            BASE: config?.BASE ?? 'https://api.cinode.com',\n            VERSION: config?.VERSION ?? '0.1',\n            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n            CREDENTIALS: config?.CREDENTIALS ?? 'include',\n            TOKEN: config?.TOKEN,\n            USERNAME: config?.USERNAME,\n            PASSWORD: config?.PASSWORD,\n            HEADERS: config?.HEADERS,\n            ENCODE_PATH: config?.ENCODE_PATH,\n        });\n        this.absence = new AbsenceService(this.request);\n        this.absences = new AbsencesService(this.request);\n        this.absenceType = new AbsenceTypeService(this.request);\n        this.availability = new AvailabilityService(this.request);\n        this.company = new CompanyService(this.request);\n        this.companyAddressUsers = new CompanyAddressUsersService(this.request);\n        this.companyCandidate = new CompanyCandidateService(this.request);\n        this.companyCandidateEvent = new CompanyCandidateEventService(this.request);\n        this.companyCandidateEventMeeting = new CompanyCandidateEventMeetingService(this.request);\n        this.companyCandidateEventMeetings = new CompanyCandidateEventMeetingsService(this.request);\n        this.companyCandidateEventNote = new CompanyCandidateEventNoteService(this.request);\n        this.companyCandidateEventNotes = new CompanyCandidateEventNotesService(this.request);\n        this.companyCandidateEvents = new CompanyCandidateEventsService(this.request);\n        this.companyCandidateEventTask = new CompanyCandidateEventTaskService(this.request);\n        this.companyCandidateEventTasks = new CompanyCandidateEventTasksService(this.request);\n        this.companyCandidateFileAttachment = new CompanyCandidateFileAttachmentService(this.request);\n        this.companyCandidateFileAttachments = new CompanyCandidateFileAttachmentsService(this.request);\n        this.companyCandidatePipelines = new CompanyCandidatePipelinesService(this.request);\n        this.companyCandidates = new CompanyCandidatesService(this.request);\n        this.companyCandidateSkills = new CompanyCandidateSkillsService(this.request);\n        this.companyCandidateUriAttachment = new CompanyCandidateUriAttachmentService(this.request);\n        this.companyCandidateUriAttachments = new CompanyCandidateUriAttachmentsService(this.request);\n        this.companyCandidateUser = new CompanyCandidateUserService(this.request);\n        this.companyCapabilities = new CompanyCapabilitiesService(this.request);\n        this.companyCurrencies = new CompanyCurrenciesService(this.request);\n        this.companyCustomer = new CompanyCustomerService(this.request);\n        this.companyCustomerAddress = new CompanyCustomerAddressService(this.request);\n        this.companyCustomerContact = new CompanyCustomerContactService(this.request);\n        this.companyCustomerContacts = new CompanyCustomerContactsService(this.request);\n        this.companyCustomerContactTags = new CompanyCustomerContactTagsService(this.request);\n        this.companyCustomerEvent = new CompanyCustomerEventService(this.request);\n        this.companyCustomerEvents = new CompanyCustomerEventsService(this.request);\n        this.companyCustomerEventsMeeting = new CompanyCustomerEventsMeetingService(this.request);\n        this.companyCustomerEventsMeetings = new CompanyCustomerEventsMeetingsService(this.request);\n        this.companyCustomerEventsNote = new CompanyCustomerEventsNoteService(this.request);\n        this.companyCustomerEventsNotes = new CompanyCustomerEventsNotesService(this.request);\n        this.companyCustomerEventsTask = new CompanyCustomerEventsTaskService(this.request);\n        this.companyCustomerEventsTasks = new CompanyCustomerEventsTasksService(this.request);\n        this.companyCustomerFileAttachment = new CompanyCustomerFileAttachmentService(this.request);\n        this.companyCustomerManagers = new CompanyCustomerManagersService(this.request);\n        this.companyCustomers = new CompanyCustomersService(this.request);\n        this.companyCustomersExtended = new CompanyCustomersExtendedService(this.request);\n        this.companyCustomerTags = new CompanyCustomerTagsService(this.request);\n        this.companyImage = new CompanyImageService(this.request);\n        this.companyImages = new CompanyImagesService(this.request);\n        this.companyManagers = new CompanyManagersService(this.request);\n        this.companyProfiles = new CompanyProfilesService(this.request);\n        this.companyProjectFileAttachment = new CompanyProjectFileAttachmentService(this.request);\n        this.companyRecruitmentManagers = new CompanyRecruitmentManagersService(this.request);\n        this.companyResumes = new CompanyResumesService(this.request);\n        this.companySubcontractorGroup = new CompanySubcontractorGroupService(this.request);\n        this.companySubcontractorGroupMembers = new CompanySubcontractorGroupMembersService(this.request);\n        this.companySubcontractorGroups = new CompanySubcontractorGroupsService(this.request);\n        this.companyTag = new CompanyTagService(this.request);\n        this.companyTags = new CompanyTagsService(this.request);\n        this.companyTeam = new CompanyTeamService(this.request);\n        this.companyTeamManagers = new CompanyTeamManagersService(this.request);\n        this.companyTeamMember = new CompanyTeamMemberService(this.request);\n        this.companyTeamMembers = new CompanyTeamMembersService(this.request);\n        this.companyTeams = new CompanyTeamsService(this.request);\n        this.companyTeamUsers = new CompanyTeamUsersService(this.request);\n        this.companyUser = new CompanyUserService(this.request);\n        this.companyUserConvert = new CompanyUserConvertService(this.request);\n        this.companyUserEmployeeEvent = new CompanyUserEmployeeEventService(this.request);\n        this.companyUserEmployeeEventMeeting = new CompanyUserEmployeeEventMeetingService(this.request);\n        this.companyUserEmployeeEventNote = new CompanyUserEmployeeEventNoteService(this.request);\n        this.companyUserEmployeeEvents = new CompanyUserEmployeeEventsService(this.request);\n        this.companyUserEmployeeEventsMeetings = new CompanyUserEmployeeEventsMeetingsService(this.request);\n        this.companyUserEmployeeEventsNotes = new CompanyUserEmployeeEventsNotesService(this.request);\n        this.companyUserEmployeeEventsTasks = new CompanyUserEmployeeEventsTasksService(this.request);\n        this.companyUserEmployeeEventTask = new CompanyUserEmployeeEventTaskService(this.request);\n        this.companyUserFull = new CompanyUserFullService(this.request);\n        this.companyUserPermissions = new CompanyUserPermissionsService(this.request);\n        this.companyUserProfile = new CompanyUserProfileService(this.request);\n        this.companyUserProfileCommitment = new CompanyUserProfileCommitmentService(this.request);\n        this.companyUserProfileEducation = new CompanyUserProfileEducationService(this.request);\n        this.companyUserProfileEmployer = new CompanyUserProfileEmployerService(this.request);\n        this.companyUserProfileExtSkill = new CompanyUserProfileExtSkillService(this.request);\n        this.companyUserProfileImport = new CompanyUserProfileImportService(this.request);\n        this.companyUserProfileLanguage = new CompanyUserProfileLanguageService(this.request);\n        this.companyUserProfileLanguages = new CompanyUserProfileLanguagesService(this.request);\n        this.companyUserProfilePresentation = new CompanyUserProfilePresentationService(this.request);\n        this.companyUserProfileReference = new CompanyUserProfileReferenceService(this.request);\n        this.companyUserProfiles = new CompanyUserProfilesService(this.request);\n        this.companyUserProfileSkill = new CompanyUserProfileSkillService(this.request);\n        this.companyUserProfileTraining = new CompanyUserProfileTrainingService(this.request);\n        this.companyUserProfileWorkExperience = new CompanyUserProfileWorkExperienceService(this.request);\n        this.companyUserResume = new CompanyUserResumeService(this.request);\n        this.companyUserResumes = new CompanyUserResumesService(this.request);\n        this.companyUserRoles = new CompanyUserRolesService(this.request);\n        this.companyUsers = new CompanyUsersService(this.request);\n        this.companyUsersExtended = new CompanyUsersExtendedService(this.request);\n        this.companyUserSkill = new CompanyUserSkillService(this.request);\n        this.companyUserSkills = new CompanyUserSkillsService(this.request);\n        this.companyUserSubcontractor = new CompanyUserSubcontractorService(this.request);\n        this.companyUserSubcontractorEvent = new CompanyUserSubcontractorEventService(this.request);\n        this.companyUserSubcontractorEventMeeting = new CompanyUserSubcontractorEventMeetingService(this.request);\n        this.companyUserSubcontractorEventNote = new CompanyUserSubcontractorEventNoteService(this.request);\n        this.companyUserSubcontractorEvents = new CompanyUserSubcontractorEventsService(this.request);\n        this.companyUserSubcontractorEventsMeetings = new CompanyUserSubcontractorEventsMeetingsService(this.request);\n        this.companyUserSubcontractorEventsNotes = new CompanyUserSubcontractorEventsNotesService(this.request);\n        this.companyUserSubcontractorEventsTasks = new CompanyUserSubcontractorEventsTasksService(this.request);\n        this.companyUserSubcontractorEventTask = new CompanyUserSubcontractorEventTaskService(this.request);\n        this.companyUserSubcontractorFileAttachment = new CompanyUserSubcontractorFileAttachmentService(this.request);\n        this.companyUserSubcontractorFileAttachments = new CompanyUserSubcontractorFileAttachmentsService(this.request);\n        this.companyUserSubcontractorRoles = new CompanyUserSubcontractorRolesService(this.request);\n        this.companyUserSubcontractors = new CompanyUserSubcontractorsService(this.request);\n        this.companyUserTags = new CompanyUserTagsService(this.request);\n        this.companyUserTeams = new CompanyUserTeamsService(this.request);\n        this.companyWebhook = new CompanyWebhookService(this.request);\n        this.companyWebhooks = new CompanyWebhooksService(this.request);\n        this.dynamicCompanyUserResume = new DynamicCompanyUserResumeService(this.request);\n        this.keywordSearch = new KeywordSearchService(this.request);\n        this.mentions = new MentionsService(this.request);\n        this.partners = new PartnersService(this.request);\n        this.project = new ProjectService(this.request);\n        this.projectAssignment = new ProjectAssignmentService(this.request);\n        this.projectAssignmentMember = new ProjectAssignmentMemberService(this.request);\n        this.projectAssignments = new ProjectAssignmentsService(this.request);\n        this.projectAssignmentSkills = new ProjectAssignmentSkillsService(this.request);\n        this.projectEvent = new ProjectEventService(this.request);\n        this.projectEvents = new ProjectEventsService(this.request);\n        this.projectEventsMeeting = new ProjectEventsMeetingService(this.request);\n        this.projectEventsMeetings = new ProjectEventsMeetingsService(this.request);\n        this.projectEventsNote = new ProjectEventsNoteService(this.request);\n        this.projectEventsNotes = new ProjectEventsNotesService(this.request);\n        this.projectEventsTask = new ProjectEventsTaskService(this.request);\n        this.projectEventsTasks = new ProjectEventsTasksService(this.request);\n        this.projectPipelines = new ProjectPipelinesService(this.request);\n        this.projectReference = new ProjectReferenceService(this.request);\n        this.projectReferences = new ProjectReferencesService(this.request);\n        this.projects = new ProjectsService(this.request);\n        this.projectTags = new ProjectTagsService(this.request);\n        this.recruitmentSources = new RecruitmentSourcesService(this.request);\n        this.searchCompanyCandidate = new SearchCompanyCandidateService(this.request);\n        this.searchCompanyCustomerContact = new SearchCompanyCustomerContactService(this.request);\n        this.searchCompanyCustomers = new SearchCompanyCustomersService(this.request);\n        this.searchCompanyUser = new SearchCompanyUserService(this.request);\n        this.searchProject = new SearchProjectService(this.request);\n        this.skillSearch = new SkillSearchService(this.request);\n        this.skillSearchTerm = new SkillSearchTermService(this.request);\n    }\n}\n\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class AxiosHttpRequest extends BaseHttpRequest {\n\n    constructor(config: OpenAPIConfig) {\n        super(config);\n    }\n\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */\n    public override request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n        return __request(this.config, options);\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n    constructor(public readonly config: OpenAPIConfig) {}\n\n    public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse, AxiosInstance } from 'axios';\nimport FormData from 'form-data';\n\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const isSuccess = (status: number): boolean => {\n    return status >= 200 && status < 300;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions, formData?: FormData): Promise<Record<string, string>> => {\n    const [token, username, password, additionalHeaders] = await Promise.all([\n        resolve(options, config.TOKEN),\n        resolve(options, config.USERNAME),\n        resolve(options, config.PASSWORD),\n        resolve(options, config.HEADERS),\n    ]);\n\n    const formHeaders = typeof formData?.getHeaders === 'function' && formData?.getHeaders() || {}\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n        ...formHeaders,\n    })\n    .filter(([_, value]) => isDefined(value))\n    .reduce((headers, [key, value]) => ({\n        ...headers,\n        [key]: String(value),\n    }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return headers;\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        return options.body;\n    }\n    return undefined;\n};\n\nexport const sendRequest = async <T>(\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Record<string, string>,\n    onCancel: OnCancel,\n    axiosClient: AxiosInstance\n): Promise<AxiosResponse<T>> => {\n    const source = axios.CancelToken.source();\n\n    const requestConfig: AxiosRequestConfig = {\n        url,\n        headers,\n        data: body ?? formData,\n        method: options.method,\n        withCredentials: config.WITH_CREDENTIALS,\n        cancelToken: source.token,\n    };\n\n    onCancel(() => source.cancel('The user aborted a request.'));\n\n    try {\n        return await axiosClient.request(requestConfig);\n    } catch (error) {\n        const axiosError = error as AxiosError<T>;\n        if (axiosError.response) {\n            return axiosError.response;\n        }\n        throw error;\n    }\n};\n\nexport const getResponseHeader = (response: AxiosResponse<any>, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers[responseHeader];\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = (response: AxiosResponse<any>): any => {\n    if (response.status !== 204) {\n        return response.data;\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @param axiosClient The axios client instance to use\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions, axiosClient: AxiosInstance = axios): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options, formData);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel, axiosClient);\n                const responseBody = getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: isSuccess(response.status),\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                if (this.#resolve) this.#resolve(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                if (this.#reject) this.#reject(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        if (this.#reject) this.#reject(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsenceAddEditModel } from '../models/AbsenceAddEditModel';\nimport type { AbsencePeriodModel } from '../models/AbsencePeriodModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence period by id\n     * @param companyId Your company id\n     * @param companyUserId The id of the actual user\n     * @param id The id for the requested absence period\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */\n    public absence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Absence Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */\n    public updateAbsence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: AbsenceAddEditModel,\n    ): CancelablePromise<AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete absence\n     * @param companyId Company Id\n     * @param companyUserId Customer Id\n     * @param id Customer Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteAbsence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns AbsencePeriodModel Created\n     * @throws ApiError\n     */\n    public newAbsence(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: AbsenceAddEditModel,\n    ): CancelablePromise<any | AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsencePeriodDtoModel } from '../models/AbsencePeriodDtoModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsencesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence period by company user id\n     * @param companyId Your Cinode Company id\n     * @param companyUserId The id of the actual User\n     * @returns AbsencePeriodDtoModel All went well\n     * @throws ApiError\n     */\n    public absences(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<AbsencePeriodDtoModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsenceTypeModel } from '../models/AbsenceTypeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsenceTypeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence types for company\n     * @param companyId\n     * @returns AbsenceTypeModel All went well\n     * @throws ApiError\n     */\n    public absenceTypes(\n        companyId: number,\n    ): CancelablePromise<Array<AbsenceTypeModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/absence/types',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AvailabilityFilterModel } from '../models/AvailabilityFilterModel';\nimport type { AvailabilityModel } from '../models/AvailabilityModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AvailabilityService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get availability for company users. Omitting companyUserId gets availability for all company users in company.\n     * @param companyId Your Cinode Company id\n     * @param requestBody Filter options\n     * @returns AvailabilityModel All went well\n     * @throws ApiError\n     */\n    public searchAvailability(\n        companyId: number,\n        requestBody?: AvailabilityFilterModel,\n    ): CancelablePromise<Array<AvailabilityModel>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/availability',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyModel } from '../models/CompanyModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company by id\n     * @param companyId CompanyId\n     * @returns CompanyModel All went well\n     * @throws ApiError\n     */\n    public company(\n        companyId: number,\n    ): CancelablePromise<CompanyModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyAddressUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list for an address\n     * @param companyId Company Id\n     * @param id Address Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyAddressUsers(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/addresses/{id}/users',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateAddInviteModel } from '../models/CompanyCandidateAddInviteModel';\nimport type { CompanyCandidateAddModel } from '../models/CompanyCandidateAddModel';\nimport type { CompanyCandidateExtendedModel } from '../models/CompanyCandidateExtendedModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */\n    public candidate(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyCandidatePatchDocument` for full type information per property\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete candidate from the system\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidate(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param requestBody CompanyCandidateAddModel\n     * @returns any All went well\n     * @returns CompanyCandidateExtendedModel Created\n     * @throws ApiError\n     */\n    public addCompanyCandidate(\n        companyId: number,\n        requestBody?: CompanyCandidateAddModel,\n    ): CancelablePromise<any | CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Invite the CompanyCandidate to create their own Cinode account\n     * A email is sent with your message and details for how to login\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Model with data about the candidate needed for the invitation\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public inviteCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyCandidateAddInviteModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/invite',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventModel } from '../models/CompanyCandidateEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates event by id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEvent(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventMeetingModel } from '../models/CompanyCandidateEventMeetingModel';\nimport type { EventMeetingAddEditModel } from '../models/EventMeetingAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates meeting event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Meeting Event details\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventMeetingAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate meeting event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Meeting Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events meetings list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateMeetingEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventNoteModel } from '../models/CompanyCandidateEventNoteModel';\nimport type { EventNoteAddEditModel } from '../models/EventNoteAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates note event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Note Event details\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventNoteAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate note event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Note Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events notes list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateNoteEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEvents(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventTaskModel } from '../models/CompanyCandidateEventTaskModel';\nimport type { EventTaskAddEditModel } from '../models/EventTaskAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates task event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Task Event details\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventTaskAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate task event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Task Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events tasks list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateTaskEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate File Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getCandidateAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateFileAttachmentListModel } from '../models/CompanyCandidateFileAttachmentListModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateFileAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Upload Candidate File Attachment\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyCandidateFileAttachmentListModel Created\n     * @throws ApiError\n     */\n    public candidateAttachment(\n        id: number,\n        companyId: number,\n        formData?: {\n            Files: Array<Blob>;\n            Title: string;\n            Description?: string;\n        },\n    ): CancelablePromise<CompanyCandidateFileAttachmentListModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/attachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidatePipelineModel } from '../models/CompanyCandidatePipelineModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidatePipelinesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get candidate pipelines\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidatePipelineModel All went well\n     * @throws ApiError\n     */\n    public candidatePipelines(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCandidatePipelineModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/pipelines',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateBaseModel } from '../models/CompanyCandidateBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidatesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidates\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidateBaseModel All went well\n     * @throws ApiError\n     */\n    public candidates(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCandidateBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateSkillAddModel } from '../models/CompanyCandidateSkillAddModel';\nimport type { CompanyCandidateSkillModel } from '../models/CompanyCandidateSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add a Skill to company candidate\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/19870/skills\n     * {\n         * \"name\": \"SQL\",\n         * \"companyCandidateId\": 19870,\n         * \"keywordSynonymId\": 577,\n         * \"languageId\":1\n         * }\n         * @param companyId Company Id\n         * @param candidateId CandidateId Id\n         * @param requestBody CompanyCandidateSkillAddEditModel\n         * @returns CompanyCandidateSkillModel All went well\n         * @throws ApiError\n         */\n        public newCompanyCandidateSkill(\n            companyId: number,\n            candidateId: number,\n            requestBody?: CompanyCandidateSkillAddModel,\n        ): CancelablePromise<CompanyCandidateSkillModel> {\n            return this.httpRequest.request({\n                method: 'POST',\n                url: '/v0.1/companies/{companyId}/candidates/{candidateId}/skills',\n                path: {\n                    'companyId': companyId,\n                    'candidateId': candidateId,\n                },\n                body: requestBody,\n                mediaType: 'application/json-patch+json',\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    403: `Forbidden request`,\n                    404: `Resource not found`,\n                    500: `Server error`,\n                },\n            });\n        }\n        /**\n         * Delete Candidate Skill\n         * Sample request:\n         *\n         * DELETE /v0.1/companies/1/candidates/19870/skills/577\n         * @param companyId Company Id\n         * @param candidateId CandidateId Id\n         * @param id Skill Keyword Id\n         * @returns any All went well\n         * @throws ApiError\n         */\n        public deleteCompanyCandidateSkill(\n            companyId: number,\n            candidateId: number,\n            id: number,\n        ): CancelablePromise<any> {\n            return this.httpRequest.request({\n                method: 'DELETE',\n                url: '/v0.1/companies/{companyId}/candidates/{candidateId}/skills/{id}',\n                path: {\n                    'companyId': companyId,\n                    'candidateId': candidateId,\n                    'id': id,\n                },\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateUriAttachmentAddModel } from '../models/CompanyCandidateUriAttachmentAddModel';\nimport type { CompanyCandidateUriAttachmentModel } from '../models/CompanyCandidateUriAttachmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUriAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param requestBody\n     * @returns CompanyCandidateUriAttachmentModel Created\n     * @throws ApiError\n     */\n    public candidateUriAttachment(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCandidateUriAttachmentAddModel,\n    ): CancelablePromise<CompanyCandidateUriAttachmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n    /**\n     * Delete Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param attachmentId\n     * @returns any Success\n     * @throws ApiError\n     */\n    public deleteCandidateUriAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateUriAttachmentModel } from '../models/CompanyCandidateUriAttachmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUriAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate Uri Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns CompanyCandidateUriAttachmentModel All went well\n     * @throws ApiError\n     */\n    public getCandidateUriAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<CompanyCandidateUriAttachmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateAddCandidateUserModel } from '../models/CompanyCandidateAddCandidateUserModel';\nimport type { CompanyUserCandidateModel } from '../models/CompanyUserCandidateModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Create an account for a candidate.\n     * No email is sent to the candidate, you will have to communicate login details to the candidate yourself.\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Basic account information\n     * @returns CompanyUserCandidateModel All went well\n     * @throws ApiError\n     */\n    public addCandidateUserFromCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyCandidateAddCandidateUserModel,\n    ): CancelablePromise<CompanyUserCandidateModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/user',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCapabilitiesModel } from '../models/CompanyCapabilitiesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCapabilitiesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company capabilities\n     * @param companyId CompanyId\n     * @returns CompanyCapabilitiesModel All went well\n     * @throws ApiError\n     */\n    public companyCapabilities(\n        companyId: number,\n    ): CancelablePromise<CompanyCapabilitiesModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/capabilities',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CurrencyModel } from '../models/CurrencyModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCurrenciesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company currencies\n     * @param companyId Company Id\n     * @returns CurrencyModel All went well\n     * @throws ApiError\n     */\n    public companyCurrencies(\n        companyId: number,\n    ): CancelablePromise<Array<CurrencyModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/currencies',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerAddModel } from '../models/CompanyCustomerAddModel';\nimport type { CompanyCustomerDeleteModel } from '../models/CompanyCustomerDeleteModel';\nimport type { CompanyCustomerEditModel } from '../models/CompanyCustomerEditModel';\nimport type { CompanyCustomerModel } from '../models/CompanyCustomerModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customer by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId\n     * @param id\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public getCompanyCustomer(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param requestBody CompanyCustomerAddEditModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCustomerEditModel,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody Patch of CompanyCustomerPatchModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerDeleteModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCustomerDeleteModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerAddModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomer(\n        companyId: number,\n        requestBody?: CompanyCustomerAddModel,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerAddressAddEditModel } from '../models/CompanyCustomerAddressAddEditModel';\nimport type { CompanyCustomerAddressModel } from '../models/CompanyCustomerAddressModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerAddressService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer address by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public customerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Customer Address Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public editCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n        requestBody?: CompanyCustomerAddressAddEditModel,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        requestBody?: CompanyCustomerAddressAddEditModel,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerContactAddEditModel } from '../models/CompanyCustomerContactAddEditModel';\nimport type { CompanyCustomerContactModel } from '../models/CompanyCustomerContactModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer contact by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public contact(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public editCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        id: number,\n        requestBody?: CompanyCustomerContactAddEditModel,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        requestBody?: CompanyCustomerContactAddEditModel,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerContactModel } from '../models/CompanyCustomerContactModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer contact list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public contacts(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CompanyCustomerContactModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for CustomerContact\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the contact.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/contacts/5360/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param contactId CustomerContact Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyTagModel All went well\n                 * @throws ApiError\n                 */\n                public editCustomerContactTags(\n                    companyId: number,\n                    customerId: number,\n                    contactId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<Array<CompanyTagModel>> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{contactId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'customerId': customerId,\n                            'contactId': contactId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventModel } from '../models/CustomerEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEvent(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer events list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEvents(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventMeetingAddEditModel } from '../models/CustomerEventMeetingAddEditModel';\nimport type { CustomerEventMeetingModel } from '../models/CustomerEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event meeting by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventMeetingAddEditModel,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public newMeeting(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventMeetingAddEditModel,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event meetings list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventMeetings(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventNoteAddEditModel } from '../models/CustomerEventNoteAddEditModel';\nimport type { CustomerEventNoteModel } from '../models/CustomerEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event note by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventNoteAddEditModel,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventNoteAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public newNote(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventNoteAddEditModel,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event notes list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventNotes(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventTaskAddEditModel } from '../models/CustomerEventTaskAddEditModel';\nimport type { CustomerEventTaskModel } from '../models/CustomerEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event task by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventTaskAddEditModel,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public newTask(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventTaskAddEditModel,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event tasks list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventTasks(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getCustomerAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerManagerModel } from '../models/CompanyCustomerManagerModel';\nimport type { CompanyCustomerManagersAddEditModel } from '../models/CompanyCustomerManagersAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer managers\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerManagerModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerManagers(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CompanyCustomerManagerModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/managers',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer responsible\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/22228/managers\n     * {\n         * [\n             * 51096\n             * ]\n             * }\n             * @param companyId Company Id\n             * @param customerId Customer Id\n             * @param requestBody CompanyCustomerManagersAddEditModel\n             * @returns CompanyCustomerManagerModel All went well\n             * @throws ApiError\n             */\n            public addCompanyCustomerResponsible(\n                companyId: number,\n                customerId: number,\n                requestBody?: CompanyCustomerManagersAddEditModel,\n            ): CancelablePromise<Array<CompanyCustomerManagerModel>> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/customers/{customerId}/managers',\n                    path: {\n                        'companyId': companyId,\n                        'customerId': customerId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        403: `Forbidden`,\n                        404: `Not Found`,\n                        500: `Server error`,\n                    },\n                });\n            }\n            /**\n             * Remove customer responsible\n             * Sample request:\n             *\n             * DELETE /v0.1/companies/1/customers/22228/managers/54632\n             * @param companyId Company Id\n             * @param customerId Customer Id\n             * @param id User Id\n             * @returns any All went well\n             * @throws ApiError\n             */\n            public removeCustomerManager(\n                companyId: number,\n                customerId: number,\n                id: number,\n            ): CancelablePromise<any> {\n                return this.httpRequest.request({\n                    method: 'DELETE',\n                    url: '/v0.1/companies/{companyId}/customers/{customerId}/managers/{id}',\n                    path: {\n                        'companyId': companyId,\n                        'customerId': customerId,\n                        'id': id,\n                    },\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerBaseModel } from '../models/CompanyCustomerBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCustomerBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerExtendedModel } from '../models/CompanyCustomerExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomersExtendedService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get extended company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerExtendedModel All went well\n     * @throws ApiError\n     */\n    public customersExtended(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCustomerExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/extended',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerModel } from '../models/CompanyCustomerModel';\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for Customer\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the customer.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyCustomerModel All went well\n                 * @throws ApiError\n                 */\n                public editCustomerTags(\n                    companyId: number,\n                    customerId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<CompanyCustomerModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/customers/{customerId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'customerId': customerId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyImageModel } from '../models/CompanyImageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyImageService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Company Image by Id\n     * @param companyId Company Id\n     * @param id Image id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public companyImage(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyImageModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/images/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Download Company Image\n     * @param companyId Company Id\n     * @param id Image id\n     * @param imageFileName Image File Name\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public companyImageDownload(\n        companyId: number,\n        id: number,\n        imageFileName: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/images/{id}/{imageFileName}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n                'imageFileName': imageFileName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyImageModel } from '../models/CompanyImageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyImagesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Company Images Assigned to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public companyImages(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyImageModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}/images',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Image to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param formData\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public addCompanyImage(\n        companyId: number,\n        id: number,\n        formData?: {\n            File: Blob;\n            SetAsPrimary?: boolean;\n        },\n    ): CancelablePromise<CompanyImageModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{id}/images',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserBaseModel } from '../models/CompanyUserBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company managers\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/managers\n     * @param companyId Company Id\n     * @returns CompanyUserBaseModel All went well\n     * @throws ApiError\n     */\n    public companyManagers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/managers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyProfileFilterModel } from '../models/CompanyProfileFilterModel';\nimport type { CompanyProfilesModel } from '../models/CompanyProfilesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyProfilesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profiles list\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/profiles\n     * {\n         * \"createdOffsetDays\": 90,\n         * \"updatedOffsetDays\": 30,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15,\n             * \"order\": 0,\n             * \"sortBy\": 1\n             * }\n             * }\n             * @param companyId Company Id\n             * @param requestBody Company Profile Filter\n             * @returns CompanyProfilesModel All went well\n             * @throws ApiError\n             */\n            public companyProfiles(\n                companyId: number,\n                requestBody?: CompanyProfileFilterModel,\n            ): CancelablePromise<CompanyProfilesModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/profiles',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        403: `Forbidden request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyProjectFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Project file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getProjectAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyRecruitmentManagerModel } from '../models/CompanyRecruitmentManagerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyRecruitmentManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get recruitment managers\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyRecruitmentManagerModel All went well\n     * @throws ApiError\n     */\n    public recruitmentManagers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyRecruitmentManagerModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/recruitment/managers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserResumeBaseModel } from '../models/CompanyUserResumeBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyResumesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */\n    public companyResumes(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserResumeBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/resumes',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanySubcontractorGroupModel } from '../models/CompanySubcontractorGroupModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Subcontractor Group by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */\n    public getCompanySubcontractorGroup(\n        companyId: number,\n        subcontractorGroupId: number,\n    ): CancelablePromise<CompanySubcontractorGroupModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AddCompanySubcontractorGroupMemberModel } from '../models/AddCompanySubcontractorGroupMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupMembersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param requestBody AddCompanySubcontractorGroupMemberModel\n     * @returns void\n     * @throws ApiError\n     */\n    public addCompanySubcontractorGroupMember(\n        companyId: number,\n        subcontractorGroupId: number,\n        requestBody?: AddCompanySubcontractorGroupMemberModel,\n    ): CancelablePromise<void> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param id Subcontractor Id\n     * @returns void\n     * @throws ApiError\n     */\n    public deleteCompanySubcontractorGroupMember(\n        companyId: number,\n        subcontractorGroupId: number,\n        id: number,\n    ): CancelablePromise<void> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanySubcontractorGroupModel } from '../models/CompanySubcontractorGroupModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Subcontractor Groups by Company Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */\n    public getCompanySubcontractorGroups(\n        companyId: number,\n    ): CancelablePromise<Array<CompanySubcontractorGroupModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTagService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company tag by Id\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags/1\n     * @param companyId Company Id\n     * @param id Tag Id\n     * @returns CompanyTagModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public companyTag(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyTagModel | any> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/tags/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagBaseModel } from '../models/CompanyTagBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company tags\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags\n     * @param companyId Company Id\n     * @returns CompanyTagBaseModel All went well\n     * @throws ApiError\n     */\n    public companyTags(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyTagBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/tags',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamAddEditModel } from '../models/TeamAddEditModel';\nimport type { TeamModel } from '../models/TeamModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team by id\n     * @param companyId Company Id\n     * @param id Event Id\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public team(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update team\n     * Requires access level: CompanyAdmin.\n     * @param id Team Id\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public updateTeam(\n        id: number,\n        companyId: number,\n        requestBody?: TeamAddEditModel,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/teams/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public newTeam(\n        companyId: number,\n        requestBody?: TeamAddEditModel,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { TeamManagerEditModel } from '../models/TeamManagerEditModel';\nimport type { TeamManagerModel } from '../models/TeamManagerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team managers\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public teamManagers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/managers',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team manager\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/teams/1234/managers\n     * {\n         * \"teamId\" : 1234,\n         * \"companyUserId\" : 54632\n         * }\n         * @param companyId Company Id\n         * @param teamId\n         * @param requestBody TeamMemberEditModel\n         * @returns TeamManagerModel All went well\n         * @throws ApiError\n         */\n        public addTeamManager(\n            companyId: number,\n            teamId: string,\n            requestBody?: TeamManagerEditModel,\n        ): CancelablePromise<Array<TeamManagerModel>> {\n            return this.httpRequest.request({\n                method: 'POST',\n                url: '/v0.1/companies/{companyId}/teams/{teamId}/managers',\n                path: {\n                    'companyId': companyId,\n                    'teamId': teamId,\n                },\n                body: requestBody,\n                mediaType: 'application/json-patch+json',\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n        /**\n         * Remove team manager\n         * Sample request:\n         *\n         * DELETE /v0.1/companies/1/teams/1234/managers/54632\n         * @param companyId Company Id\n         * @param teamId Team Id\n         * @param id User Id\n         * @returns any All went well\n         * @throws ApiError\n         */\n        public removeTeamManager(\n            companyId: number,\n            teamId: number,\n            id: number,\n        ): CancelablePromise<any> {\n            return this.httpRequest.request({\n                method: 'DELETE',\n                url: '/v0.1/companies/{companyId}/teams/{teamId}/managers/{id}',\n                path: {\n                    'companyId': companyId,\n                    'teamId': teamId,\n                    'id': id,\n                },\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamMemberAddModel } from '../models/TeamMemberAddModel';\nimport type { TeamMemberEditModel } from '../models/TeamMemberEditModel';\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { TeamMemberMoveModel } from '../models/TeamMemberMoveModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamMemberService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team member\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public getTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberEditModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public updateTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n        requestBody?: TeamMemberEditModel,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public removeTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public addTeamMember(\n        companyId: number,\n        teamId: number,\n        requestBody?: TeamMemberAddModel,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Move team member and associated bookings to another team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberMoveModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public moveTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n        requestBody?: TeamMemberMoveModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}/move',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamMembersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public getTeamMembers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<TeamMemberModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamBaseModel } from '../models/TeamBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get teams list\n     * @param companyId Company Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */\n    public companyTeams(\n        companyId: number,\n    ): CancelablePromise<Array<TeamBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { TeamMemberAddModel } from '../models/TeamMemberAddModel';\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * @deprecated\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public getTeamUsers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * @deprecated\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public addTeamUser(\n        companyId: number,\n        teamId: number,\n        requestBody?: TeamMemberAddModel,\n    ): CancelablePromise<Array<TeamMemberModel>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * @deprecated\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public removeTeamUser(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserAddModel } from '../models/CompanyUserAddModel';\nimport type { CompanyUserEditModel } from '../models/CompanyUserEditModel';\nimport type { CompanyUserFullModel } from '../models/CompanyUserFullModel';\nimport type { CompanyUserModel } from '../models/CompanyUserModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user by id\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserModel All went well\n     * @throws ApiError\n     */\n    public user(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody CompanyUserEditModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUser(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyUserEditModel,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyUserEmployeePatchDocument` for full type information per property\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyUser(\n        companyId: number,\n        id: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete user from the system\n     * Firstly, the user has to be disconnected, which can be done through a PATCH or PUT\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param firstName CompanyUser FirstName\n     * @param lastName CompanyUser LastName\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUser(\n        companyId: number,\n        id: number,\n        firstName?: string,\n        lastName?: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            query: {\n                'firstName': firstName,\n                'lastName': lastName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add company user employee\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserAddModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public addCompanyUser(\n        companyId: number,\n        requestBody?: CompanyUserAddModel,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ConvertCompanyUserToAadAccountModel } from '../models/ConvertCompanyUserToAadAccountModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserConvertService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Convert company user employee to an AAD account\n     * Requires access level: CompanyAdmin.\n     * @param companyUserId Company User Id\n     * @param companyId\n     * @param requestBody ConvertCompanyUserToAadAccountModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public convertUserToAadAccount(\n        companyUserId: number,\n        companyId: string,\n        requestBody?: ConvertCompanyUserToAadAccountModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/convert-aad',\n            path: {\n                'companyUserId': companyUserId,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventModel } from '../models/CompanyUserEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEvent(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventMeetingAddEditModel } from '../models/CompanyUserEventMeetingAddEditModel';\nimport type { CompanyUserEventMeetingModel } from '../models/CompanyUserEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventNoteAddEditModel } from '../models/CompanyUserEventNoteAddEditModel';\nimport type { CompanyUserEventNoteModel } from '../models/CompanyUserEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEvents(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee meetings events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventMeetingList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee notes events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventNoteList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee tasks events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventTaskList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventTaskAddEditModel } from '../models/CompanyUserEventTaskAddEditModel';\nimport type { CompanyUserEventTaskModel } from '../models/CompanyUserEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Creates new employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee's task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserFullModel } from '../models/CompanyUserFullModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserFullService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user, including financial fields, by id\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public userFull(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users-full/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserPermissionsEditModel } from '../models/CompanyUserPermissionsEditModel';\nimport type { RoleModel } from '../models/RoleModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserPermissionsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Update Permissions for Company User\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserPermissionsEditModel\n     * @returns RoleModel All went well\n     * @throws ApiError\n     */\n    public updatePermissions(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserPermissionsEditModel,\n    ): CancelablePromise<Array<RoleModel>> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/permissions',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileAddEditModel } from '../models/CompanyUserProfileAddEditModel';\nimport type { CompanyUserProfileBaseModel } from '../models/CompanyUserProfileBaseModel';\nimport type { CompanyUserProfileFullModel } from '../models/CompanyUserProfileFullModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile by company user id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileFullModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfile(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<CompanyUserProfileFullModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile for user\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileBaseModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfile(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileBaseModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileCommitmentAddEditModel } from '../models/CompanyUserProfileCommitmentAddEditModel';\nimport type { CompanyUserProfileCommitmentModel } from '../models/CompanyUserProfileCommitmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileCommitmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile commitment by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileCommitment Id\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileCommitment(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileCommitment(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileCommitmentAddEditModel,\n    ): CancelablePromise<CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileCommitment(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Commitment\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileCommitmentModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileCommitment(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileCommitmentAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileEducationAddEditModel } from '../models/CompanyUserProfileEducationAddEditModel';\nimport type { CompanyUserProfileEducationModel } from '../models/CompanyUserProfileEducationModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileEducationService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile education by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEducation Id\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileEducationAddEditModel,\n    ): CancelablePromise<CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Education\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileEducation(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEducationModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileEducationAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileEmployerAddEditModel } from '../models/CompanyUserProfileEmployerAddEditModel';\nimport type { CompanyUserProfileEmployerModel } from '../models/CompanyUserProfileEmployerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileEmployerService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile employer by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEmployer Id\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Employer\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileEmployerAddEditModel,\n    ): CancelablePromise<CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Employer\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileEmployer(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Employer profile item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEmployerModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileEmployerAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileExtSkillAddEditModel } from '../models/CompanyUserProfileExtSkillAddEditModel';\nimport type { CompanyUserProfileExtSkillModel } from '../models/CompanyUserProfileExtSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileExtSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile external skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileExtSkill Id\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileExtSkillAddEditModel,\n    ): CancelablePromise<CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Extra Skill Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileExtSkill(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileExtSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileExtSkillModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileExtSkillAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ImportProfileAsyncOperation } from '../models/ImportProfileAsyncOperation';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileImportService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Create new profile import for a user.\n     * This will start an async operation.\n     * - If the operation is started successfully, the response will be `202 Accepted` and the `Location` header will contain the URL to get the status of the operation.\n     * - If the operation is not started successfully, the response will be `400 Bad Request`\n     * @param companyId\n     * @param companyUserId\n     * @param formData\n     * @returns any Accepted\n     * @throws ApiError\n     */\n    public createCompanyUserProfileImport(\n        companyId: number,\n        companyUserId: number,\n        formData?: {\n            File: Blob;\n            MapSkillExperienceYearsToLevel?: boolean;\n        },\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/import',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`,\n            },\n        });\n    }\n    /**\n     * Get current status of the async profile import operation.\n     * This will return the status of an async operation.\n     * - If the operation is still in progress, the response will be `202 Accepted`\n     * - If the operation is completed successfully, the response will be `200 OK` and the `status` property will be `Completed`\n     * - If the operation is completed with errors, the response will be `200 OK` and the `status` property will be `Failed`\n     * @param companyId\n     * @param companyUserId\n     * @param operationId\n     * @returns ImportProfileAsyncOperation Success\n     * @returns any Accepted\n     * @throws ApiError\n     */\n    public getCompanyUserProfileImport(\n        companyId: number,\n        companyUserId: number,\n        operationId: number,\n    ): CancelablePromise<ImportProfileAsyncOperation | any> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/import/{operationId}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'operationId': operationId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileLanguageAddModel } from '../models/CompanyUserProfileLanguageAddModel';\nimport type { CompanyUserProfileLanguageEditModel } from '../models/CompanyUserProfileLanguageEditModel';\nimport type { CompanyUserProfileLanguageModel } from '../models/CompanyUserProfileLanguageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileLanguageService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile language by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileLanguage Id\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileLanguageEditModel,\n    ): CancelablePromise<CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Language Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileLanguage(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileLanguageAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileLanguageModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileLanguageAddModel,\n    ): CancelablePromise<any | CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProfileLanguageModel } from '../models/ProfileLanguageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileLanguagesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Available Profile Languages\n     * @returns ProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public profileLanguages(): CancelablePromise<Array<ProfileLanguageModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/languages',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfilePresentationEditModel } from '../models/CompanyUserProfilePresentationEditModel';\nimport type { CompanyUserProfilePresentationModel } from '../models/CompanyUserProfilePresentationModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfilePresentationService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfilePresentation(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<CompanyUserProfilePresentationModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Profile Presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfilePresentationEditModel\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfilePresentation(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfilePresentationEditModel,\n    ): CancelablePromise<CompanyUserProfilePresentationModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileReferenceAddEditModel } from '../models/CompanyUserProfileReferenceAddEditModel';\nimport type { CompanyUserProfileReferenceModel } from '../models/CompanyUserProfileReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileReferenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile reference by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileReference Id\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileReferenceAddEditModel,\n    ): CancelablePromise<CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Reference Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileReference(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileReferenceModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileReferenceAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileBaseModel } from '../models/CompanyUserProfileBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfilesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profiles list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfiles(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserProfileBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profiles',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileSkillAddModel } from '../models/CompanyUserProfileSkillAddModel';\nimport type { CompanyUserProfileSkillEditModel } from '../models/CompanyUserProfileSkillEditModel';\nimport type { CompanyUserProfileSkillModel } from '../models/CompanyUserProfileSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileSkill Id\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Skill\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileSkillEditModel\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileSkillEditModel,\n    ): CancelablePromise<CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Skill\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileSkill(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Skill to profile\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileSkillModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileSkillAddModel,\n    ): CancelablePromise<any | CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileTrainingAddEditModel } from '../models/CompanyUserProfileTrainingAddEditModel';\nimport type { CompanyUserProfileTrainingModel } from '../models/CompanyUserProfileTrainingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileTrainingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile training by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileTraining Id\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileTrainingAddEditModel,\n    ): CancelablePromise<CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Training Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileTraining(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileTrainingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileTrainingAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileWorkExperienceAddEditModel } from '../models/CompanyUserProfileWorkExperienceAddEditModel';\nimport type { CompanyUserProfileWorkExperienceModel } from '../models/CompanyUserProfileWorkExperienceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileWorkExperienceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile work experience by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileWorkExperience Id\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Work Experience\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileWorkExperienceAddEditModel\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileWorkExperienceAddEditModel,\n    ): CancelablePromise<CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Work Experience Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileWorkExperience(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create WorkExperience Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserWorkExperienceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileWorkExperienceModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileWorkExperienceAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ClassicCompanyUserResumeModel } from '../models/ClassicCompanyUserResumeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserResumeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns ClassicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */\n    public getResume(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<ClassicCompanyUserResumeModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserResumeBaseModel } from '../models/CompanyUserResumeBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserResumesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserResumes(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserResumeBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProjectAssignmentModel } from '../models/CompanyUserProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserRolesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Roles for CompanyUser by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public companyUserRoles(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}/roles',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyUsers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUsersExtendedService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get extended company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyUsersExtended(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/extended',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSkillModel } from '../models/CompanyUserSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Skill Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */\n    public skill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSkillModel } from '../models/CompanyUserSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get skills list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */\n    public skills(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserSkillModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/skills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorAddEditModel } from '../models/CompanyUserSubcontractorAddEditModel';\nimport type { CompanyUserSubcontractorModel } from '../models/CompanyUserSubcontractorModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user by id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */\n    public companySubcontractor(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserSubcontractorModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete subcontractor from the system\n     * This action is irreversible, use with caution\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id Subcontractor Id\n     * @param firstName Subcontractor FirstName\n     * @param lastName Subcontractor LastName\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanySubcontractor(\n        companyId: number,\n        id: number,\n        firstName?: string,\n        lastName?: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            query: {\n                'firstName': firstName,\n                'lastName': lastName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add subcontractor\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserSubcontractorAddEditModel\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */\n    public addCompanyUserSubcontractor(\n        companyId: number,\n        requestBody?: CompanyUserSubcontractorAddEditModel,\n    ): CancelablePromise<CompanyUserSubcontractorModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventModel } from '../models/CompanyUserEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEvent(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventMeetingAddEditModel } from '../models/CompanyUserEventMeetingAddEditModel';\nimport type { CompanyUserEventMeetingModel } from '../models/CompanyUserEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Meeting event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventNoteAddEditModel } from '../models/CompanyUserEventNoteAddEditModel';\nimport type { CompanyUserEventNoteModel } from '../models/CompanyUserEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new subcontractors note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEvents(\n        companyId: number,\n        subcontractorId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/events',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors meetings events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventMeetingList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventsNotes(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventsTasks(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventTaskAddEditModel } from '../models/CompanyUserEventTaskAddEditModel';\nimport type { CompanyUserEventTaskModel } from '../models/CompanyUserEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Creates new subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractor File Attachment by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getSubcontractorAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorFileAttachmentListModel } from '../models/CompanyUserSubcontractorFileAttachmentListModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorFileAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Upload subcontractor file attachment\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyUserSubcontractorFileAttachmentListModel Created\n     * @throws ApiError\n     */\n    public subcontractorAttachment(\n        id: number,\n        companyId: number,\n        formData?: {\n            Files: Array<Blob>;\n            Title: string;\n            Description?: string;\n        },\n    ): CancelablePromise<CompanyUserSubcontractorFileAttachmentListModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}/attachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorRoleMemberModel } from '../models/CompanyUserSubcontractorRoleMemberModel';\nimport type { CompanyUserSubcontractorRolesModel } from '../models/CompanyUserSubcontractorRolesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorRolesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get assigned and prospect roles for subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @returns CompanyUserSubcontractorRolesModel All went well\n     * @throws ApiError\n     */\n    public getSubcontractorRoles(\n        companyId: number,\n        subcontractorId: number,\n    ): CancelablePromise<CompanyUserSubcontractorRolesModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get a specific role, assigned and or prospected, for subcontractor by role id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @param projectAssignmentId Project assignment Id\n     * @returns CompanyUserSubcontractorRoleMemberModel All went well\n     * @throws ApiError\n     */\n    public getSubcontractorRole(\n        companyId: number,\n        subcontractorId: number,\n        projectAssignmentId: number,\n    ): CancelablePromise<CompanyUserSubcontractorRoleMemberModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles/{projectAssignmentId}',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n                'projectAssignmentId': projectAssignmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorBaseModel } from '../models/CompanyUserSubcontractorBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanyUserSubcontractorBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractors(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserSubcontractorBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CompanyUserModel } from '../models/CompanyUserModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for User\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the user.\n     * A new tag will be created if the id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/users/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-new\",\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param companyUserId CompanyUser Id\n                 * @param requestBody CompanyTagModel[]\n                 * @returns CompanyUserModel All went well\n                 * @throws ApiError\n                 */\n                public editCompanyUserTags(\n                    companyId: number,\n                    companyUserId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<CompanyUserModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/users/{companyUserId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'companyUserId': companyUserId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamBaseModel } from '../models/TeamBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserTeamsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get teams for team member\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */\n    public userTeams(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<TeamBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/teams',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { WebhookAddModel } from '../models/WebhookAddModel';\nimport type { WebhookModel } from '../models/WebhookModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyWebhookService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Webhook\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/webhooks\n     * {\n         * \"isActive\": false,\n         * \"endpointUrl\": \"https://webhook.site/7a619ffb-e67c-41fc-8113-083d6013f76c\",\n         * \"configurations\": [\n             * {\n                 * \"entityType\": 1,\n                 * \"actionType\": 1\n                 * }\n                 * ],\n                 * \"credentials\": [\n                     * {\n                         * \"isBasicAuthentication\": true,\n                         * \"headerName\": \"user\",\n                         * \"headerValue\": \"somevalue\"\n                         * }\n                         * ]\n                         * }\n                         * @param companyId Company Id\n                         * @param requestBody WebhookAddModel\n                         * @returns WebhookModel All went well\n                         * @throws ApiError\n                         */\n                        public newWebhook(\n                            companyId: number,\n                            requestBody?: WebhookAddModel,\n                        ): CancelablePromise<WebhookModel> {\n                            return this.httpRequest.request({\n                                method: 'POST',\n                                url: '/v0.1/companies/{companyId}/webhooks',\n                                path: {\n                                    'companyId': companyId,\n                                },\n                                body: requestBody,\n                                mediaType: 'application/json-patch+json',\n                                errors: {\n                                    400: `Incorrect request`,\n                                    401: `Unauthorized request`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server error`,\n                                },\n                            });\n                        }\n                        /**\n                         * Requires access level: CompanyAdmin. Requires module: Webhooks.\n                         * @param companyId\n                         * @param requestBody\n                         * @returns WebhookModel Created\n                         * @throws ApiError\n                         */\n                        public installWebhookManifest(\n                            companyId: number,\n                            requestBody?: Array<WebhookAddModel>,\n                        ): CancelablePromise<Array<WebhookModel>> {\n                            return this.httpRequest.request({\n                                method: 'POST',\n                                url: '/v0.1/companies/{companyId}/webhooks/manifest',\n                                path: {\n                                    'companyId': companyId,\n                                },\n                                body: requestBody,\n                                mediaType: 'application/json-patch+json',\n                                errors: {\n                                    400: `Bad Request`,\n                                    401: `Unauthorized`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server Error`,\n                                },\n                            });\n                        }\n                        /**\n                         * Remove webhook\n                         * Sample request:\n                         *\n                         * DELETE /v0.1/companies/1/webhooks/42a3a220-766c-eb11-8e13-000c29b4e92f\n                         * @param companyId Company Id\n                         * @param id Webhook Id\n                         * @returns any All went well\n                         * @throws ApiError\n                         */\n                        public removeWebhook(\n                            companyId: number,\n                            id: string,\n                        ): CancelablePromise<any> {\n                            return this.httpRequest.request({\n                                method: 'DELETE',\n                                url: '/v0.1/companies/{companyId}/webhooks/{id}',\n                                path: {\n                                    'companyId': companyId,\n                                    'id': id,\n                                },\n                                errors: {\n                                    400: `Incorrect request`,\n                                    401: `Unauthorized request`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server error`,\n                                },\n                            });\n                        }\n                    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { WebhookModel } from '../models/WebhookModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyWebhooksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company webhooks\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/webhooks\n     * @param companyId Company Id\n     * @returns WebhookModel All went well\n     * @throws ApiError\n     */\n    public companyWebhooks(\n        companyId: number,\n    ): CancelablePromise<Array<WebhookModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/webhooks',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { DynamicCompanyUserResumeModel } from '../models/DynamicCompanyUserResumeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class DynamicCompanyUserResumeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns DynamicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */\n    public dynamicResume(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<DynamicCompanyUserResumeModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}/dynamic',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { KeywordModel } from '../models/KeywordModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class KeywordSearchService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search keywords by term\n     * @param companyId Company Id\n     * @param term Search term\n     * @returns KeywordModel All went well\n     * @throws ApiError\n     */\n    public searchKeyword(\n        companyId: number,\n        term: string,\n    ): CancelablePromise<Array<KeywordModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/keywords/search/{term}',\n            path: {\n                'companyId': companyId,\n                'term': term,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { MentionTextModel } from '../models/MentionTextModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class MentionsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Translates any mention-ids in a text to their human readable form.\n     * Translations are access restricted, if you don't have enough access\n     * to get the name of an id, it won't be translated.\n     * @param companyId Company Id\n     * @param requestBody The model with one property, value, which contains the text containing the mentions you're looking to translate.  Example of a text with a mention inside: `\"Hello @(1|123456) can you please consider this role?\"`\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public translateMentions(\n        companyId: number,\n        requestBody?: MentionTextModel,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/mentions/to-natural-text',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PartnersFilterModel } from '../models/PartnersFilterModel';\nimport type { PartnersOverviewModel } from '../models/PartnersOverviewModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class PartnersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Partners by filter\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns PartnersOverviewModel All went well\n     * @throws ApiError\n     */\n    public searchPartners(\n        companyId: number,\n        requestBody?: PartnersFilterModel,\n    ): CancelablePromise<PartnersOverviewModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/partners',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAddEditModel } from '../models/ProjectAddEditModel';\nimport type { ProjectModel } from '../models/ProjectModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public project(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id Project Id\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyProject(\n        id: number,\n        companyId: number,\n        requestBody?: ProjectAddEditModel,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyProject(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public newCompanyProject(\n        companyId: number,\n        requestBody?: ProjectAddEditModel,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentAddModel } from '../models/ProjectAssignmentAddModel';\nimport type { ProjectAssignmentAnnouncementBaseModel } from '../models/ProjectAssignmentAnnouncementBaseModel';\nimport type { ProjectAssignmentAnnounceModel } from '../models/ProjectAssignmentAnnounceModel';\nimport type { ProjectAssignmentEditModel } from '../models/ProjectAssignmentEditModel';\nimport type { ProjectAssignmentModel } from '../models/ProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * @deprecated\n     * Get projectassignment by id (Obsolete)\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public oldProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/projectassignments/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get Role by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public projectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @param requestBody ProjectAssignmentEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n        requestBody?: ProjectAssignmentEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectAssignmentAddEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public newProjectAssignment(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectAssignmentAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Announce a role (ProjectAssignment) to the Partner Network and optionally also to Cinode Market(https://cinode.market/requests).\n     * If you are testing, set the \"PublishForReal\" to \"false\", otherwise you will publish this announcement for real. When you're testing (\"PublishForReal = false) RequestId will be 0 in the response.\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param projectId Project Id\n     * @param projectAssignmentId ProjectAssignment Id\n     * @param companyId\n     * @param requestBody ProjectAssignmentAnnounceModel\n     * @returns ProjectAssignmentAnnouncementBaseModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public announceProjectAssignment(\n        projectId: number,\n        projectAssignmentId: number,\n        companyId: string,\n        requestBody?: ProjectAssignmentAnnounceModel,\n    ): CancelablePromise<ProjectAssignmentAnnouncementBaseModel | any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{projectAssignmentId}/announce',\n            path: {\n                'projectId': projectId,\n                'projectAssignmentId': projectAssignmentId,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentMemberEmployeeAddModel } from '../models/ProjectAssignmentMemberEmployeeAddModel';\nimport type { ProjectAssignmentMemberEmployeeEditModel } from '../models/ProjectAssignmentMemberEmployeeEditModel';\nimport type { ProjectAssignmentMemberSubcontractorAddModel } from '../models/ProjectAssignmentMemberSubcontractorAddModel';\nimport type { ProjectAssignmentMemberSubcontractorEditModel } from '../models/ProjectAssignmentMemberSubcontractorEditModel';\nimport type { ProjectAssignmentModel } from '../models/ProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentMemberService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberEmployeeAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentMemberEmployeeAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentMemberSubcontractor(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentMemberSubcontractorAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentMemberEmployeeEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentMemberSubcontractor(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentMemberSubcontractorEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role Member\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentFilterModel } from '../models/ProjectAssignmentFilterModel';\nimport type { ProjectAssignmentWithStatusModel } from '../models/ProjectAssignmentWithStatusModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Roles by Filter\n     * Rate limited, restricted to once per minute, max 1000 requests per day\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns ProjectAssignmentWithStatusModel All went well\n     * @throws ApiError\n     */\n    public searchRoles(\n        companyId: number,\n        requestBody?: ProjectAssignmentFilterModel,\n    ): CancelablePromise<ProjectAssignmentWithStatusModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/roles',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentSkillAddModel } from '../models/ProjectAssignmentSkillAddModel';\nimport type { ProjectAssignmentSkillEditModel } from '../models/ProjectAssignmentSkillEditModel';\nimport type { ProjectAssignmentSkillModel } from '../models/ProjectAssignmentSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentSkillAddModel,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentSkillEditModel,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventModel } from '../models/ProjectEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventModel All went well\n     * @throws ApiError\n     */\n    public projectEvent(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project events list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEvents(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventMeetingAddEditModel } from '../models/ProjectEventMeetingAddEditModel';\nimport type { ProjectEventMeetingModel } from '../models/ProjectEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event meeting by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public projectEventMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateProjectMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventMeetingAddEditModel,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public newProjectMeeting(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventMeetingAddEditModel,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project events meetings list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventMeetings(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventNoteModel } from '../models/CustomerEventNoteModel';\nimport type { ProjectEventNoteAddEditModel } from '../models/ProjectEventNoteAddEditModel';\nimport type { ProjectEventNoteModel } from '../models/ProjectEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event note by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public projectEventNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateProjectNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventNoteAddEditModel,\n    ): CancelablePromise<ProjectEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */\n    public newProjectNote(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventNoteAddEditModel,\n    ): CancelablePromise<ProjectEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event notes list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventNotes(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventTaskAddEditModel } from '../models/ProjectEventTaskAddEditModel';\nimport type { ProjectEventTaskModel } from '../models/ProjectEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event task by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public projectEventTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateProjectTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventTaskAddEditModel,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public newProjectTask(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventTaskAddEditModel,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event tasks list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventTasks(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectPipelineModel } from '../models/ProjectPipelineModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectPipelinesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project pipelines\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectPipelineModel All went well\n     * @throws ApiError\n     */\n    public projectPipelines(\n        companyId: number,\n    ): CancelablePromise<Array<ProjectPipelineModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/pipelines',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectReferenceModel } from '../models/ProjectReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectReferenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Project reference Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */\n    public projectReference(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectReferenceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/references/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectReferenceModel } from '../models/ProjectReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectReferencesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */\n    public projectReferences(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectReferenceModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/references',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectBaseModel } from '../models/ProjectBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get projects list  - please note this endpoint currently only returns projects with the status WON. Please use the SearchProjects endpoint for more options of filtering desired Projects\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectBaseModel All went well\n     * @throws ApiError\n     */\n    public projects(\n        companyId: number,\n    ): CancelablePromise<Array<ProjectBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { ProjectModel } from '../models/ProjectModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for Project\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the project.\n     * A new tag will be created, if the id for a tag not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/projects/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param projectId Project Id\n                 * @param requestBody CompanyTagModel\n                 * @returns ProjectModel All went well\n                 * @throws ApiError\n                 */\n                public editProjectTags(\n                    companyId: number,\n                    projectId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<ProjectModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/projects/{projectId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'projectId': projectId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { RecruitmentSourceModel } from '../models/RecruitmentSourceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class RecruitmentSourcesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get recruitment sources\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns RecruitmentSourceModel All went well\n     * @throws ApiError\n     */\n    public recruitmentSources(\n        companyId: number,\n    ): CancelablePromise<Array<RecruitmentSourceModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/recruitment-sources',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCandidateQueryModel } from '../models/SearchCompanyCandidateQueryModel';\nimport type { SearchCompanyCandidateResultModel } from '../models/SearchCompanyCandidateResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCandidateService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates list from search criteria\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/search\n     * {\n         * \"term\": \"candidate property value\",\n         * \"rating\": 3\n         * \"status\": 0,\n         * \"sources\": [],\n         * \"noRecruiter\": false,\n         * \"recruiters\": [],\n         * \"states\": [0],\n         * \"pipeline\": null,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15\n             * },\n             * \"pipelines\": []\n             * }\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCandidateQueryModel\n             * @returns SearchCompanyCandidateResultModel All went well\n             * @throws ApiError\n             */\n            public searchCompanyCandidate(\n                companyId: number,\n                requestBody?: SearchCompanyCandidateQueryModel,\n            ): CancelablePromise<SearchCompanyCandidateResultModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/candidates/search',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCustomerContactQueryModel } from '../models/SearchCompanyCustomerContactQueryModel';\nimport type { SearchCompanyCustomerContactResultModel } from '../models/SearchCompanyCustomerContactResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCustomerContactService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customer contacts list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerContactResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyCustomerContact(\n        companyId: number,\n        requestBody?: SearchCompanyCustomerContactQueryModel,\n    ): CancelablePromise<SearchCompanyCustomerContactResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/contacts/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCustomerQueryModel } from '../models/SearchCompanyCustomerQueryModel';\nimport type { SearchCompanyCustomerResultModel } from '../models/SearchCompanyCustomerResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCustomersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customers list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyCustomer(\n        companyId: number,\n        requestBody?: SearchCompanyCustomerQueryModel,\n    ): CancelablePromise<SearchCompanyCustomerResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyUserQueryModel } from '../models/SearchCompanyUserQueryModel';\nimport type { SearchCompanyUserResultModel } from '../models/SearchCompanyUserResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list from search criteria\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyUserQueryModel\n     * @returns SearchCompanyUserResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyUser(\n        companyId: number,\n        requestBody?: SearchCompanyUserQueryModel,\n    ): CancelablePromise<SearchCompanyUserResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchProjectQueryModel } from '../models/SearchProjectQueryModel';\nimport type { SearchProjectsResultModel } from '../models/SearchProjectsResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchProjectService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get projects list from search criteria\n     * Sample request\n     * {\n         * \"pipelines\": [4],\n         * \"projectStates\": [0],\n         * \"PageAndSortBy\": {\n             * \"SortBy\": \"0\",\n             * \"SortOrder\": \"1\",\n             * \"Page\": \"1\",\n             * \"ItemsPerPage\": \"15\",\n             * }\n             * }\n             * SortBy Parameter can be:\n             * CreatedDateTime=0 // Default\n             * Title=1\n             * Identifier=2\n             * CustomerIdentifier=3\n             * SeoId=4\n             * UpdatedDateTime=6\n             * LastTouchDateTime=7\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCustomerQueryModel\n             * @returns SearchProjectsResultModel All went well\n             * @throws ApiError\n             */\n            public searchProject(\n                companyId: number,\n                requestBody?: SearchProjectQueryModel,\n            ): CancelablePromise<SearchProjectsResultModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/projects/search',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchSkillQueryModel } from '../models/SearchSkillQueryModel';\nimport type { SearchSkillResultModel } from '../models/SearchSkillResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SkillSearchService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search users by skill keyword id\n     * @param companyId Company Id\n     * @param requestBody SearchSkillQueryModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */\n    public searchSkill(\n        companyId: number,\n        requestBody?: SearchSkillQueryModel,\n    ): CancelablePromise<SearchSkillResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/skills/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchSkillResultModel } from '../models/SearchSkillResultModel';\nimport type { SkillSearchQueryTermModel } from '../models/SkillSearchQueryTermModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SkillSearchTermService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search users with skills by term (string value)\n     * @param companyId Company Id\n     * @param requestBody SkillSearchQueryTermModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */\n    public searchSkillTerm(\n        companyId: number,\n        requestBody?: SkillSearchQueryTermModel,\n    ): CancelablePromise<SearchSkillResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/skills/search/term',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: 'https://api.cinode.com',\n    VERSION: '0.1',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * NoAccess = 0\n *\n * Anonymous = 50\n *\n * Read = 100\n *\n * Subcontractor = 110\n *\n * Candidate = 115\n *\n * RestrictedCompanyUser = 150\n *\n * CompanyApiUser = 180\n *\n * CompanyUser = 200\n *\n * PartnerManager = 240\n *\n * CompanyRecruiter = 250\n *\n * TeamManager = 270\n *\n * CompanyManager = 300\n *\n * CompanyAdmin = 400\n *\n * Owner = 500\n */\nexport enum AccessLevel {\n    NoAccess = 0,\n    Anonymous = 50,\n    Read = 100,\n    Subcontractor = 110,\n    Candidate = 115,\n    RestrictedCompanyUser = 150,\n    CompanyApiUser = 180,\n    CompanyUser = 200,\n    PartnerManager = 240,\n    CompanyRecruiter = 250,\n    TeamManager = 270,\n    CompanyManager = 300,\n    CompanyAdmin = 400,\n    Owner = 500,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * All = 1\n *\n * Created = 2\n *\n * Updated = 3\n *\n * Borttagen = 4\n */\nexport enum ActionType {\n    All = 1,\n    Created = 2,\n    Updated = 3,\n    Deleted = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Övrig = 0\n *\n * Besöksadress = 1\n *\n * Faktureringsadress = 2\n *\n * Placeringsort = 3\n */\nexport enum AddressType {\n    Undefined = 0,\n    StreetAddress = 1,\n    InvoiceAddress = 2,\n    LocationAddress = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * File = 0\n *\n * Uri = 1\n */\nexport enum AttachmentType {\n    File = 0,\n    Uri = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Status = 3\n *\n * Email = 4\n *\n * UpdatedDateTime = 5\n */\nexport enum CompanyCandidateQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Status = 3,\n    Email = 4,\n    UpdatedDateTime = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 10\n *\n * Pausad = 20\n *\n * Avböjd av kandidat = 30\n *\n * Avböjd av oss = 40\n */\nexport enum CompanyCandidateState {\n    Open = 0,\n    Won = 10,\n    Paused = 20,\n    Lost = 30,\n    Rejected = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n *\n * CustomerId = 5\n */\nexport enum CompanyCustomerContactQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Email = 3,\n    UpdatedDateTime = 4,\n    CustomerId = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * Name = 1\n *\n * Description = 2\n *\n * Identification = 3\n *\n * SeoId = 4\n *\n * Status = 5\n *\n * Phone = 6\n *\n * Email = 7\n *\n * Fax = 8\n *\n * Homepage = 9\n *\n * CorporateIdentityNumber = 10\n *\n * VATNumber = 11\n *\n * Intermediator = 12\n *\n * UpdatedDateTime = 13\n *\n * LastTouchDateTime = 14\n */\nexport enum CompanyCustomerQuerySort {\n    CreatedDateTime = 0,\n    Name = 1,\n    Description = 2,\n    Identification = 3,\n    SeoId = 4,\n    Status = 5,\n    Phone = 6,\n    Email = 7,\n    Fax = 8,\n    Homepage = 9,\n    CorporateIdentityNumber = 10,\n    VATNumber = 11,\n    Intermediator = 12,\n    UpdatedDateTime = 13,\n    LastTouchDateTime = 14,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n * 0 - Id (Default),\n * 1 - CompanyUserId,\n * 2 - CreatedDateTime,\n * 3 - UpdatedDateTime\n */\nexport enum CompanyProfileSort {\n    Id = 0,\n    CompanyUserId = 1,\n    CreatedWhen = 2,\n    UpdatedWhen = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Egenföretagare = 0\n *\n * 2-10 = 1\n *\n * 11-50 = 2\n *\n * 51-200 = 3\n *\n * 201-500 = 4\n *\n * 501-1 000 = 5\n *\n * 1 001-5 000 = 6\n *\n * 5 001-10 000 = 7\n *\n * 10 001+ = 8\n */\nexport enum CompanySize {\n    A = 0,\n    B = 1,\n    C = 2,\n    D = 3,\n    E = 4,\n    F = 5,\n    G = 6,\n    H = 7,\n    I = 8,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */\nexport enum CompanyUserCandidateStatus {\n    Disconnected = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n */\nexport enum CompanyUserQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Email = 3,\n    UpdatedDateTime = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Kommande = 2\n *\n * Aktiv = 3\n */\nexport enum CompanyUserStatus {\n    Disconnected = 0,\n    PreActive = 2,\n    Active = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */\nexport enum CompanyUserSubcontractorStatus {\n    Disconnected = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Medarbetare = 0\n *\n * Kandidat = 10\n *\n * Underkonsult = 20\n *\n * Api = 30\n *\n * Bot = 40\n */\nexport enum CompanyUserType {\n    Employee = 0,\n    Candidate = 10,\n    Subcontractor = 20,\n    Api = 30,\n    Bot = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Timpris = 0\n *\n * Fastpris = 1\n */\nexport enum ContractType {\n    Hourly = 0,\n    Fixed = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */\nexport enum EventNoteType {\n    NotSpecified = 0,\n    Phone = 1,\n    Email = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inte påbörjad = 0\n *\n * Påbörjad = 1\n *\n * Färdig = 2\n *\n * Uppskjuten = 3\n *\n * Väntar = 4\n */\nexport enum EventStatusValue {\n    NotStarted = 0,\n    InProgress = 1,\n    Completed = 2,\n    Deferred = 3,\n    WaitingForSomeoneElse = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */\nexport enum EventTaskType {\n    NotSpecified = 0,\n    Phone = 1,\n    Email = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Möte = 0\n *\n * Notering = 1\n *\n * Uppgift = 2\n *\n * Samtal = 3\n */\nexport enum EventType {\n    Meeting = 0,\n    Note = 1,\n    Task = 2,\n    Call = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Publik = 0\n *\n * Privat = 1\n */\nexport enum EventVisibility {\n    Public = 0,\n    Private = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */\nexport enum ExtentType {\n    Percent = 0,\n    Hours = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Original = 0\n *\n * H40W40 = 1\n *\n * H100W100 = 2\n *\n * H200W200 = 3\n *\n * H300W300 = 4\n *\n * W100 = 5\n *\n * H60 = 6\n *\n * H100 = 7\n *\n * H40 = 8\n *\n * W340 = 9\n *\n * W1800 = 10\n *\n * H750W1800 = 11\n *\n * H250 = 12\n *\n * H400W400 = 13\n *\n * W150 = 14\n *\n * W1200 = 15\n */\nexport enum ImageSize {\n    Original = 0,\n    H40W40 = 1,\n    H100W100 = 2,\n    H200W200 = 3,\n    H300W300 = 4,\n    W100 = 5,\n    H60 = 6,\n    H100 = 7,\n    H40 = 8,\n    W340 = 9,\n    W1800 = 10,\n    H750W1800 = 11,\n    H250 = 12,\n    H400W400 = 13,\n    W150 = 14,\n    W1200 = 15,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Okategoriserad = 0\n *\n * Branscher = 1\n *\n * Roller = 2\n *\n * Verktyg = 3\n *\n * Tekniker = 4\n *\n * Metoder och processer = 5\n *\n * Plattformar = 6\n *\n * Produkter och tjänster = 7\n *\n * Certifieringar = 10\n *\n * Material = 11\n *\n * Specifikationer och förordningar = 12\n *\n * Hårdvara = 13\n *\n * Verksamhet och funktion = 14\n *\n * Byggnationer = 15\n *\n * Rapporter och utredningar = 16\n *\n * Specialiteter - Medicin = 17\n *\n * Standarder och regelverk = 18\n *\n * Behörigheter = 19\n *\n * Mjuka färdigheter = 20\n *\n * CustomName = 100\n */\nexport enum KeywordType {\n    Uncategorized = 0,\n    Industries = 1,\n    Roles = 2,\n    Tools = 3,\n    Techniques = 4,\n    MethodsProcesses = 5,\n    Platforms = 6,\n    Products = 7,\n    Certifications = 10,\n    Materials = 11,\n    SpecificationsRegulations = 12,\n    Hardware = 13,\n    OperationalAreaAndFunction = 14,\n    Construction = 15,\n    ReportsInvestigations = 16,\n    SpecialitiesMedicine = 17,\n    StandardsRegulations = 18,\n    Accreditation = 19,\n    SoftSkills = 20,\n    CustomName = 100,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Enstaka ord och fraser = 0\n *\n * Grundläggande kunskaper = 1\n *\n * Goda kunskaper = 2\n *\n * Flytande = 3\n *\n * Modersmål = 4\n */\nexport enum LanguageLevel {\n    Level0 = 0,\n    Level1 = 1,\n    Level2 = 2,\n    Level3 = 3,\n    Level4 = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * InProgress = 0\n *\n * Completed = 1\n *\n * Failed = 2\n */\nexport enum LongRunningStatus {\n    InProgress = 0,\n    Completed = 1,\n    Failed = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CompanyUserResume = 1\n *\n * Customers = 2\n *\n * Assignments = 3\n *\n * Partners = 4\n *\n * Offers = 5\n *\n * Reports = 6\n *\n * Recruitment = 8\n *\n * Absence = 9\n *\n * Api = 10\n *\n * ReferenceText = 11\n *\n * ProfileCompleteness = 12\n *\n * CalendarSync = 13\n *\n * AllowWidgetModification = 14\n *\n * ConfiguredFilters = 19\n *\n * SkillSets = 20\n *\n * ProfileUpdateReminders = 21\n *\n * OverdueProjectReminders = 22\n *\n * EmailSync = 23\n *\n * ApplicationRegistration = 30\n *\n * ApplicationDirectory = 31\n *\n * NextGenResume = 40\n *\n * HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41\n *\n * ImportCv = 42\n *\n * AI = 43\n *\n * AITextGeneration = 44\n *\n * ProjectPlanning = 48\n *\n * ExternalAccounts = 50\n *\n * ConvertAccount = 51\n *\n * UserProvisioning = 52\n *\n * Webhooks = 60\n *\n * GrowthPlan = 70\n *\n * GUIShowcase = 80\n *\n * Appmixer = 90\n *\n * Intercom = 600\n */\nexport enum ModuleType {\n    CompanyUserResume = 1,\n    Customers = 2,\n    Assignments = 3,\n    Partners = 4,\n    Offers = 5,\n    Reports = 6,\n    Recruitment = 8,\n    Absence = 9,\n    Api = 10,\n    ReferenceText = 11,\n    ProfileCompleteness = 12,\n    CalendarSync = 13,\n    AllowWidgetModification = 14,\n    ConfiguredFilters = 19,\n    SkillSets = 20,\n    ProfileUpdateReminders = 21,\n    OverdueProjectReminders = 22,\n    EmailSync = 23,\n    ApplicationRegistration = 30,\n    ApplicationDirectory = 31,\n    NextGenResume = 40,\n    HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41,\n    ImportCv = 42,\n    AI = 43,\n    AITextGeneration = 44,\n    ProjectPlanning = 48,\n    ExternalAccounts = 50,\n    ConvertAccount = 51,\n    UserProvisioning = 52,\n    Webhooks = 60,\n    GrowthPlan = 70,\n    GUIShowcase = 80,\n    Appmixer = 90,\n    Intercom = 600,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Anonymiserat = 10\n *\n * Transparent = 20\n *\n * Avisera = 30\n *\n * Boka = 40\n *\n * Matcha = 50\n *\n * Tillgänglighet = 60\n *\n * UserCv = 70\n */\nexport enum PartnerConnectionTrustType {\n    UserViewAnonymous = 10,\n    UserViewTransparent = 20,\n    UserAssignRequest = 30,\n    UserAssignBook = 40,\n    UserSkillMatch = 50,\n    UserAvailability = 60,\n    UserCv = 70,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * WkHtmlToPdf = 0\n *\n * Puppeteer = 2\n */\nexport enum PdfEngineType {\n    WkHtmlToPdf = 0,\n    Puppeteer = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Portrait = 0\n *\n * Landscape = 1\n */\nexport enum PdfOrientation {\n    Portrait = 0,\n    Landscape = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej bokad = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n */\nexport enum ProjectAssignmentAllocationStatus {\n    NotBooked = 0,\n    Preliminary = 1,\n    Assigned = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */\nexport enum ProjectAssignmentExtentType {\n    Percent = 0,\n    Hours = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n *\n * Offererad = 3\n */\nexport enum ProjectAssignmentMemberAllocationStatus {\n    None = 0,\n    Preliminary = 1,\n    Assigned = 2,\n    Offered = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Tillagd = 0\n *\n * Offererad = 10\n *\n * Avböjd av kund = 20\n *\n * Avböjd av oss = 30\n *\n * Pausad = 40\n */\nexport enum ProjectAssignmentMemberState {\n    Allocated = 0,\n    Offered = 10,\n    Rejected = 20,\n    Revoked = 30,\n    Deferred = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Unspecified = 0\n *\n * Medarbetare = 1\n *\n * Partnerkonsult = 2\n *\n * Underkonsult = 3\n */\nexport enum ProjectAssignmentMemberType {\n    Unspecified = 0,\n    CompanyUser = 1,\n    PartnerCompanyUser = 2,\n    CompanyUserSubcontractor = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Återkallad = 10\n *\n * Stängd = 20\n */\nexport enum ProjectAssignmentRequestStatus {\n    Open = 0,\n    Revoked = 10,\n    Closed = 20,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inga datum valda = 0\n *\n * Kommande = 1\n *\n * Pågående = 2\n *\n * Avslutat = 3\n */\nexport enum ProjectAssignmentStatus {\n    Unspecified = 0,\n    Coming = 1,\n    Ongoing = 2,\n    Ended = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Låg = 3\n *\n * Medel = 5\n *\n * Hög = 8\n */\nexport enum ProjectPriority {\n    Low = 3,\n    Medium = 5,\n    High = 8,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * Title = 1\n *\n * Identifier = 2\n *\n * CustomerIdentifier = 3\n *\n * SeoId = 4\n *\n * UpdatedDateTime = 5\n *\n * LastTouchDateTime = 6\n */\nexport enum ProjectQuerySort {\n    CreatedDateTime = 0,\n    Title = 1,\n    Identifier = 2,\n    CustomerIdentifier = 3,\n    SeoId = 4,\n    UpdatedDateTime = 5,\n    LastTouchDateTime = 6,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 30\n *\n * Förlorad = 40\n *\n * Avböjd = 50\n *\n * Uppskjuten = 60\n */\nexport enum ProjectState {\n    Open = 0,\n    Won = 30,\n    Lost = 40,\n    Abandoned = 50,\n    Suspended = 60,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * AllResumesOfLanguage = 3\n *\n * Profile = 5\n */\nexport enum SaveToApiOption {\n    AllResumesOfLanguage = 3,\n    Profile = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n * 0 - Ascending,\n * 1 - Descending\n */\nexport enum SortOrder {\n    Ascending = 0,\n    Descending = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inaktiv = 0\n *\n * Aktiv = 1\n */\nexport enum Status {\n    Inactive = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Contains = 0\n *\n * StartsWith = 1\n *\n * EndsWith = 2\n *\n * Equals = 3\n */\nexport enum StringComparisonOperator {\n    Contains = 0,\n    StartsWith = 1,\n    EndsWith = 2,\n    Equals = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * Primary = 1\n *\n * Classic = 2\n *\n * Dynamic = 3\n *\n * PageFlow = 4\n *\n * BlockWorkExperience = 50\n *\n * BlockSkillsByLevel = 51\n *\n * CinodePremium3PageFlow = 70\n *\n * CinodePremium2PageFlow = 71\n *\n * TemplateType = 100\n */\nexport enum TemplateAssetType {\n    None = 0,\n    Primary = 1,\n    Classic = 2,\n    Dynamic = 3,\n    PageFlow = 4,\n    BlockWorkExperience = 50,\n    BlockSkillsByLevel = 51,\n    CinodePremium3PageFlow = 70,\n    CinodePremium2PageFlow = 71,\n    TemplateType = 100,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Kurs = 0\n *\n * Certifiering = 1\n */\nexport enum TrainingType {\n    Course = 0,\n    Certification = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Man = 1\n *\n * Kvinna = 2\n */\nexport enum UserGender {\n    Other = 0,\n    Male = 1,\n    Female = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * All = 1\n *\n * CompanyCandidate = 2\n *\n * CompanyEmployee = 3\n *\n * CompanySubcontractor = 4\n *\n * CompanyCustomer = 5\n *\n * CompanyProject = 6\n *\n * Role = 7\n *\n * PublicAnnouncement = 8\n *\n * Absence = 9\n *\n * CompanyCustomerContact = 10\n */\nexport enum WebhookEntityType {\n    All = 1,\n    CompanyCandidate = 2,\n    CompanyEmployee = 3,\n    CompanySubcontractor = 4,\n    CompanyCustomer = 5,\n    CompanyProject = 6,\n    Role = 7,\n    PublicAnnouncement = 8,\n    Absence = 9,\n    CompanyCustomerContact = 10,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * GroupDocs = 1\n *\n * Aspose = 2\n */\nexport enum WordEngineType {\n    None = 0,\n    GroupDocs = 1,\n    Aspose = 2,\n}\n"],"names":[],"version":3,"file":"index.js.map"}