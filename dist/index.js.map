{"mappings":"A,C,SQSgB,EA0cM,EsB/bnB,E,IwKeS,ECpBA,ECAA,ECJA,ECQA,ECFA,ECEA,ECkBA,EC3BA,ECeA,ECdA,ECMA,ECJA,ECFA,ECMA,ECNA,ECEA,ECIA,ECJA,ECEA,ECJA,ECAA,EC4BA,ECQA,EC9BA,ECJA,EC8DA,ECtDA,ECVA,ECAA,ECEA,ECFA,ECIA,ECEA,ECFA,ECFA,ECEA,ECFA,ECQA,ECJA,ECNA,ECHA,ECGA,ECIA,ECYA,EChBA,ECEA,ECcA,ECdA,ErOVZ,EACA,ECHA,GAiCA,GoLCY,GCpBA,GCAA,GCJA,GCQA,GCFA,GCEA,GCkBA,GC3BA,GCeA,GCdA,GCMA,GCJA,GCFA,GCMA,GCNA,GCEA,GCIA,GCJA,GCEA,GCJA,GCAA,GC4BA,GCQA,GC9BA,GCJA,GC8DA,GCtDA,GCVA,GCAA,GCEA,GCFA,GCIA,GCEA,GCFA,GCFA,GCEA,GCFA,GCQA,GCJA,GCNA,GCHA,GCGA,GCIA,GCYA,GChBA,GCEA,GCcA,GCdA,G,G,W,S,G,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C7OXG,SAAA,GAAc,CAAE,CAAE,CAAO,EACtC,OAAO,WACL,OAAO,EAAG,KAAK,CAAC,EAAS,UAC3B,CACF,CDAA,GAAM,CAAA,SAAC,EAAQ,CAAC,CAAG,OAAO,SAAS,CAC7B,CAAA,eAAC,EAAc,CAAC,CAAG,OAEnB,IAAU,EAGb,OAAO,MAAM,CAAC,MAHQ,AAAA,IACrB,IAAM,EAAM,GAAS,IAAI,CAAC,GAC1B,OAAO,CAAK,CAAC,EAAI,EAAK,CAAA,CAAK,CAAC,EAAI,CAAG,EAAI,KAAK,CAAC,EAAG,IAAI,WAAW,EAAA,CACnE,GAEM,GAAa,AAAC,IAClB,EAAO,EAAK,WAAW,GAChB,AAAC,GAAU,GAAO,KAAW,GAGhC,GAAa,AAAA,GAAQ,AAAA,GAAS,OAAO,IAAU,EAS/C,CAAA,QAAC,EAAO,CAAC,CAAG,MASZ,GAAc,GAAW,aAqBzB,GAAgB,GAAW,eA2B3B,GAAW,GAAW,UAQtB,GAAa,GAAW,YASxB,GAAW,GAAW,UAStB,GAAW,AAAC,GAAU,AAAU,OAAV,GAAkB,AAA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","sources":["<anon>","src/index.ts","src/Cinode.ts","src/core/AxiosHttpRequest.ts","src/core/BaseHttpRequest.ts","src/core/request.ts","node_modules/axios/index.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/platform/index.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/platform/common/utils.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/form-data/lib/browser.js","src/core/ApiError.ts","src/core/CancelablePromise.ts","src/services/AbsenceService.ts","src/services/AbsencesService.ts","src/services/AbsenceTypeService.ts","src/services/AvailabilityService.ts","src/services/CompanyService.ts","src/services/CompanyAddressUsersService.ts","src/services/CompanyCandidateService.ts","src/services/CompanyCandidateEventService.ts","src/services/CompanyCandidateEventMeetingService.ts","src/services/CompanyCandidateEventMeetingsService.ts","src/services/CompanyCandidateEventNoteService.ts","src/services/CompanyCandidateEventNotesService.ts","src/services/CompanyCandidateEventsService.ts","src/services/CompanyCandidateEventTaskService.ts","src/services/CompanyCandidateEventTasksService.ts","src/services/CompanyCandidateFileAttachmentService.ts","src/services/CompanyCandidateFileAttachmentsService.ts","src/services/CompanyCandidatePipelinesService.ts","src/services/CompanyCandidatesService.ts","src/services/CompanyCandidateSkillsService.ts","src/services/CompanyCandidateUriAttachmentService.ts","src/services/CompanyCandidateUriAttachmentsService.ts","src/services/CompanyCandidateUserService.ts","src/services/CompanyCapabilitiesService.ts","src/services/CompanyCurrenciesService.ts","src/services/CompanyCustomerService.ts","src/services/CompanyCustomerAddressService.ts","src/services/CompanyCustomerContactService.ts","src/services/CompanyCustomerContactsService.ts","src/services/CompanyCustomerContactTagsService.ts","src/services/CompanyCustomerEventService.ts","src/services/CompanyCustomerEventsService.ts","src/services/CompanyCustomerEventsMeetingService.ts","src/services/CompanyCustomerEventsMeetingsService.ts","src/services/CompanyCustomerEventsNoteService.ts","src/services/CompanyCustomerEventsNotesService.ts","src/services/CompanyCustomerEventsTaskService.ts","src/services/CompanyCustomerEventsTasksService.ts","src/services/CompanyCustomerFileAttachmentService.ts","src/services/CompanyCustomerManagersService.ts","src/services/CompanyCustomersService.ts","src/services/CompanyCustomersExtendedService.ts","src/services/CompanyCustomerTagsService.ts","src/services/CompanyImageService.ts","src/services/CompanyImagesService.ts","src/services/CompanyManagersService.ts","src/services/CompanyProfilesService.ts","src/services/CompanyProjectFileAttachmentService.ts","src/services/CompanyRecruitmentManagersService.ts","src/services/CompanyResumesService.ts","src/services/CompanySubcontractorGroupService.ts","src/services/CompanySubcontractorGroupMembersService.ts","src/services/CompanySubcontractorGroupsService.ts","src/services/CompanyTagService.ts","src/services/CompanyTagsService.ts","src/services/CompanyTeamService.ts","src/services/CompanyTeamManagersService.ts","src/services/CompanyTeamMemberService.ts","src/services/CompanyTeamMembersService.ts","src/services/CompanyTeamsService.ts","src/services/CompanyTeamUsersService.ts","src/services/CompanyUserService.ts","src/services/CompanyUserConvertService.ts","src/services/CompanyUserEmployeeEventService.ts","src/services/CompanyUserEmployeeEventMeetingService.ts","src/services/CompanyUserEmployeeEventNoteService.ts","src/services/CompanyUserEmployeeEventsService.ts","src/services/CompanyUserEmployeeEventsMeetingsService.ts","src/services/CompanyUserEmployeeEventsNotesService.ts","src/services/CompanyUserEmployeeEventsTasksService.ts","src/services/CompanyUserEmployeeEventTaskService.ts","src/services/CompanyUserFullService.ts","src/services/CompanyUserPermissionsService.ts","src/services/CompanyUserProfileService.ts","src/services/CompanyUserProfileCommitmentService.ts","src/services/CompanyUserProfileEducationService.ts","src/services/CompanyUserProfileEmployerService.ts","src/services/CompanyUserProfileExtSkillService.ts","src/services/CompanyUserProfileImportService.ts","src/services/CompanyUserProfileLanguageService.ts","src/services/CompanyUserProfileLanguagesService.ts","src/services/CompanyUserProfilePresentationService.ts","src/services/CompanyUserProfileReferenceService.ts","src/services/CompanyUserProfilesService.ts","src/services/CompanyUserProfileSkillService.ts","src/services/CompanyUserProfileTrainingService.ts","src/services/CompanyUserProfileWorkExperienceService.ts","src/services/CompanyUserResumeService.ts","src/services/CompanyUserResumesService.ts","src/services/CompanyUserRolesService.ts","src/services/CompanyUsersService.ts","src/services/CompanyUsersExtendedService.ts","src/services/CompanyUserSkillService.ts","src/services/CompanyUserSkillsService.ts","src/services/CompanyUserSubcontractorService.ts","src/services/CompanyUserSubcontractorEventService.ts","src/services/CompanyUserSubcontractorEventMeetingService.ts","src/services/CompanyUserSubcontractorEventNoteService.ts","src/services/CompanyUserSubcontractorEventsService.ts","src/services/CompanyUserSubcontractorEventsMeetingsService.ts","src/services/CompanyUserSubcontractorEventsNotesService.ts","src/services/CompanyUserSubcontractorEventsTasksService.ts","src/services/CompanyUserSubcontractorEventTaskService.ts","src/services/CompanyUserSubcontractorFileAttachmentService.ts","src/services/CompanyUserSubcontractorFileAttachmentsService.ts","src/services/CompanyUserSubcontractorRolesService.ts","src/services/CompanyUserSubcontractorsService.ts","src/services/CompanyUserTagsService.ts","src/services/CompanyUserTeamsService.ts","src/services/CompanyWebhookService.ts","src/services/CompanyWebhooksService.ts","src/services/DynamicCompanyUserResumeService.ts","src/services/KeywordSearchService.ts","src/services/MentionsService.ts","src/services/PartnersService.ts","src/services/ProjectService.ts","src/services/ProjectAssignmentService.ts","src/services/ProjectAssignmentMemberService.ts","src/services/ProjectAssignmentsService.ts","src/services/ProjectAssignmentSkillsService.ts","src/services/ProjectEventService.ts","src/services/ProjectEventsService.ts","src/services/ProjectEventsMeetingService.ts","src/services/ProjectEventsMeetingsService.ts","src/services/ProjectEventsNoteService.ts","src/services/ProjectEventsNotesService.ts","src/services/ProjectEventsTaskService.ts","src/services/ProjectEventsTasksService.ts","src/services/ProjectPipelinesService.ts","src/services/ProjectReferenceService.ts","src/services/ProjectReferencesService.ts","src/services/ProjectsService.ts","src/services/ProjectTagsService.ts","src/services/RecruitmentSourcesService.ts","src/services/SearchCompanyCandidateService.ts","src/services/SearchCompanyCustomerContactService.ts","src/services/SearchCompanyCustomersService.ts","src/services/SearchCompanyUserService.ts","src/services/SearchProjectService.ts","src/services/SkillSearchService.ts","src/services/SkillSearchTermService.ts","src/core/OpenAPI.ts","src/models/AccessLevel.ts","src/models/ActionType.ts","src/models/AddressType.ts","src/models/AttachmentType.ts","src/models/CompanyCandidateQuerySort.ts","src/models/CompanyCandidateState.ts","src/models/CompanyCustomerContactQuerySort.ts","src/models/CompanyCustomerQuerySort.ts","src/models/CompanyProfileSort.ts","src/models/CompanySize.ts","src/models/CompanyUserCandidateStatus.ts","src/models/CompanyUserQuerySort.ts","src/models/CompanyUserStatus.ts","src/models/CompanyUserSubcontractorStatus.ts","src/models/CompanyUserType.ts","src/models/ContractType.ts","src/models/EventNoteType.ts","src/models/EventStatusValue.ts","src/models/EventTaskType.ts","src/models/EventType.ts","src/models/EventVisibility.ts","src/models/ExtentType.ts","src/models/ImageSize.ts","src/models/KeywordType.ts","src/models/LanguageLevel.ts","src/models/LongRunningStatus.ts","src/models/ModuleType.ts","src/models/PartnerConnectionTrustType.ts","src/models/PdfEngineType.ts","src/models/PdfOrientation.ts","src/models/ProjectAssignmentAllocationStatus.ts","src/models/ProjectAssignmentExtentType.ts","src/models/ProjectAssignmentMemberAllocationStatus.ts","src/models/ProjectAssignmentMemberState.ts","src/models/ProjectAssignmentMemberType.ts","src/models/ProjectAssignmentRequestStatus.ts","src/models/ProjectAssignmentStatus.ts","src/models/ProjectPriority.ts","src/models/ProjectQuerySort.ts","src/models/ProjectState.ts","src/models/SaveToApiOption.ts","src/models/SortOrder.ts","src/models/Status.ts","src/models/StringComparisonOperator.ts","src/models/TemplateAssetType.ts","src/models/TrainingType.ts","src/models/UserGender.ts","src/models/WebhookEntityType.ts","src/models/WordEngineType.ts"],"sourcesContent":["(() => {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ class $868cdcac0038990f$export$86fcbb09edb4aebc {\n    constructor(config){\n        this.config = config;\n    }\n}\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ \"use strict\";\nfunction $93b0f01b05e2607a$export$2e2bcd8739ae039(fn, thisArg) {\n    return function wrap() {\n        return fn.apply(thisArg, arguments);\n    };\n}\n\n\n\"use strict\";\n// utils is a library of generic helper functions non-specific to axios\nconst { toString: $aace3e920a0f1e4d$var$toString } = Object.prototype;\nconst { getPrototypeOf: $aace3e920a0f1e4d$var$getPrototypeOf } = Object;\nconst $aace3e920a0f1e4d$var$kindOf = ((cache)=>(thing)=>{\n        const str = $aace3e920a0f1e4d$var$toString.call(thing);\n        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n    })(Object.create(null));\nconst $aace3e920a0f1e4d$var$kindOfTest = (type)=>{\n    type = type.toLowerCase();\n    return (thing)=>$aace3e920a0f1e4d$var$kindOf(thing) === type;\n};\nconst $aace3e920a0f1e4d$var$typeOfTest = (type)=>(thing)=>typeof thing === type;\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */ const { isArray: $aace3e920a0f1e4d$var$isArray } = Array;\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */ const $aace3e920a0f1e4d$var$isUndefined = $aace3e920a0f1e4d$var$typeOfTest(\"undefined\");\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */ function $aace3e920a0f1e4d$var$isBuffer(val) {\n    return val !== null && !$aace3e920a0f1e4d$var$isUndefined(val) && val.constructor !== null && !$aace3e920a0f1e4d$var$isUndefined(val.constructor) && $aace3e920a0f1e4d$var$isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */ const $aace3e920a0f1e4d$var$isArrayBuffer = $aace3e920a0f1e4d$var$kindOfTest(\"ArrayBuffer\");\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */ function $aace3e920a0f1e4d$var$isArrayBufferView(val) {\n    let result;\n    if (typeof ArrayBuffer !== \"undefined\" && ArrayBuffer.isView) result = ArrayBuffer.isView(val);\n    else result = val && val.buffer && $aace3e920a0f1e4d$var$isArrayBuffer(val.buffer);\n    return result;\n}\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */ const $aace3e920a0f1e4d$var$isString = $aace3e920a0f1e4d$var$typeOfTest(\"string\");\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */ const $aace3e920a0f1e4d$var$isFunction = $aace3e920a0f1e4d$var$typeOfTest(\"function\");\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */ const $aace3e920a0f1e4d$var$isNumber = $aace3e920a0f1e4d$var$typeOfTest(\"number\");\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */ const $aace3e920a0f1e4d$var$isObject = (thing)=>thing !== null && typeof thing === \"object\";\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */ const $aace3e920a0f1e4d$var$isBoolean = (thing)=>thing === true || thing === false;\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */ const $aace3e920a0f1e4d$var$isPlainObject = (val)=>{\n    if ($aace3e920a0f1e4d$var$kindOf(val) !== \"object\") return false;\n    const prototype = $aace3e920a0f1e4d$var$getPrototypeOf(val);\n    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */ const $aace3e920a0f1e4d$var$isDate = $aace3e920a0f1e4d$var$kindOfTest(\"Date\");\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */ const $aace3e920a0f1e4d$var$isFile = $aace3e920a0f1e4d$var$kindOfTest(\"File\");\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */ const $aace3e920a0f1e4d$var$isBlob = $aace3e920a0f1e4d$var$kindOfTest(\"Blob\");\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */ const $aace3e920a0f1e4d$var$isFileList = $aace3e920a0f1e4d$var$kindOfTest(\"FileList\");\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */ const $aace3e920a0f1e4d$var$isStream = (val)=>$aace3e920a0f1e4d$var$isObject(val) && $aace3e920a0f1e4d$var$isFunction(val.pipe);\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */ const $aace3e920a0f1e4d$var$isFormData = (thing)=>{\n    let kind;\n    return thing && (typeof FormData === \"function\" && thing instanceof FormData || $aace3e920a0f1e4d$var$isFunction(thing.append) && ((kind = $aace3e920a0f1e4d$var$kindOf(thing)) === \"formdata\" || // detect form-data instance\n    kind === \"object\" && $aace3e920a0f1e4d$var$isFunction(thing.toString) && thing.toString() === \"[object FormData]\"));\n};\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */ const $aace3e920a0f1e4d$var$isURLSearchParams = $aace3e920a0f1e4d$var$kindOfTest(\"URLSearchParams\");\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */ const $aace3e920a0f1e4d$var$trim = (str)=>str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */ function $aace3e920a0f1e4d$var$forEach(obj, fn, { allOwnKeys: allOwnKeys = false } = {}) {\n    // Don't bother if no value provided\n    if (obj === null || typeof obj === \"undefined\") return;\n    let i;\n    let l;\n    // Force an array if not already something iterable\n    if (typeof obj !== \"object\") /*eslint no-param-reassign:0*/ obj = [\n        obj\n    ];\n    if ($aace3e920a0f1e4d$var$isArray(obj)) // Iterate over array values\n    for(i = 0, l = obj.length; i < l; i++)fn.call(null, obj[i], i, obj);\n    else {\n        // Iterate over object keys\n        const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n        const len = keys.length;\n        let key;\n        for(i = 0; i < len; i++){\n            key = keys[i];\n            fn.call(null, obj[key], key, obj);\n        }\n    }\n}\nfunction $aace3e920a0f1e4d$var$findKey(obj, key) {\n    key = key.toLowerCase();\n    const keys = Object.keys(obj);\n    let i = keys.length;\n    let _key;\n    while(i-- > 0){\n        _key = keys[i];\n        if (key === _key.toLowerCase()) return _key;\n    }\n    return null;\n}\nconst $aace3e920a0f1e4d$var$_global = (()=>{\n    /*eslint no-undef:0*/ if (typeof globalThis !== \"undefined\") return globalThis;\n    return typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : $parcel$global;\n})();\nconst $aace3e920a0f1e4d$var$isContextDefined = (context)=>!$aace3e920a0f1e4d$var$isUndefined(context) && context !== $aace3e920a0f1e4d$var$_global;\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */ function $aace3e920a0f1e4d$var$merge() {\n    const { caseless: caseless } = $aace3e920a0f1e4d$var$isContextDefined(this) && this || {};\n    const result = {};\n    const assignValue = (val, key)=>{\n        const targetKey = caseless && $aace3e920a0f1e4d$var$findKey(result, key) || key;\n        if ($aace3e920a0f1e4d$var$isPlainObject(result[targetKey]) && $aace3e920a0f1e4d$var$isPlainObject(val)) result[targetKey] = $aace3e920a0f1e4d$var$merge(result[targetKey], val);\n        else if ($aace3e920a0f1e4d$var$isPlainObject(val)) result[targetKey] = $aace3e920a0f1e4d$var$merge({}, val);\n        else if ($aace3e920a0f1e4d$var$isArray(val)) result[targetKey] = val.slice();\n        else result[targetKey] = val;\n    };\n    for(let i = 0, l = arguments.length; i < l; i++)arguments[i] && $aace3e920a0f1e4d$var$forEach(arguments[i], assignValue);\n    return result;\n}\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */ const $aace3e920a0f1e4d$var$extend = (a, b, thisArg, { allOwnKeys: allOwnKeys } = {})=>{\n    $aace3e920a0f1e4d$var$forEach(b, (val, key)=>{\n        if (thisArg && $aace3e920a0f1e4d$var$isFunction(val)) a[key] = (0, $93b0f01b05e2607a$export$2e2bcd8739ae039)(val, thisArg);\n        else a[key] = val;\n    }, {\n        allOwnKeys: allOwnKeys\n    });\n    return a;\n};\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */ const $aace3e920a0f1e4d$var$stripBOM = (content)=>{\n    if (content.charCodeAt(0) === 0xFEFF) content = content.slice(1);\n    return content;\n};\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */ const $aace3e920a0f1e4d$var$inherits = (constructor, superConstructor, props, descriptors)=>{\n    constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n    constructor.prototype.constructor = constructor;\n    Object.defineProperty(constructor, \"super\", {\n        value: superConstructor.prototype\n    });\n    props && Object.assign(constructor.prototype, props);\n};\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */ const $aace3e920a0f1e4d$var$toFlatObject = (sourceObj, destObj, filter, propFilter)=>{\n    let props;\n    let i;\n    let prop;\n    const merged = {};\n    destObj = destObj || {};\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    if (sourceObj == null) return destObj;\n    do {\n        props = Object.getOwnPropertyNames(sourceObj);\n        i = props.length;\n        while(i-- > 0){\n            prop = props[i];\n            if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n                destObj[prop] = sourceObj[prop];\n                merged[prop] = true;\n            }\n        }\n        sourceObj = filter !== false && $aace3e920a0f1e4d$var$getPrototypeOf(sourceObj);\n    }while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n    return destObj;\n};\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */ const $aace3e920a0f1e4d$var$endsWith = (str, searchString, position)=>{\n    str = String(str);\n    if (position === undefined || position > str.length) position = str.length;\n    position -= searchString.length;\n    const lastIndex = str.indexOf(searchString, position);\n    return lastIndex !== -1 && lastIndex === position;\n};\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */ const $aace3e920a0f1e4d$var$toArray = (thing)=>{\n    if (!thing) return null;\n    if ($aace3e920a0f1e4d$var$isArray(thing)) return thing;\n    let i = thing.length;\n    if (!$aace3e920a0f1e4d$var$isNumber(i)) return null;\n    const arr = new Array(i);\n    while(i-- > 0)arr[i] = thing[i];\n    return arr;\n};\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */ // eslint-disable-next-line func-names\nconst $aace3e920a0f1e4d$var$isTypedArray = ((TypedArray)=>{\n    // eslint-disable-next-line func-names\n    return (thing)=>{\n        return TypedArray && thing instanceof TypedArray;\n    };\n})(typeof Uint8Array !== \"undefined\" && $aace3e920a0f1e4d$var$getPrototypeOf(Uint8Array));\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */ const $aace3e920a0f1e4d$var$forEachEntry = (obj, fn)=>{\n    const generator = obj && obj[Symbol.iterator];\n    const iterator = generator.call(obj);\n    let result;\n    while((result = iterator.next()) && !result.done){\n        const pair = result.value;\n        fn.call(obj, pair[0], pair[1]);\n    }\n};\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */ const $aace3e920a0f1e4d$var$matchAll = (regExp, str)=>{\n    let matches;\n    const arr = [];\n    while((matches = regExp.exec(str)) !== null)arr.push(matches);\n    return arr;\n};\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */ const $aace3e920a0f1e4d$var$isHTMLForm = $aace3e920a0f1e4d$var$kindOfTest(\"HTMLFormElement\");\nconst $aace3e920a0f1e4d$var$toCamelCase = (str)=>{\n    return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g, function replacer(m, p1, p2) {\n        return p1.toUpperCase() + p2;\n    });\n};\n/* Creating a function that will check if an object has a property. */ const $aace3e920a0f1e4d$var$hasOwnProperty = (({ hasOwnProperty: hasOwnProperty })=>(obj, prop)=>hasOwnProperty.call(obj, prop))(Object.prototype);\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */ const $aace3e920a0f1e4d$var$isRegExp = $aace3e920a0f1e4d$var$kindOfTest(\"RegExp\");\nconst $aace3e920a0f1e4d$var$reduceDescriptors = (obj, reducer)=>{\n    const descriptors = Object.getOwnPropertyDescriptors(obj);\n    const reducedDescriptors = {};\n    $aace3e920a0f1e4d$var$forEach(descriptors, (descriptor, name)=>{\n        let ret;\n        if ((ret = reducer(descriptor, name, obj)) !== false) reducedDescriptors[name] = ret || descriptor;\n    });\n    Object.defineProperties(obj, reducedDescriptors);\n};\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */ const $aace3e920a0f1e4d$var$freezeMethods = (obj)=>{\n    $aace3e920a0f1e4d$var$reduceDescriptors(obj, (descriptor, name)=>{\n        // skip restricted props in strict mode\n        if ($aace3e920a0f1e4d$var$isFunction(obj) && [\n            \"arguments\",\n            \"caller\",\n            \"callee\"\n        ].indexOf(name) !== -1) return false;\n        const value = obj[name];\n        if (!$aace3e920a0f1e4d$var$isFunction(value)) return;\n        descriptor.enumerable = false;\n        if (\"writable\" in descriptor) {\n            descriptor.writable = false;\n            return;\n        }\n        if (!descriptor.set) descriptor.set = ()=>{\n            throw Error(\"Can not rewrite read-only method '\" + name + \"'\");\n        };\n    });\n};\nconst $aace3e920a0f1e4d$var$toObjectSet = (arrayOrString, delimiter)=>{\n    const obj = {};\n    const define = (arr)=>{\n        arr.forEach((value)=>{\n            obj[value] = true;\n        });\n    };\n    $aace3e920a0f1e4d$var$isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n    return obj;\n};\nconst $aace3e920a0f1e4d$var$noop = ()=>{};\nconst $aace3e920a0f1e4d$var$toFiniteNumber = (value, defaultValue)=>{\n    value = +value;\n    return Number.isFinite(value) ? value : defaultValue;\n};\nconst $aace3e920a0f1e4d$var$ALPHA = \"abcdefghijklmnopqrstuvwxyz\";\nconst $aace3e920a0f1e4d$var$DIGIT = \"0123456789\";\nconst $aace3e920a0f1e4d$var$ALPHABET = {\n    DIGIT: $aace3e920a0f1e4d$var$DIGIT,\n    ALPHA: $aace3e920a0f1e4d$var$ALPHA,\n    ALPHA_DIGIT: $aace3e920a0f1e4d$var$ALPHA + $aace3e920a0f1e4d$var$ALPHA.toUpperCase() + $aace3e920a0f1e4d$var$DIGIT\n};\nconst $aace3e920a0f1e4d$var$generateString = (size = 16, alphabet = $aace3e920a0f1e4d$var$ALPHABET.ALPHA_DIGIT)=>{\n    let str = \"\";\n    const { length: length } = alphabet;\n    while(size--)str += alphabet[Math.random() * length | 0];\n    return str;\n};\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */ function $aace3e920a0f1e4d$var$isSpecCompliantForm(thing) {\n    return !!(thing && $aace3e920a0f1e4d$var$isFunction(thing.append) && thing[Symbol.toStringTag] === \"FormData\" && thing[Symbol.iterator]);\n}\nconst $aace3e920a0f1e4d$var$toJSONObject = (obj)=>{\n    const stack = new Array(10);\n    const visit = (source, i)=>{\n        if ($aace3e920a0f1e4d$var$isObject(source)) {\n            if (stack.indexOf(source) >= 0) return;\n            if (!(\"toJSON\" in source)) {\n                stack[i] = source;\n                const target = $aace3e920a0f1e4d$var$isArray(source) ? [] : {};\n                $aace3e920a0f1e4d$var$forEach(source, (value, key)=>{\n                    const reducedValue = visit(value, i + 1);\n                    !$aace3e920a0f1e4d$var$isUndefined(reducedValue) && (target[key] = reducedValue);\n                });\n                stack[i] = undefined;\n                return target;\n            }\n        }\n        return source;\n    };\n    return visit(obj, 0);\n};\nconst $aace3e920a0f1e4d$var$isAsyncFn = $aace3e920a0f1e4d$var$kindOfTest(\"AsyncFunction\");\nconst $aace3e920a0f1e4d$var$isThenable = (thing)=>thing && ($aace3e920a0f1e4d$var$isObject(thing) || $aace3e920a0f1e4d$var$isFunction(thing)) && $aace3e920a0f1e4d$var$isFunction(thing.then) && $aace3e920a0f1e4d$var$isFunction(thing.catch);\nvar $aace3e920a0f1e4d$export$2e2bcd8739ae039 = {\n    isArray: $aace3e920a0f1e4d$var$isArray,\n    isArrayBuffer: $aace3e920a0f1e4d$var$isArrayBuffer,\n    isBuffer: $aace3e920a0f1e4d$var$isBuffer,\n    isFormData: $aace3e920a0f1e4d$var$isFormData,\n    isArrayBufferView: $aace3e920a0f1e4d$var$isArrayBufferView,\n    isString: $aace3e920a0f1e4d$var$isString,\n    isNumber: $aace3e920a0f1e4d$var$isNumber,\n    isBoolean: $aace3e920a0f1e4d$var$isBoolean,\n    isObject: $aace3e920a0f1e4d$var$isObject,\n    isPlainObject: $aace3e920a0f1e4d$var$isPlainObject,\n    isUndefined: $aace3e920a0f1e4d$var$isUndefined,\n    isDate: $aace3e920a0f1e4d$var$isDate,\n    isFile: $aace3e920a0f1e4d$var$isFile,\n    isBlob: $aace3e920a0f1e4d$var$isBlob,\n    isRegExp: $aace3e920a0f1e4d$var$isRegExp,\n    isFunction: $aace3e920a0f1e4d$var$isFunction,\n    isStream: $aace3e920a0f1e4d$var$isStream,\n    isURLSearchParams: $aace3e920a0f1e4d$var$isURLSearchParams,\n    isTypedArray: $aace3e920a0f1e4d$var$isTypedArray,\n    isFileList: $aace3e920a0f1e4d$var$isFileList,\n    forEach: $aace3e920a0f1e4d$var$forEach,\n    merge: $aace3e920a0f1e4d$var$merge,\n    extend: $aace3e920a0f1e4d$var$extend,\n    trim: $aace3e920a0f1e4d$var$trim,\n    stripBOM: $aace3e920a0f1e4d$var$stripBOM,\n    inherits: $aace3e920a0f1e4d$var$inherits,\n    toFlatObject: $aace3e920a0f1e4d$var$toFlatObject,\n    kindOf: $aace3e920a0f1e4d$var$kindOf,\n    kindOfTest: $aace3e920a0f1e4d$var$kindOfTest,\n    endsWith: $aace3e920a0f1e4d$var$endsWith,\n    toArray: $aace3e920a0f1e4d$var$toArray,\n    forEachEntry: $aace3e920a0f1e4d$var$forEachEntry,\n    matchAll: $aace3e920a0f1e4d$var$matchAll,\n    isHTMLForm: $aace3e920a0f1e4d$var$isHTMLForm,\n    hasOwnProperty: $aace3e920a0f1e4d$var$hasOwnProperty,\n    hasOwnProp: $aace3e920a0f1e4d$var$hasOwnProperty,\n    reduceDescriptors: $aace3e920a0f1e4d$var$reduceDescriptors,\n    freezeMethods: $aace3e920a0f1e4d$var$freezeMethods,\n    toObjectSet: $aace3e920a0f1e4d$var$toObjectSet,\n    toCamelCase: $aace3e920a0f1e4d$var$toCamelCase,\n    noop: $aace3e920a0f1e4d$var$noop,\n    toFiniteNumber: $aace3e920a0f1e4d$var$toFiniteNumber,\n    findKey: $aace3e920a0f1e4d$var$findKey,\n    global: $aace3e920a0f1e4d$var$_global,\n    isContextDefined: $aace3e920a0f1e4d$var$isContextDefined,\n    ALPHABET: $aace3e920a0f1e4d$var$ALPHABET,\n    generateString: $aace3e920a0f1e4d$var$generateString,\n    isSpecCompliantForm: $aace3e920a0f1e4d$var$isSpecCompliantForm,\n    toJSONObject: $aace3e920a0f1e4d$var$toJSONObject,\n    isAsyncFn: $aace3e920a0f1e4d$var$isAsyncFn,\n    isThenable: $aace3e920a0f1e4d$var$isThenable\n};\n\n\n\n\n\n\n\n\"use strict\";\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */ function $0139f1d30f4d6bd5$var$AxiosError(message, code, config, request, response) {\n    Error.call(this);\n    if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n    else this.stack = new Error().stack;\n    this.message = message;\n    this.name = \"AxiosError\";\n    code && (this.code = code);\n    config && (this.config = config);\n    request && (this.request = request);\n    response && (this.response = response);\n}\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).inherits($0139f1d30f4d6bd5$var$AxiosError, Error, {\n    toJSON: function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toJSONObject(this.config),\n            code: this.code,\n            status: this.response && this.response.status ? this.response.status : null\n        };\n    }\n});\nconst $0139f1d30f4d6bd5$var$prototype = $0139f1d30f4d6bd5$var$AxiosError.prototype;\nconst $0139f1d30f4d6bd5$var$descriptors = {};\n[\n    \"ERR_BAD_OPTION_VALUE\",\n    \"ERR_BAD_OPTION\",\n    \"ECONNABORTED\",\n    \"ETIMEDOUT\",\n    \"ERR_NETWORK\",\n    \"ERR_FR_TOO_MANY_REDIRECTS\",\n    \"ERR_DEPRECATED\",\n    \"ERR_BAD_RESPONSE\",\n    \"ERR_BAD_REQUEST\",\n    \"ERR_CANCELED\",\n    \"ERR_NOT_SUPPORT\",\n    \"ERR_INVALID_URL\"\n].forEach((code)=>{\n    $0139f1d30f4d6bd5$var$descriptors[code] = {\n        value: code\n    };\n});\nObject.defineProperties($0139f1d30f4d6bd5$var$AxiosError, $0139f1d30f4d6bd5$var$descriptors);\nObject.defineProperty($0139f1d30f4d6bd5$var$prototype, \"isAxiosError\", {\n    value: true\n});\n// eslint-disable-next-line func-names\n$0139f1d30f4d6bd5$var$AxiosError.from = (error, code, config, request, response, customProps)=>{\n    const axiosError = Object.create($0139f1d30f4d6bd5$var$prototype);\n    (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toFlatObject(error, axiosError, function filter(obj) {\n        return obj !== Error.prototype;\n    }, (prop)=>{\n        return prop !== \"isAxiosError\";\n    });\n    $0139f1d30f4d6bd5$var$AxiosError.call(axiosError, error.message, code, config, request, response);\n    axiosError.cause = error;\n    axiosError.name = error.name;\n    customProps && Object.assign(axiosError, customProps);\n    return axiosError;\n};\nvar $0139f1d30f4d6bd5$export$2e2bcd8739ae039 = $0139f1d30f4d6bd5$var$AxiosError;\n\n\n// eslint-disable-next-line strict\nvar $86ebf0c810395e29$export$2e2bcd8739ae039 = null;\n\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $0934e0939605d48c$export$a143d493d941bafc;\nvar $0934e0939605d48c$export$e4cf37d7f6fb9e0a;\nvar $0934e0939605d48c$export$f99ded8fe4b79145;\nvar $0934e0939605d48c$export$599f31c3813fae4d;\n\"use strict\";\nvar $8a0a73e6b73fd0c4$export$a48f0734ac7c2329;\nvar $8a0a73e6b73fd0c4$export$d622b2ad8d90c771;\nvar $8a0a73e6b73fd0c4$export$6100ba28696e12de;\n\"use strict\";\n$8a0a73e6b73fd0c4$export$a48f0734ac7c2329 = $8a0a73e6b73fd0c4$var$byteLength;\n$8a0a73e6b73fd0c4$export$d622b2ad8d90c771 = $8a0a73e6b73fd0c4$var$toByteArray;\n$8a0a73e6b73fd0c4$export$6100ba28696e12de = $8a0a73e6b73fd0c4$var$fromByteArray;\nvar $8a0a73e6b73fd0c4$var$lookup = [];\nvar $8a0a73e6b73fd0c4$var$revLookup = [];\nvar $8a0a73e6b73fd0c4$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $8a0a73e6b73fd0c4$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $8a0a73e6b73fd0c4$var$i = 0, $8a0a73e6b73fd0c4$var$len = $8a0a73e6b73fd0c4$var$code.length; $8a0a73e6b73fd0c4$var$i < $8a0a73e6b73fd0c4$var$len; ++$8a0a73e6b73fd0c4$var$i){\n    $8a0a73e6b73fd0c4$var$lookup[$8a0a73e6b73fd0c4$var$i] = $8a0a73e6b73fd0c4$var$code[$8a0a73e6b73fd0c4$var$i];\n    $8a0a73e6b73fd0c4$var$revLookup[$8a0a73e6b73fd0c4$var$code.charCodeAt($8a0a73e6b73fd0c4$var$i)] = $8a0a73e6b73fd0c4$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$8a0a73e6b73fd0c4$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$8a0a73e6b73fd0c4$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $8a0a73e6b73fd0c4$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $8a0a73e6b73fd0c4$var$byteLength(b64) {\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $8a0a73e6b73fd0c4$var$toByteArray(b64) {\n    var tmp;\n    var lens = $8a0a73e6b73fd0c4$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $8a0a73e6b73fd0c4$var$Arr($8a0a73e6b73fd0c4$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 18 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 2 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i)] << 10 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $8a0a73e6b73fd0c4$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $8a0a73e6b73fd0c4$var$tripletToBase64(num) {\n    return $8a0a73e6b73fd0c4$var$lookup[num >> 18 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 12 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num >> 6 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[num & 0x3F];\n}\nfunction $8a0a73e6b73fd0c4$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($8a0a73e6b73fd0c4$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $8a0a73e6b73fd0c4$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($8a0a73e6b73fd0c4$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 2] + $8a0a73e6b73fd0c4$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($8a0a73e6b73fd0c4$var$lookup[tmp >> 10] + $8a0a73e6b73fd0c4$var$lookup[tmp >> 4 & 0x3F] + $8a0a73e6b73fd0c4$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $998eb38f4d082829$export$aafa59e2e03f2942;\nvar $998eb38f4d082829$export$68d8715fc104d294;\n$998eb38f4d082829$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$998eb38f4d082829$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n\nconst $0934e0939605d48c$var$customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\n$0934e0939605d48c$export$a143d493d941bafc = $0934e0939605d48c$var$Buffer;\n$0934e0939605d48c$export$e4cf37d7f6fb9e0a = $0934e0939605d48c$var$SlowBuffer;\n$0934e0939605d48c$export$f99ded8fe4b79145 = 50;\nconst $0934e0939605d48c$var$K_MAX_LENGTH = 0x7fffffff;\n$0934e0939605d48c$export$599f31c3813fae4d = $0934e0939605d48c$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT = $0934e0939605d48c$var$typedArraySupport();\nif (!$0934e0939605d48c$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $0934e0939605d48c$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        const arr = new Uint8Array(1);\n        const proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($0934e0939605d48c$var$Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!$0934e0939605d48c$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $0934e0939605d48c$var$createBuffer(length) {\n    if (length > $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $0934e0939605d48c$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $0934e0939605d48c$var$allocUnsafe(arg);\n    }\n    return $0934e0939605d48c$var$from(arg, encodingOrOffset, length);\n}\n$0934e0939605d48c$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $0934e0939605d48c$var$from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return $0934e0939605d48c$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $0934e0939605d48c$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($0934e0939605d48c$var$isInstance(value, ArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, ArrayBuffer)) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && ($0934e0939605d48c$var$isInstance(value, SharedArrayBuffer) || value && $0934e0939605d48c$var$isInstance(value.buffer, SharedArrayBuffer))) return $0934e0939605d48c$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $0934e0939605d48c$var$Buffer.from(valueOf, encodingOrOffset, length);\n    const b = $0934e0939605d48c$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return $0934e0939605d48c$var$Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $0934e0939605d48c$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $0934e0939605d48c$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($0934e0939605d48c$var$Buffer, Uint8Array);\nfunction $0934e0939605d48c$var$assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $0934e0939605d48c$var$alloc(size, fill, encoding) {\n    $0934e0939605d48c$var$assertSize(size);\n    if (size <= 0) return $0934e0939605d48c$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? $0934e0939605d48c$var$createBuffer(size).fill(fill, encoding) : $0934e0939605d48c$var$createBuffer(size).fill(fill);\n    return $0934e0939605d48c$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $0934e0939605d48c$var$Buffer.alloc = function(size, fill, encoding) {\n    return $0934e0939605d48c$var$alloc(size, fill, encoding);\n};\nfunction $0934e0939605d48c$var$allocUnsafe(size) {\n    $0934e0939605d48c$var$assertSize(size);\n    return $0934e0939605d48c$var$createBuffer(size < 0 ? 0 : $0934e0939605d48c$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $0934e0939605d48c$var$Buffer.allocUnsafe = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $0934e0939605d48c$var$Buffer.allocUnsafeSlow = function(size) {\n    return $0934e0939605d48c$var$allocUnsafe(size);\n};\nfunction $0934e0939605d48c$var$fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    const length = $0934e0939605d48c$var$byteLength(string, encoding) | 0;\n    let buf = $0934e0939605d48c$var$createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : $0934e0939605d48c$var$checked(array.length) | 0;\n    const buf = $0934e0939605d48c$var$createBuffer(length);\n    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromArrayView(arrayView) {\n    if ($0934e0939605d48c$var$isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return $0934e0939605d48c$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $0934e0939605d48c$var$fromArrayLike(arrayView);\n}\nfunction $0934e0939605d48c$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    let buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $0934e0939605d48c$var$Buffer.prototype);\n    return buf;\n}\nfunction $0934e0939605d48c$var$fromObject(obj) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(obj)) {\n        const len = $0934e0939605d48c$var$checked(obj.length) | 0;\n        const buf = $0934e0939605d48c$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || $0934e0939605d48c$var$numberIsNaN(obj.length)) return $0934e0939605d48c$var$createBuffer(0);\n        return $0934e0939605d48c$var$fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return $0934e0939605d48c$var$fromArrayLike(obj.data);\n}\nfunction $0934e0939605d48c$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $0934e0939605d48c$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $0934e0939605d48c$var$K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction $0934e0939605d48c$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $0934e0939605d48c$var$Buffer.alloc(+length);\n}\n$0934e0939605d48c$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $0934e0939605d48c$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$0934e0939605d48c$var$Buffer.compare = function compare(a, b) {\n    if ($0934e0939605d48c$var$isInstance(a, Uint8Array)) a = $0934e0939605d48c$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($0934e0939605d48c$var$isInstance(b, Uint8Array)) b = $0934e0939605d48c$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(a) || !$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$0934e0939605d48c$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\n$0934e0939605d48c$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $0934e0939605d48c$var$Buffer.alloc(0);\n    let i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    const buffer = $0934e0939605d48c$var$Buffer.allocUnsafe(length);\n    let pos = 0;\n    for(i = 0; i < list.length; ++i){\n        let buf = list[i];\n        if ($0934e0939605d48c$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) {\n                if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) buf = $0934e0939605d48c$var$Buffer.from(buf);\n                buf.copy(buffer, pos);\n            } else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $0934e0939605d48c$var$byteLength(string, encoding) {\n    if ($0934e0939605d48c$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $0934e0939605d48c$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return $0934e0939605d48c$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $0934e0939605d48c$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$0934e0939605d48c$var$Buffer.byteLength = $0934e0939605d48c$var$byteLength;\nfunction $0934e0939605d48c$var$slowToString(encoding, start, end) {\n    let loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return $0934e0939605d48c$var$hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8Slice(this, start, end);\n        case \"ascii\":\n            return $0934e0939605d48c$var$asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return $0934e0939605d48c$var$latin1Slice(this, start, end);\n        case \"base64\":\n            return $0934e0939605d48c$var$base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $0934e0939605d48c$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$0934e0939605d48c$var$Buffer.prototype._isBuffer = true;\nfunction $0934e0939605d48c$var$swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$0934e0939605d48c$var$Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(let i = 0; i < len; i += 2)$0934e0939605d48c$var$swap(this, i, i + 1);\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(let i = 0; i < len; i += 4){\n        $0934e0939605d48c$var$swap(this, i, i + 3);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(let i = 0; i < len; i += 8){\n        $0934e0939605d48c$var$swap(this, i, i + 7);\n        $0934e0939605d48c$var$swap(this, i + 1, i + 6);\n        $0934e0939605d48c$var$swap(this, i + 2, i + 5);\n        $0934e0939605d48c$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$0934e0939605d48c$var$Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return $0934e0939605d48c$var$utf8Slice(this, 0, length);\n    return $0934e0939605d48c$var$slowToString.apply(this, arguments);\n};\n$0934e0939605d48c$var$Buffer.prototype.toLocaleString = $0934e0939605d48c$var$Buffer.prototype.toString;\n$0934e0939605d48c$var$Buffer.prototype.equals = function equals(b) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return $0934e0939605d48c$var$Buffer.compare(this, b) === 0;\n};\n$0934e0939605d48c$var$Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = $0934e0939605d48c$export$f99ded8fe4b79145;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif ($0934e0939605d48c$var$customInspectSymbol) $0934e0939605d48c$var$Buffer.prototype[$0934e0939605d48c$var$customInspectSymbol] = $0934e0939605d48c$var$Buffer.prototype.inspect;\n$0934e0939605d48c$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($0934e0939605d48c$var$isInstance(target, Uint8Array)) target = $0934e0939605d48c$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $0934e0939605d48c$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($0934e0939605d48c$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = $0934e0939605d48c$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($0934e0939605d48c$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $0934e0939605d48c$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction $0934e0939605d48c$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    let i;\n    if (dir) {\n        let foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            let found = true;\n            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$0934e0939605d48c$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$0934e0939605d48c$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $0934e0939605d48c$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $0934e0939605d48c$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    let i;\n    for(i = 0; i < length; ++i){\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($0934e0939605d48c$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $0934e0939605d48c$var$utf8Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$asciiWrite(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$base64Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $0934e0939605d48c$var$ucs2Write(buf, string, offset, length) {\n    return $0934e0939605d48c$var$blitBuffer($0934e0939605d48c$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$0934e0939605d48c$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return $0934e0939605d48c$var$hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return $0934e0939605d48c$var$utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return $0934e0939605d48c$var$asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return $0934e0939605d48c$var$base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $0934e0939605d48c$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$0934e0939605d48c$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $0934e0939605d48c$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $8a0a73e6b73fd0c4$export$6100ba28696e12de(buf);\n    else return $8a0a73e6b73fd0c4$export$6100ba28696e12de(buf.slice(start, end));\n}\nfunction $0934e0939605d48c$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while(i < end){\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $0934e0939605d48c$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $0934e0939605d48c$var$decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $0934e0939605d48c$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $0934e0939605d48c$var$asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $0934e0939605d48c$var$latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $0934e0939605d48c$var$hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for(let i = start; i < end; ++i)out += $0934e0939605d48c$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $0934e0939605d48c$var$utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$0934e0939605d48c$var$Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $0934e0939605d48c$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $0934e0939605d48c$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\n$0934e0939605d48c$var$Buffer.prototype.readUintLE = $0934e0939605d48c$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUintBE = $0934e0939605d48c$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint8 = $0934e0939605d48c$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16LE = $0934e0939605d48c$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint16BE = $0934e0939605d48c$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32LE = $0934e0939605d48c$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$0934e0939605d48c$var$Buffer.prototype.readUint32BE = $0934e0939605d48c$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$0934e0939605d48c$var$Buffer.prototype.readBigUInt64LE = $0934e0939605d48c$var$defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    $0934e0939605d48c$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $0934e0939605d48c$var$boundsError(offset, this.length - 8);\n    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\n$0934e0939605d48c$var$Buffer.prototype.readBigUInt64BE = $0934e0939605d48c$var$defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    $0934e0939605d48c$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $0934e0939605d48c$var$boundsError(offset, this.length - 8);\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n$0934e0939605d48c$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$0934e0939605d48c$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$0934e0939605d48c$var$Buffer.prototype.readBigInt64LE = $0934e0939605d48c$var$defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    $0934e0939605d48c$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $0934e0939605d48c$var$boundsError(offset, this.length - 8);\n    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow\n    );\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\n$0934e0939605d48c$var$Buffer.prototype.readBigInt64BE = $0934e0939605d48c$var$defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    $0934e0939605d48c$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $0934e0939605d48c$var$boundsError(offset, this.length - 8);\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);\n});\n$0934e0939605d48c$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, true, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 4, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, false, 23, 4);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, true, 52, 8);\n};\n$0934e0939605d48c$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkOffset(offset, 8, this.length);\n    return $998eb38f4d082829$export$aafa59e2e03f2942(this, offset, false, 52, 8);\n};\nfunction $0934e0939605d48c$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\n$0934e0939605d48c$var$Buffer.prototype.writeUintLE = $0934e0939605d48c$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUintBE = $0934e0939605d48c$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint8 = $0934e0939605d48c$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint16BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32LE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeUint32BE = $0934e0939605d48c$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $0934e0939605d48c$var$wrtBigUInt64LE(buf, value, offset, min, max) {\n    $0934e0939605d48c$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n}\nfunction $0934e0939605d48c$var$wrtBigUInt64BE(buf, value, offset, min, max) {\n    $0934e0939605d48c$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeBigUInt64LE = $0934e0939605d48c$var$defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return $0934e0939605d48c$var$wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$0934e0939605d48c$var$Buffer.prototype.writeBigUInt64BE = $0934e0939605d48c$var$defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return $0934e0939605d48c$var$wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$0934e0939605d48c$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $0934e0939605d48c$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$0934e0939605d48c$var$Buffer.prototype.writeBigInt64LE = $0934e0939605d48c$var$defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return $0934e0939605d48c$var$wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\n$0934e0939605d48c$var$Buffer.prototype.writeBigInt64BE = $0934e0939605d48c$var$defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return $0934e0939605d48c$var$wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction $0934e0939605d48c$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction $0934e0939605d48c$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $998eb38f4d082829$export$68d8715fc104d294(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $0934e0939605d48c$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $0934e0939605d48c$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $998eb38f4d082829$export$68d8715fc104d294(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, true, noAssert);\n};\n$0934e0939605d48c$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $0934e0939605d48c$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$0934e0939605d48c$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$0934e0939605d48c$var$Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$0934e0939605d48c$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !$0934e0939605d48c$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        const bytes = $0934e0939605d48c$var$Buffer.isBuffer(val) ? val : $0934e0939605d48c$var$Buffer.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\nconst $0934e0939605d48c$var$errors = {};\nfunction $0934e0939605d48c$var$E(sym, getMessage, Base) {\n    $0934e0939605d48c$var$errors[sym] = class NodeError extends Base {\n        constructor(){\n            super();\n            Object.defineProperty(this, \"message\", {\n                value: getMessage.apply(this, arguments),\n                writable: true,\n                configurable: true\n            });\n            // Add the error code to the name to include it in the stack trace.\n            this.name = `${this.name} [${sym}]`;\n            // Access the stack to generate the error message including the error code\n            // from the name.\n            this.stack // eslint-disable-line no-unused-expressions\n            ;\n            // Reset the name to the actual name.\n            delete this.name;\n        }\n        get code() {\n            return sym;\n        }\n        set code(value) {\n            Object.defineProperty(this, \"code\", {\n                configurable: true,\n                enumerable: true,\n                value: value,\n                writable: true\n            });\n        }\n        toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n        }\n    };\n}\n$0934e0939605d48c$var$E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n    if (name) return `${name} is outside of buffer bounds`;\n    return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\n$0934e0939605d48c$var$E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\n$0934e0939605d48c$var$E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = $0934e0939605d48c$var$addNumericalSeparator(String(input));\n    else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = $0934e0939605d48c$var$addNumericalSeparator(received);\n        received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n}, RangeError);\nfunction $0934e0939605d48c$var$addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;\n    return `${val.slice(0, i)}${res}`;\n}\n// CHECK FUNCTIONS\n// ===============\nfunction $0934e0939605d48c$var$checkBounds(buf, offset, byteLength) {\n    $0934e0939605d48c$var$validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) $0934e0939605d48c$var$boundsError(offset, buf.length - (byteLength + 1));\n}\nfunction $0934e0939605d48c$var$checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength > 3) {\n            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        } else range = `>= ${min}${n} and <= ${max}${n}`;\n        throw new $0934e0939605d48c$var$errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    $0934e0939605d48c$var$checkBounds(buf, offset, byteLength);\n}\nfunction $0934e0939605d48c$var$validateNumber(value, name) {\n    if (typeof value !== \"number\") throw new $0934e0939605d48c$var$errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction $0934e0939605d48c$var$boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n        $0934e0939605d48c$var$validateNumber(value, type);\n        throw new $0934e0939605d48c$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n    if (length < 0) throw new $0934e0939605d48c$var$errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    throw new $0934e0939605d48c$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n// HELPER FUNCTIONS\n// ================\nconst $0934e0939605d48c$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $0934e0939605d48c$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($0934e0939605d48c$var$INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction $0934e0939605d48c$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for(let i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction $0934e0939605d48c$var$asciiToBytes(str) {\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $0934e0939605d48c$var$base64ToBytes(str) {\n    return $8a0a73e6b73fd0c4$export$d622b2ad8d90c771($0934e0939605d48c$var$base64clean(str));\n}\nfunction $0934e0939605d48c$var$blitBuffer(src, dst, offset, length) {\n    let i;\n    for(i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $0934e0939605d48c$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $0934e0939605d48c$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst $0934e0939605d48c$var$hexSliceLookupTable = function() {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for(let i = 0; i < 16; ++i){\n        const i16 = i * 16;\n        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n// Return not function with Error if BigInt not supported\nfunction $0934e0939605d48c$var$defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? $0934e0939605d48c$var$BufferBigIntNotDefined : fn;\n}\nfunction $0934e0939605d48c$var$BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n}\n\n\nvar $fd07b9cb0132c1f6$require$Buffer = $0934e0939605d48c$export$a143d493d941bafc;\n\"use strict\";\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */ function $fd07b9cb0132c1f6$var$isVisitable(thing) {\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isPlainObject(thing) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(thing);\n}\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */ function $fd07b9cb0132c1f6$var$removeBrackets(key) {\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).endsWith(key, \"[]\") ? key.slice(0, -2) : key;\n}\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */ function $fd07b9cb0132c1f6$var$renderKey(path, key, dots) {\n    if (!path) return key;\n    return path.concat(key).map(function each(token, i) {\n        // eslint-disable-next-line no-param-reassign\n        token = $fd07b9cb0132c1f6$var$removeBrackets(token);\n        return !dots && i ? \"[\" + token + \"]\" : token;\n    }).join(dots ? \".\" : \"\");\n}\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */ function $fd07b9cb0132c1f6$var$isFlatArray(arr) {\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(arr) && !arr.some($fd07b9cb0132c1f6$var$isVisitable);\n}\nconst $fd07b9cb0132c1f6$var$predicates = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toFlatObject((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039), {}, null, function filter(prop) {\n    return /^is[A-Z]/.test(prop);\n});\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/ /**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */ function $fd07b9cb0132c1f6$var$toFormData(obj, formData, options) {\n    if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isObject(obj)) throw new TypeError(\"target must be an object\");\n    // eslint-disable-next-line no-param-reassign\n    formData = formData || new ((0, $86ebf0c810395e29$export$2e2bcd8739ae039) || FormData)();\n    // eslint-disable-next-line no-param-reassign\n    options = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toFlatObject(options, {\n        metaTokens: true,\n        dots: false,\n        indexes: false\n    }, false, function defined(option, source) {\n        // eslint-disable-next-line no-eq-null,eqeqeq\n        return !(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(source[option]);\n    });\n    const metaTokens = options.metaTokens;\n    // eslint-disable-next-line no-use-before-define\n    const visitor = options.visitor || defaultVisitor;\n    const dots = options.dots;\n    const indexes = options.indexes;\n    const _Blob = options.Blob || typeof Blob !== \"undefined\" && Blob;\n    const useBlob = _Blob && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isSpecCompliantForm(formData);\n    if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(visitor)) throw new TypeError(\"visitor must be a function\");\n    function convertValue(value) {\n        if (value === null) return \"\";\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isDate(value)) return value.toISOString();\n        if (!useBlob && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isBlob(value)) throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Blob is not supported. Use a Buffer instead.\");\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArrayBuffer(value) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isTypedArray(value)) return useBlob && typeof Blob === \"function\" ? new Blob([\n            value\n        ]) : $fd07b9cb0132c1f6$require$Buffer.from(value);\n        return value;\n    }\n    /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */ function defaultVisitor(value, key, path) {\n        let arr = value;\n        if (value && !path && typeof value === \"object\") {\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).endsWith(key, \"{}\")) {\n                // eslint-disable-next-line no-param-reassign\n                key = metaTokens ? key : key.slice(0, -2);\n                // eslint-disable-next-line no-param-reassign\n                value = JSON.stringify(value);\n            } else if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(value) && $fd07b9cb0132c1f6$var$isFlatArray(value) || ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFileList(value) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).endsWith(key, \"[]\")) && (arr = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toArray(value))) {\n                // eslint-disable-next-line no-param-reassign\n                key = $fd07b9cb0132c1f6$var$removeBrackets(key);\n                arr.forEach(function each(el, index) {\n                    !((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(el) || el === null) && formData.append(// eslint-disable-next-line no-nested-ternary\n                    indexes === true ? $fd07b9cb0132c1f6$var$renderKey([\n                        key\n                    ], index, dots) : indexes === null ? key : key + \"[]\", convertValue(el));\n                });\n                return false;\n            }\n        }\n        if ($fd07b9cb0132c1f6$var$isVisitable(value)) return true;\n        formData.append($fd07b9cb0132c1f6$var$renderKey(path, key, dots), convertValue(value));\n        return false;\n    }\n    const stack = [];\n    const exposedHelpers = Object.assign($fd07b9cb0132c1f6$var$predicates, {\n        defaultVisitor: defaultVisitor,\n        convertValue: convertValue,\n        isVisitable: $fd07b9cb0132c1f6$var$isVisitable\n    });\n    function build(value, path) {\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(value)) return;\n        if (stack.indexOf(value) !== -1) throw Error(\"Circular reference detected in \" + path.join(\".\"));\n        stack.push(value);\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(value, function each(el, key) {\n            const result = !((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(el) || el === null) && visitor.call(formData, el, (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(key) ? key.trim() : key, path, exposedHelpers);\n            if (result === true) build(el, path ? path.concat(key) : [\n                key\n            ]);\n        });\n        stack.pop();\n    }\n    if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isObject(obj)) throw new TypeError(\"data must be an object\");\n    build(obj);\n    return formData;\n}\nvar $fd07b9cb0132c1f6$export$2e2bcd8739ae039 = $fd07b9cb0132c1f6$var$toFormData;\n\n\n\"use strict\";\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */ function $344cf8e4292137b6$var$encode(str) {\n    const charMap = {\n        \"!\": \"%21\",\n        \"'\": \"%27\",\n        \"(\": \"%28\",\n        \")\": \"%29\",\n        \"~\": \"%7E\",\n        \"%20\": \"+\",\n        \"%00\": \"\\x00\"\n    };\n    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n        return charMap[match];\n    });\n}\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */ function $344cf8e4292137b6$var$AxiosURLSearchParams(params, options) {\n    this._pairs = [];\n    params && (0, $fd07b9cb0132c1f6$export$2e2bcd8739ae039)(params, this, options);\n}\nconst $344cf8e4292137b6$var$prototype = $344cf8e4292137b6$var$AxiosURLSearchParams.prototype;\n$344cf8e4292137b6$var$prototype.append = function append(name, value) {\n    this._pairs.push([\n        name,\n        value\n    ]);\n};\n$344cf8e4292137b6$var$prototype.toString = function toString(encoder) {\n    const _encode = encoder ? function(value) {\n        return encoder.call(this, value, $344cf8e4292137b6$var$encode);\n    } : $344cf8e4292137b6$var$encode;\n    return this._pairs.map(function each(pair) {\n        return _encode(pair[0]) + \"=\" + _encode(pair[1]);\n    }, \"\").join(\"&\");\n};\nvar $344cf8e4292137b6$export$2e2bcd8739ae039 = $344cf8e4292137b6$var$AxiosURLSearchParams;\n\n\n\"use strict\";\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */ function $db2f05ec923f2ee7$var$encode(val) {\n    return encodeURIComponent(val).replace(/%3A/gi, \":\").replace(/%24/g, \"$\").replace(/%2C/gi, \",\").replace(/%20/g, \"+\").replace(/%5B/gi, \"[\").replace(/%5D/gi, \"]\");\n}\nfunction $db2f05ec923f2ee7$export$2e2bcd8739ae039(url, params, options) {\n    /*eslint no-param-reassign:0*/ if (!params) return url;\n    const _encode = options && options.encode || $db2f05ec923f2ee7$var$encode;\n    const serializeFn = options && options.serialize;\n    let serializedParams;\n    if (serializeFn) serializedParams = serializeFn(params, options);\n    else serializedParams = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isURLSearchParams(params) ? params.toString() : new (0, $344cf8e4292137b6$export$2e2bcd8739ae039)(params, options).toString(_encode);\n    if (serializedParams) {\n        const hashmarkIndex = url.indexOf(\"#\");\n        if (hashmarkIndex !== -1) url = url.slice(0, hashmarkIndex);\n        url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + serializedParams;\n    }\n    return url;\n}\n\n\n\n\"use strict\";\nclass $01c17f80085c95b1$var$InterceptorManager {\n    constructor(){\n        this.handlers = [];\n    }\n    /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */ use(fulfilled, rejected, options) {\n        this.handlers.push({\n            fulfilled: fulfilled,\n            rejected: rejected,\n            synchronous: options ? options.synchronous : false,\n            runWhen: options ? options.runWhen : null\n        });\n        return this.handlers.length - 1;\n    }\n    /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */ eject(id) {\n        if (this.handlers[id]) this.handlers[id] = null;\n    }\n    /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */ clear() {\n        if (this.handlers) this.handlers = [];\n    }\n    /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */ forEach(fn) {\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(this.handlers, function forEachHandler(h) {\n            if (h !== null) fn(h);\n        });\n    }\n}\nvar $01c17f80085c95b1$export$2e2bcd8739ae039 = $01c17f80085c95b1$var$InterceptorManager;\n\n\n\n\n\n\"use strict\";\nvar $3075bac9f30e7782$export$2e2bcd8739ae039 = {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n};\n\n\n\n\n\n\n\"use strict\";\nvar $a85e5bed82430d61$export$2e2bcd8739ae039 = typeof URLSearchParams !== \"undefined\" ? URLSearchParams : (0, $344cf8e4292137b6$export$2e2bcd8739ae039);\n\n\n\"use strict\";\nvar $46b12d255f217052$export$2e2bcd8739ae039 = typeof FormData !== \"undefined\" ? FormData : null;\n\n\n\"use strict\";\nvar $2e4211376cea43e6$export$2e2bcd8739ae039 = typeof Blob !== \"undefined\" ? Blob : null;\n\n\nvar $fb24c6d0b2a74508$export$2e2bcd8739ae039 = {\n    isBrowser: true,\n    classes: {\n        URLSearchParams: $a85e5bed82430d61$export$2e2bcd8739ae039,\n        FormData: $46b12d255f217052$export$2e2bcd8739ae039,\n        Blob: $2e4211376cea43e6$export$2e2bcd8739ae039\n    },\n    protocols: [\n        \"http\",\n        \"https\",\n        \"file\",\n        \"blob\",\n        \"url\",\n        \"data\"\n    ]\n};\n\n\nvar $232de52881daaba8$exports = {};\n\n$parcel$export($232de52881daaba8$exports, \"hasBrowserEnv\", () => $232de52881daaba8$export$c4996c4b7b93b0bf);\n$parcel$export($232de52881daaba8$exports, \"hasStandardBrowserEnv\", () => $232de52881daaba8$export$c0bcc9250309d66);\n$parcel$export($232de52881daaba8$exports, \"hasStandardBrowserWebWorkerEnv\", () => $232de52881daaba8$export$c81692cf5af97dac);\nconst $232de52881daaba8$export$c4996c4b7b93b0bf = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */ const $232de52881daaba8$export$c0bcc9250309d66 = ((product)=>{\n    return $232de52881daaba8$export$c4996c4b7b93b0bf && [\n        \"ReactNative\",\n        \"NativeScript\",\n        \"NS\"\n    ].indexOf(product) < 0;\n})(typeof navigator !== \"undefined\" && navigator.product);\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */ const $232de52881daaba8$export$c81692cf5af97dac = (()=>{\n    return typeof WorkerGlobalScope !== \"undefined\" && // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope && typeof self.importScripts === \"function\";\n})();\n\n\nvar $852831b4a152a7ad$export$2e2bcd8739ae039 = {\n    ...$232de52881daaba8$exports,\n    ...(0, $fb24c6d0b2a74508$export$2e2bcd8739ae039)\n};\n\n\n\"use strict\";\nfunction $aa000567d8bb5ae2$export$2e2bcd8739ae039(data, options) {\n    return (0, $fd07b9cb0132c1f6$export$2e2bcd8739ae039)(data, new (0, $852831b4a152a7ad$export$2e2bcd8739ae039).classes.URLSearchParams(), Object.assign({\n        visitor: function(value, key, path, helpers) {\n            if ((0, $852831b4a152a7ad$export$2e2bcd8739ae039).isNode && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isBuffer(value)) {\n                this.append(key, value.toString(\"base64\"));\n                return false;\n            }\n            return helpers.defaultVisitor.apply(this, arguments);\n        }\n    }, options));\n}\n\n\n\n\n\"use strict\";\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */ function $cb8fe7f388dc4432$var$parsePropPath(name) {\n    // foo[x][y][z]\n    // foo.x.y.z\n    // foo-x-y-z\n    // foo x y z\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).matchAll(/\\w+|\\[(\\w*)]/g, name).map((match)=>{\n        return match[0] === \"[]\" ? \"\" : match[1] || match[0];\n    });\n}\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */ function $cb8fe7f388dc4432$var$arrayToObject(arr) {\n    const obj = {};\n    const keys = Object.keys(arr);\n    let i;\n    const len = keys.length;\n    let key;\n    for(i = 0; i < len; i++){\n        key = keys[i];\n        obj[key] = arr[key];\n    }\n    return obj;\n}\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */ function $cb8fe7f388dc4432$var$formDataToJSON(formData) {\n    function buildPath(path, value, target, index) {\n        let name = path[index++];\n        if (name === \"__proto__\") return true;\n        const isNumericKey = Number.isFinite(+name);\n        const isLast = index >= path.length;\n        name = !name && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(target) ? target.length : name;\n        if (isLast) {\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).hasOwnProp(target, name)) target[name] = [\n                target[name],\n                value\n            ];\n            else target[name] = value;\n            return !isNumericKey;\n        }\n        if (!target[name] || !(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isObject(target[name])) target[name] = [];\n        const result = buildPath(path, value, target[name], index);\n        if (result && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(target[name])) target[name] = $cb8fe7f388dc4432$var$arrayToObject(target[name]);\n        return !isNumericKey;\n    }\n    if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFormData(formData) && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(formData.entries)) {\n        const obj = {};\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEachEntry(formData, (name, value)=>{\n            buildPath($cb8fe7f388dc4432$var$parsePropPath(name), value, obj, 0);\n        });\n        return obj;\n    }\n    return null;\n}\nvar $cb8fe7f388dc4432$export$2e2bcd8739ae039 = $cb8fe7f388dc4432$var$formDataToJSON;\n\n\n\"use strict\";\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */ function $e30871f78dcd7f19$var$stringifySafely(rawValue, parser, encoder) {\n    if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(rawValue)) try {\n        (parser || JSON.parse)(rawValue);\n        return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).trim(rawValue);\n    } catch (e) {\n        if (e.name !== \"SyntaxError\") throw e;\n    }\n    return (encoder || JSON.stringify)(rawValue);\n}\nconst $e30871f78dcd7f19$var$defaults = {\n    transitional: (0, $3075bac9f30e7782$export$2e2bcd8739ae039),\n    adapter: [\n        \"xhr\",\n        \"http\"\n    ],\n    transformRequest: [\n        function transformRequest(data, headers) {\n            const contentType = headers.getContentType() || \"\";\n            const hasJSONContentType = contentType.indexOf(\"application/json\") > -1;\n            const isObjectPayload = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isObject(data);\n            if (isObjectPayload && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isHTMLForm(data)) data = new FormData(data);\n            const isFormData = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFormData(data);\n            if (isFormData) return hasJSONContentType ? JSON.stringify((0, $cb8fe7f388dc4432$export$2e2bcd8739ae039)(data)) : data;\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArrayBuffer(data) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isBuffer(data) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isStream(data) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFile(data) || (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isBlob(data)) return data;\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArrayBufferView(data)) return data.buffer;\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isURLSearchParams(data)) {\n                headers.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\", false);\n                return data.toString();\n            }\n            let isFileList;\n            if (isObjectPayload) {\n                if (contentType.indexOf(\"application/x-www-form-urlencoded\") > -1) return (0, $aa000567d8bb5ae2$export$2e2bcd8739ae039)(data, this.formSerializer).toString();\n                if ((isFileList = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFileList(data)) || contentType.indexOf(\"multipart/form-data\") > -1) {\n                    const _FormData = this.env && this.env.FormData;\n                    return (0, $fd07b9cb0132c1f6$export$2e2bcd8739ae039)(isFileList ? {\n                        \"files[]\": data\n                    } : data, _FormData && new _FormData(), this.formSerializer);\n                }\n            }\n            if (isObjectPayload || hasJSONContentType) {\n                headers.setContentType(\"application/json\", false);\n                return $e30871f78dcd7f19$var$stringifySafely(data);\n            }\n            return data;\n        }\n    ],\n    transformResponse: [\n        function transformResponse(data) {\n            const transitional = this.transitional || $e30871f78dcd7f19$var$defaults.transitional;\n            const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n            const JSONRequested = this.responseType === \"json\";\n            if (data && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {\n                const silentJSONParsing = transitional && transitional.silentJSONParsing;\n                const strictJSONParsing = !silentJSONParsing && JSONRequested;\n                try {\n                    return JSON.parse(data);\n                } catch (e) {\n                    if (strictJSONParsing) {\n                        if (e.name === \"SyntaxError\") throw (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).from(e, (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_RESPONSE, this, null, this.response);\n                        throw e;\n                    }\n                }\n            }\n            return data;\n        }\n    ],\n    /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */ timeout: 0,\n    xsrfCookieName: \"XSRF-TOKEN\",\n    xsrfHeaderName: \"X-XSRF-TOKEN\",\n    maxContentLength: -1,\n    maxBodyLength: -1,\n    env: {\n        FormData: (0, $852831b4a152a7ad$export$2e2bcd8739ae039).classes.FormData,\n        Blob: (0, $852831b4a152a7ad$export$2e2bcd8739ae039).classes.Blob\n    },\n    validateStatus: function validateStatus(status) {\n        return status >= 200 && status < 300;\n    },\n    headers: {\n        common: {\n            \"Accept\": \"application/json, text/plain, */*\",\n            \"Content-Type\": undefined\n        }\n    }\n};\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach([\n    \"delete\",\n    \"get\",\n    \"head\",\n    \"post\",\n    \"put\",\n    \"patch\"\n], (method)=>{\n    $e30871f78dcd7f19$var$defaults.headers[method] = {};\n});\nvar $e30871f78dcd7f19$export$2e2bcd8739ae039 = $e30871f78dcd7f19$var$defaults;\n\n\n\n\n\"use strict\";\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst $36eacf0f5ae88424$var$ignoreDuplicateOf = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toObjectSet([\n    \"age\",\n    \"authorization\",\n    \"content-length\",\n    \"content-type\",\n    \"etag\",\n    \"expires\",\n    \"from\",\n    \"host\",\n    \"if-modified-since\",\n    \"if-unmodified-since\",\n    \"last-modified\",\n    \"location\",\n    \"max-forwards\",\n    \"proxy-authorization\",\n    \"referer\",\n    \"retry-after\",\n    \"user-agent\"\n]);\nvar /**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */ $36eacf0f5ae88424$export$2e2bcd8739ae039 = (rawHeaders)=>{\n    const parsed = {};\n    let key;\n    let val;\n    let i;\n    rawHeaders && rawHeaders.split(\"\\n\").forEach(function parser(line) {\n        i = line.indexOf(\":\");\n        key = line.substring(0, i).trim().toLowerCase();\n        val = line.substring(i + 1).trim();\n        if (!key || parsed[key] && $36eacf0f5ae88424$var$ignoreDuplicateOf[key]) return;\n        if (key === \"set-cookie\") {\n            if (parsed[key]) parsed[key].push(val);\n            else parsed[key] = [\n                val\n            ];\n        } else parsed[key] = parsed[key] ? parsed[key] + \", \" + val : val;\n    });\n    return parsed;\n};\n\n\n\"use strict\";\nconst $54e5234108b8e954$var$$internals = Symbol(\"internals\");\nfunction $54e5234108b8e954$var$normalizeHeader(header) {\n    return header && String(header).trim().toLowerCase();\n}\nfunction $54e5234108b8e954$var$normalizeValue(value) {\n    if (value === false || value == null) return value;\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(value) ? value.map($54e5234108b8e954$var$normalizeValue) : String(value);\n}\nfunction $54e5234108b8e954$var$parseTokens(str) {\n    const tokens = Object.create(null);\n    const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n    let match;\n    while(match = tokensRE.exec(str))tokens[match[1]] = match[2];\n    return tokens;\n}\nconst $54e5234108b8e954$var$isValidHeaderName = (str)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\nfunction $54e5234108b8e954$var$matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n    if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(filter)) return filter.call(this, value, header);\n    if (isHeaderNameFilter) value = header;\n    if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(value)) return;\n    if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(filter)) return value.indexOf(filter) !== -1;\n    if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isRegExp(filter)) return filter.test(value);\n}\nfunction $54e5234108b8e954$var$formatHeader(header) {\n    return header.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str)=>{\n        return char.toUpperCase() + str;\n    });\n}\nfunction $54e5234108b8e954$var$buildAccessors(obj, header) {\n    const accessorName = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).toCamelCase(\" \" + header);\n    [\n        \"get\",\n        \"set\",\n        \"has\"\n    ].forEach((methodName)=>{\n        Object.defineProperty(obj, methodName + accessorName, {\n            value: function(arg1, arg2, arg3) {\n                return this[methodName].call(this, header, arg1, arg2, arg3);\n            },\n            configurable: true\n        });\n    });\n}\nclass $54e5234108b8e954$var$AxiosHeaders {\n    constructor(headers){\n        headers && this.set(headers);\n    }\n    set(header, valueOrRewrite, rewrite) {\n        const self = this;\n        function setHeader(_value, _header, _rewrite) {\n            const lHeader = $54e5234108b8e954$var$normalizeHeader(_header);\n            if (!lHeader) throw new Error(\"header name must be a non-empty string\");\n            const key = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).findKey(self, lHeader);\n            if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) self[key || _header] = $54e5234108b8e954$var$normalizeValue(_value);\n        }\n        const setHeaders = (headers, _rewrite)=>(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(headers, (_value, _header)=>setHeader(_value, _header, _rewrite));\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isPlainObject(header) || header instanceof this.constructor) setHeaders(header, valueOrRewrite);\n        else if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(header) && (header = header.trim()) && !$54e5234108b8e954$var$isValidHeaderName(header)) setHeaders((0, $36eacf0f5ae88424$export$2e2bcd8739ae039)(header), valueOrRewrite);\n        else header != null && setHeader(valueOrRewrite, header, rewrite);\n        return this;\n    }\n    get(header, parser) {\n        header = $54e5234108b8e954$var$normalizeHeader(header);\n        if (header) {\n            const key = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).findKey(this, header);\n            if (key) {\n                const value = this[key];\n                if (!parser) return value;\n                if (parser === true) return $54e5234108b8e954$var$parseTokens(value);\n                if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(parser)) return parser.call(this, value, key);\n                if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isRegExp(parser)) return parser.exec(value);\n                throw new TypeError(\"parser must be boolean|regexp|function\");\n            }\n        }\n    }\n    has(header, matcher) {\n        header = $54e5234108b8e954$var$normalizeHeader(header);\n        if (header) {\n            const key = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).findKey(this, header);\n            return !!(key && this[key] !== undefined && (!matcher || $54e5234108b8e954$var$matchHeaderValue(this, this[key], key, matcher)));\n        }\n        return false;\n    }\n    delete(header, matcher) {\n        const self = this;\n        let deleted = false;\n        function deleteHeader(_header) {\n            _header = $54e5234108b8e954$var$normalizeHeader(_header);\n            if (_header) {\n                const key = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).findKey(self, _header);\n                if (key && (!matcher || $54e5234108b8e954$var$matchHeaderValue(self, self[key], key, matcher))) {\n                    delete self[key];\n                    deleted = true;\n                }\n            }\n        }\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(header)) header.forEach(deleteHeader);\n        else deleteHeader(header);\n        return deleted;\n    }\n    clear(matcher) {\n        const keys = Object.keys(this);\n        let i = keys.length;\n        let deleted = false;\n        while(i--){\n            const key = keys[i];\n            if (!matcher || $54e5234108b8e954$var$matchHeaderValue(this, this[key], key, matcher, true)) {\n                delete this[key];\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    normalize(format) {\n        const self = this;\n        const headers = {};\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(this, (value, header)=>{\n            const key = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).findKey(headers, header);\n            if (key) {\n                self[key] = $54e5234108b8e954$var$normalizeValue(value);\n                delete self[header];\n                return;\n            }\n            const normalized = format ? $54e5234108b8e954$var$formatHeader(header) : String(header).trim();\n            if (normalized !== header) delete self[header];\n            self[normalized] = $54e5234108b8e954$var$normalizeValue(value);\n            headers[normalized] = true;\n        });\n        return this;\n    }\n    concat(...targets) {\n        return this.constructor.concat(this, ...targets);\n    }\n    toJSON(asStrings) {\n        const obj = Object.create(null);\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(this, (value, header)=>{\n            value != null && value !== false && (obj[header] = asStrings && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(value) ? value.join(\", \") : value);\n        });\n        return obj;\n    }\n    [Symbol.iterator]() {\n        return Object.entries(this.toJSON())[Symbol.iterator]();\n    }\n    toString() {\n        return Object.entries(this.toJSON()).map(([header, value])=>header + \": \" + value).join(\"\\n\");\n    }\n    get [Symbol.toStringTag]() {\n        return \"AxiosHeaders\";\n    }\n    static from(thing) {\n        return thing instanceof this ? thing : new this(thing);\n    }\n    static concat(first, ...targets) {\n        const computed = new this(first);\n        targets.forEach((target)=>computed.set(target));\n        return computed;\n    }\n    static accessor(header) {\n        const internals = this[$54e5234108b8e954$var$$internals] = this[$54e5234108b8e954$var$$internals] = {\n            accessors: {}\n        };\n        const accessors = internals.accessors;\n        const prototype = this.prototype;\n        function defineAccessor(_header) {\n            const lHeader = $54e5234108b8e954$var$normalizeHeader(_header);\n            if (!accessors[lHeader]) {\n                $54e5234108b8e954$var$buildAccessors(prototype, _header);\n                accessors[lHeader] = true;\n            }\n        }\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n        return this;\n    }\n}\n$54e5234108b8e954$var$AxiosHeaders.accessor([\n    \"Content-Type\",\n    \"Content-Length\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"User-Agent\",\n    \"Authorization\"\n]);\n// reserved names hotfix\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).reduceDescriptors($54e5234108b8e954$var$AxiosHeaders.prototype, ({ value: value }, key)=>{\n    let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n    return {\n        get: ()=>value,\n        set (headerValue) {\n            this[mapped] = headerValue;\n        }\n    };\n});\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).freezeMethods($54e5234108b8e954$var$AxiosHeaders);\nvar $54e5234108b8e954$export$2e2bcd8739ae039 = $54e5234108b8e954$var$AxiosHeaders;\n\n\n\"use strict\";\nfunction $ec027d10dfede142$export$2e2bcd8739ae039(fns, response) {\n    const config = this || (0, $e30871f78dcd7f19$export$2e2bcd8739ae039);\n    const context = response || config;\n    const headers = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(context.headers);\n    let data = context.data;\n    (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(fns, function transform(fn) {\n        data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n    });\n    headers.normalize();\n    return data;\n}\n\n\n\"use strict\";\nfunction $fbc9c01c5c3dc518$export$2e2bcd8739ae039(value) {\n    return !!(value && value.__CANCEL__);\n}\n\n\n\n\n\n\"use strict\";\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */ function $63b8b72909769bf2$var$CanceledError(message, config, request) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).call(this, message == null ? \"canceled\" : message, (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_CANCELED, config, request);\n    this.name = \"CanceledError\";\n}\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).inherits($63b8b72909769bf2$var$CanceledError, (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039), {\n    __CANCEL__: true\n});\nvar $63b8b72909769bf2$export$2e2bcd8739ae039 = $63b8b72909769bf2$var$CanceledError;\n\n\n\n\n\n\n\n\"use strict\";\nfunction $c0e22576f74b8071$export$2e2bcd8739ae039(resolve, reject, response) {\n    const validateStatus = response.config.validateStatus;\n    if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response);\n    else reject(new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Request failed with status code \" + response.status, [\n        (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_REQUEST,\n        (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_RESPONSE\n    ][Math.floor(response.status / 100) - 4], response.config, response.request, response));\n}\n\n\n\n\nvar $4d3cf801f7fd4dc6$export$2e2bcd8739ae039 = (0, $852831b4a152a7ad$export$2e2bcd8739ae039).hasStandardBrowserEnv ? // Standard browser envs support document.cookie\n{\n    write (name, value, expires, path, domain, secure) {\n        const cookie = [\n            name + \"=\" + encodeURIComponent(value)\n        ];\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isNumber(expires) && cookie.push(\"expires=\" + new Date(expires).toGMTString());\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(path) && cookie.push(\"path=\" + path);\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(domain) && cookie.push(\"domain=\" + domain);\n        secure === true && cookie.push(\"secure\");\n        document.cookie = cookie.join(\"; \");\n    },\n    read (name) {\n        const match = document.cookie.match(new RegExp(\"(^|;\\\\s*)(\" + name + \")=([^;]*)\"));\n        return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove (name) {\n        this.write(name, \"\", Date.now() - 86400000);\n    }\n} : // Non-standard browser env (web workers, react-native) lack needed support.\n{\n    write () {},\n    read () {\n        return null;\n    },\n    remove () {}\n};\n\n\n\n\"use strict\";\nfunction $05bf269bfca011f3$export$2e2bcd8739ae039(url) {\n    // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n    // by any combination of letters, digits, plus, period, or hyphen.\n    return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n\n\"use strict\";\nfunction $7c49e720f6231ba2$export$2e2bcd8739ae039(baseURL, relativeURL) {\n    return relativeURL ? baseURL.replace(/\\/?\\/$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\") : baseURL;\n}\n\n\n\"use strict\";\nfunction $8ed3292b1f9dccb5$export$2e2bcd8739ae039(baseURL, requestedURL) {\n    if (baseURL && !(0, $05bf269bfca011f3$export$2e2bcd8739ae039)(requestedURL)) return (0, $7c49e720f6231ba2$export$2e2bcd8739ae039)(baseURL, requestedURL);\n    return requestedURL;\n}\n\n\n\n\n\"use strict\";\nvar $3a08e3bf7b3045fa$export$2e2bcd8739ae039 = (0, $852831b4a152a7ad$export$2e2bcd8739ae039).hasStandardBrowserEnv ? // Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement(\"a\");\n    let originURL;\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */ function resolveURL(url) {\n        let href = url;\n        if (msie) {\n            // IE needs attribute set twice to normalize properties\n            urlParsingNode.setAttribute(\"href\", href);\n            href = urlParsingNode.href;\n        }\n        urlParsingNode.setAttribute(\"href\", href);\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n            href: urlParsingNode.href,\n            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \"\") : \"\",\n            host: urlParsingNode.host,\n            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, \"\") : \"\",\n            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \"\") : \"\",\n            hostname: urlParsingNode.hostname,\n            port: urlParsingNode.port,\n            pathname: urlParsingNode.pathname.charAt(0) === \"/\" ? urlParsingNode.pathname : \"/\" + urlParsingNode.pathname\n        };\n    }\n    originURL = resolveURL(window.location.href);\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */ return function isURLSameOrigin(requestURL) {\n        const parsed = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isString(requestURL) ? resolveURL(requestURL) : requestURL;\n        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n    };\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n        return true;\n    };\n}();\n\n\n\n\n\n\"use strict\";\nfunction $9cab09d0d089fc0e$export$2e2bcd8739ae039(url) {\n    const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n    return match && match[1] || \"\";\n}\n\n\n\n\n\"use strict\";\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */ function $48a8aeed25ee768a$var$speedometer(samplesCount, min) {\n    samplesCount = samplesCount || 10;\n    const bytes = new Array(samplesCount);\n    const timestamps = new Array(samplesCount);\n    let head = 0;\n    let tail = 0;\n    let firstSampleTS;\n    min = min !== undefined ? min : 1000;\n    return function push(chunkLength) {\n        const now = Date.now();\n        const startedAt = timestamps[tail];\n        if (!firstSampleTS) firstSampleTS = now;\n        bytes[head] = chunkLength;\n        timestamps[head] = now;\n        let i = tail;\n        let bytesCount = 0;\n        while(i !== head){\n            bytesCount += bytes[i++];\n            i = i % samplesCount;\n        }\n        head = (head + 1) % samplesCount;\n        if (head === tail) tail = (tail + 1) % samplesCount;\n        if (now - firstSampleTS < min) return;\n        const passed = startedAt && now - startedAt;\n        return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n    };\n}\nvar $48a8aeed25ee768a$export$2e2bcd8739ae039 = $48a8aeed25ee768a$var$speedometer;\n\n\n\"use strict\";\nfunction $61abd1574bd1dd32$var$progressEventReducer(listener, isDownloadStream) {\n    let bytesNotified = 0;\n    const _speedometer = (0, $48a8aeed25ee768a$export$2e2bcd8739ae039)(50, 250);\n    return (e)=>{\n        const loaded = e.loaded;\n        const total = e.lengthComputable ? e.total : undefined;\n        const progressBytes = loaded - bytesNotified;\n        const rate = _speedometer(progressBytes);\n        const inRange = loaded <= total;\n        bytesNotified = loaded;\n        const data = {\n            loaded: loaded,\n            total: total,\n            progress: total ? loaded / total : undefined,\n            bytes: progressBytes,\n            rate: rate ? rate : undefined,\n            estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n            event: e\n        };\n        data[isDownloadStream ? \"download\" : \"upload\"] = true;\n        listener(data);\n    };\n}\nconst $61abd1574bd1dd32$var$isXHRAdapterSupported = typeof XMLHttpRequest !== \"undefined\";\nvar $61abd1574bd1dd32$export$2e2bcd8739ae039 = $61abd1574bd1dd32$var$isXHRAdapterSupported && function(config) {\n    return new Promise(function dispatchXhrRequest(resolve, reject) {\n        let requestData = config.data;\n        const requestHeaders = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(config.headers).normalize();\n        let { responseType: responseType, withXSRFToken: withXSRFToken } = config;\n        let onCanceled;\n        function done() {\n            if (config.cancelToken) config.cancelToken.unsubscribe(onCanceled);\n            if (config.signal) config.signal.removeEventListener(\"abort\", onCanceled);\n        }\n        let contentType;\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFormData(requestData)) {\n            if ((0, $852831b4a152a7ad$export$2e2bcd8739ae039).hasStandardBrowserEnv || (0, $852831b4a152a7ad$export$2e2bcd8739ae039).hasStandardBrowserWebWorkerEnv) requestHeaders.setContentType(false); // Let the browser set it\n            else if ((contentType = requestHeaders.getContentType()) !== false) {\n                // fix semicolon duplication issue for ReactNative FormData implementation\n                const [type, ...tokens] = contentType ? contentType.split(\";\").map((token)=>token.trim()).filter(Boolean) : [];\n                requestHeaders.setContentType([\n                    type || \"multipart/form-data\",\n                    ...tokens\n                ].join(\"; \"));\n            }\n        }\n        let request = new XMLHttpRequest();\n        // HTTP basic authentication\n        if (config.auth) {\n            const username = config.auth.username || \"\";\n            const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \"\";\n            requestHeaders.set(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n        }\n        const fullPath = (0, $8ed3292b1f9dccb5$export$2e2bcd8739ae039)(config.baseURL, config.url);\n        request.open(config.method.toUpperCase(), (0, $db2f05ec923f2ee7$export$2e2bcd8739ae039)(fullPath, config.params, config.paramsSerializer), true);\n        // Set the request timeout in MS\n        request.timeout = config.timeout;\n        function onloadend() {\n            if (!request) return;\n            // Prepare the response\n            const responseHeaders = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(\"getAllResponseHeaders\" in request && request.getAllResponseHeaders());\n            const responseData = !responseType || responseType === \"text\" || responseType === \"json\" ? request.responseText : request.response;\n            const response = {\n                data: responseData,\n                status: request.status,\n                statusText: request.statusText,\n                headers: responseHeaders,\n                config: config,\n                request: request\n            };\n            (0, $c0e22576f74b8071$export$2e2bcd8739ae039)(function _resolve(value) {\n                resolve(value);\n                done();\n            }, function _reject(err) {\n                reject(err);\n                done();\n            }, response);\n            // Clean up request\n            request = null;\n        }\n        if (\"onloadend\" in request) // Use onloadend if available\n        request.onloadend = onloadend;\n        else // Listen for ready state to emulate onloadend\n        request.onreadystatechange = function handleLoad() {\n            if (!request || request.readyState !== 4) return;\n            // The request errored out and we didn't get a response, this will be\n            // handled by onerror instead\n            // With one exception: request that using file: protocol, most browsers\n            // will return status as 0 even though it's a successful request\n            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\"file:\") === 0)) return;\n            // readystate handler is calling before onerror or ontimeout handlers,\n            // so we should call onloadend on the next 'tick'\n            setTimeout(onloadend);\n        };\n        // Handle browser request cancellation (as opposed to a manual cancellation)\n        request.onabort = function handleAbort() {\n            if (!request) return;\n            reject(new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Request aborted\", (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ECONNABORTED, config, request));\n            // Clean up request\n            request = null;\n        };\n        // Handle low level network errors\n        request.onerror = function handleError() {\n            // Real errors are hidden from us by the browser\n            // onerror should only fire if it's a network error\n            reject(new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Network Error\", (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_NETWORK, config, request));\n            // Clean up request\n            request = null;\n        };\n        // Handle timeout\n        request.ontimeout = function handleTimeout() {\n            let timeoutErrorMessage = config.timeout ? \"timeout of \" + config.timeout + \"ms exceeded\" : \"timeout exceeded\";\n            const transitional = config.transitional || (0, $3075bac9f30e7782$export$2e2bcd8739ae039);\n            if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;\n            reject(new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(timeoutErrorMessage, transitional.clarifyTimeoutError ? (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ETIMEDOUT : (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ECONNABORTED, config, request));\n            // Clean up request\n            request = null;\n        };\n        // Add xsrf header\n        // This is only done if running in a standard browser environment.\n        // Specifically not if we're in a web worker, or react-native.\n        if ((0, $852831b4a152a7ad$export$2e2bcd8739ae039).hasStandardBrowserEnv) {\n            withXSRFToken && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n            if (withXSRFToken || withXSRFToken !== false && (0, $3a08e3bf7b3045fa$export$2e2bcd8739ae039)(fullPath)) {\n                // Add xsrf header\n                const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && (0, $4d3cf801f7fd4dc6$export$2e2bcd8739ae039).read(config.xsrfCookieName);\n                if (xsrfValue) requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n            }\n        }\n        // Remove Content-Type if data is undefined\n        requestData === undefined && requestHeaders.setContentType(null);\n        // Add headers to the request\n        if (\"setRequestHeader\" in request) (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n            request.setRequestHeader(key, val);\n        });\n        // Add withCredentials to request if needed\n        if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;\n        // Add responseType to request if needed\n        if (responseType && responseType !== \"json\") request.responseType = config.responseType;\n        // Handle progress if needed\n        if (typeof config.onDownloadProgress === \"function\") request.addEventListener(\"progress\", $61abd1574bd1dd32$var$progressEventReducer(config.onDownloadProgress, true));\n        // Not all browsers support upload events\n        if (typeof config.onUploadProgress === \"function\" && request.upload) request.upload.addEventListener(\"progress\", $61abd1574bd1dd32$var$progressEventReducer(config.onUploadProgress));\n        if (config.cancelToken || config.signal) {\n            // Handle cancellation\n            // eslint-disable-next-line func-names\n            onCanceled = (cancel)=>{\n                if (!request) return;\n                reject(!cancel || cancel.type ? new (0, $63b8b72909769bf2$export$2e2bcd8739ae039)(null, config, request) : cancel);\n                request.abort();\n                request = null;\n            };\n            config.cancelToken && config.cancelToken.subscribe(onCanceled);\n            if (config.signal) config.signal.aborted ? onCanceled() : config.signal.addEventListener(\"abort\", onCanceled);\n        }\n        const protocol = (0, $9cab09d0d089fc0e$export$2e2bcd8739ae039)(fullPath);\n        if (protocol && (0, $852831b4a152a7ad$export$2e2bcd8739ae039).protocols.indexOf(protocol) === -1) {\n            reject(new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Unsupported protocol \" + protocol + \":\", (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_REQUEST, config));\n            return;\n        }\n        // Send the request\n        request.send(requestData || null);\n    });\n};\n\n\n\nconst $d570c100e0cb7a05$var$knownAdapters = {\n    http: (0, $86ebf0c810395e29$export$2e2bcd8739ae039),\n    xhr: (0, $61abd1574bd1dd32$export$2e2bcd8739ae039)\n};\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach($d570c100e0cb7a05$var$knownAdapters, (fn, value)=>{\n    if (fn) {\n        try {\n            Object.defineProperty(fn, \"name\", {\n                value: value\n            });\n        } catch (e) {\n        // eslint-disable-next-line no-empty\n        }\n        Object.defineProperty(fn, \"adapterName\", {\n            value: value\n        });\n    }\n});\nconst $d570c100e0cb7a05$var$renderReason = (reason)=>`- ${reason}`;\nconst $d570c100e0cb7a05$var$isResolvedHandle = (adapter)=>(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(adapter) || adapter === null || adapter === false;\nvar $d570c100e0cb7a05$export$2e2bcd8739ae039 = {\n    getAdapter: (adapters)=>{\n        adapters = (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(adapters) ? adapters : [\n            adapters\n        ];\n        const { length: length } = adapters;\n        let nameOrAdapter;\n        let adapter;\n        const rejectedReasons = {};\n        for(let i = 0; i < length; i++){\n            nameOrAdapter = adapters[i];\n            let id;\n            adapter = nameOrAdapter;\n            if (!$d570c100e0cb7a05$var$isResolvedHandle(nameOrAdapter)) {\n                adapter = $d570c100e0cb7a05$var$knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n                if (adapter === undefined) throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(`Unknown adapter '${id}'`);\n            }\n            if (adapter) break;\n            rejectedReasons[id || \"#\" + i] = adapter;\n        }\n        if (!adapter) {\n            const reasons = Object.entries(rejectedReasons).map(([id, state])=>`adapter ${id} ` + (state === false ? \"is not supported by the environment\" : \"is not available in the build\"));\n            let s = length ? reasons.length > 1 ? \"since :\\n\" + reasons.map($d570c100e0cb7a05$var$renderReason).join(\"\\n\") : \" \" + $d570c100e0cb7a05$var$renderReason(reasons[0]) : \"as no adapter specified\";\n            throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(`There is no suitable adapter to dispatch the request ` + s, \"ERR_NOT_SUPPORT\");\n        }\n        return adapter;\n    },\n    adapters: $d570c100e0cb7a05$var$knownAdapters\n};\n\n\n\"use strict\";\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */ function $96666136aaccd2e5$var$throwIfCancellationRequested(config) {\n    if (config.cancelToken) config.cancelToken.throwIfRequested();\n    if (config.signal && config.signal.aborted) throw new (0, $63b8b72909769bf2$export$2e2bcd8739ae039)(null, config);\n}\nfunction $96666136aaccd2e5$export$2e2bcd8739ae039(config) {\n    $96666136aaccd2e5$var$throwIfCancellationRequested(config);\n    config.headers = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(config.headers);\n    // Transform request data\n    config.data = (0, $ec027d10dfede142$export$2e2bcd8739ae039).call(config, config.transformRequest);\n    if ([\n        \"post\",\n        \"put\",\n        \"patch\"\n    ].indexOf(config.method) !== -1) config.headers.setContentType(\"application/x-www-form-urlencoded\", false);\n    const adapter = (0, $d570c100e0cb7a05$export$2e2bcd8739ae039).getAdapter(config.adapter || (0, $e30871f78dcd7f19$export$2e2bcd8739ae039).adapter);\n    return adapter(config).then(function onAdapterResolution(response) {\n        $96666136aaccd2e5$var$throwIfCancellationRequested(config);\n        // Transform response data\n        response.data = (0, $ec027d10dfede142$export$2e2bcd8739ae039).call(config, config.transformResponse, response);\n        response.headers = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(response.headers);\n        return response;\n    }, function onAdapterRejection(reason) {\n        if (!(0, $fbc9c01c5c3dc518$export$2e2bcd8739ae039)(reason)) {\n            $96666136aaccd2e5$var$throwIfCancellationRequested(config);\n            // Transform response data\n            if (reason && reason.response) {\n                reason.response.data = (0, $ec027d10dfede142$export$2e2bcd8739ae039).call(config, config.transformResponse, reason.response);\n                reason.response.headers = (0, $54e5234108b8e954$export$2e2bcd8739ae039).from(reason.response.headers);\n            }\n        }\n        return Promise.reject(reason);\n    });\n}\n\n\n\n\n\"use strict\";\nconst $20ede3a7e8b675d4$var$headersToObject = (thing)=>thing instanceof (0, $54e5234108b8e954$export$2e2bcd8739ae039) ? thing.toJSON() : thing;\nfunction $20ede3a7e8b675d4$export$2e2bcd8739ae039(config1, config2) {\n    // eslint-disable-next-line no-param-reassign\n    config2 = config2 || {};\n    const config = {};\n    function getMergedValue(target, source, caseless) {\n        if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isPlainObject(target) && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isPlainObject(source)) return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).merge.call({\n            caseless: caseless\n        }, target, source);\n        else if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isPlainObject(source)) return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).merge({}, source);\n        else if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isArray(source)) return source.slice();\n        return source;\n    }\n    // eslint-disable-next-line consistent-return\n    function mergeDeepProperties(a, b, caseless) {\n        if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(b)) return getMergedValue(a, b, caseless);\n        else if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(a)) return getMergedValue(undefined, a, caseless);\n    }\n    // eslint-disable-next-line consistent-return\n    function valueFromConfig2(a, b) {\n        if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(b)) return getMergedValue(undefined, b);\n    }\n    // eslint-disable-next-line consistent-return\n    function defaultToConfig2(a, b) {\n        if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(b)) return getMergedValue(undefined, b);\n        else if (!(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(a)) return getMergedValue(undefined, a);\n    }\n    // eslint-disable-next-line consistent-return\n    function mergeDirectKeys(a, b, prop) {\n        if (prop in config2) return getMergedValue(a, b);\n        else if (prop in config1) return getMergedValue(undefined, a);\n    }\n    const mergeMap = {\n        url: valueFromConfig2,\n        method: valueFromConfig2,\n        data: valueFromConfig2,\n        baseURL: defaultToConfig2,\n        transformRequest: defaultToConfig2,\n        transformResponse: defaultToConfig2,\n        paramsSerializer: defaultToConfig2,\n        timeout: defaultToConfig2,\n        timeoutMessage: defaultToConfig2,\n        withCredentials: defaultToConfig2,\n        withXSRFToken: defaultToConfig2,\n        adapter: defaultToConfig2,\n        responseType: defaultToConfig2,\n        xsrfCookieName: defaultToConfig2,\n        xsrfHeaderName: defaultToConfig2,\n        onUploadProgress: defaultToConfig2,\n        onDownloadProgress: defaultToConfig2,\n        decompress: defaultToConfig2,\n        maxContentLength: defaultToConfig2,\n        maxBodyLength: defaultToConfig2,\n        beforeRedirect: defaultToConfig2,\n        transport: defaultToConfig2,\n        httpAgent: defaultToConfig2,\n        httpsAgent: defaultToConfig2,\n        cancelToken: defaultToConfig2,\n        socketPath: defaultToConfig2,\n        responseEncoding: defaultToConfig2,\n        validateStatus: mergeDirectKeys,\n        headers: (a, b)=>mergeDeepProperties($20ede3a7e8b675d4$var$headersToObject(a), $20ede3a7e8b675d4$var$headersToObject(b), true)\n    };\n    (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n        const merge = mergeMap[prop] || mergeDeepProperties;\n        const configValue = merge(config1[prop], config2[prop], prop);\n        (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);\n    });\n    return config;\n}\n\n\n\nconst $4c74d331112ba968$export$a4ad2735b021c132 = \"1.6.7\";\n\n\n\n\"use strict\";\nconst $63efb8494987aa98$var$validators = {};\n// eslint-disable-next-line func-names\n[\n    \"object\",\n    \"boolean\",\n    \"number\",\n    \"function\",\n    \"string\",\n    \"symbol\"\n].forEach((type, i)=>{\n    $63efb8494987aa98$var$validators[type] = function validator(thing) {\n        return typeof thing === type || \"a\" + (i < 1 ? \"n \" : \" \") + type;\n    };\n});\nconst $63efb8494987aa98$var$deprecatedWarnings = {};\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */ $63efb8494987aa98$var$validators.transitional = function transitional(validator, version, message) {\n    function formatMessage(opt, desc) {\n        return \"[Axios v\" + (0, $4c74d331112ba968$export$a4ad2735b021c132) + \"] Transitional option '\" + opt + \"'\" + desc + (message ? \". \" + message : \"\");\n    }\n    // eslint-disable-next-line func-names\n    return (value, opt, opts)=>{\n        if (validator === false) throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(formatMessage(opt, \" has been removed\" + (version ? \" in \" + version : \"\")), (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_DEPRECATED);\n        if (version && !$63efb8494987aa98$var$deprecatedWarnings[opt]) {\n            $63efb8494987aa98$var$deprecatedWarnings[opt] = true;\n            // eslint-disable-next-line no-console\n            console.warn(formatMessage(opt, \" has been deprecated since v\" + version + \" and will be removed in the near future\"));\n        }\n        return validator ? validator(value, opt, opts) : true;\n    };\n};\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */ function $63efb8494987aa98$var$assertOptions(options, schema, allowUnknown) {\n    if (typeof options !== \"object\") throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"options must be an object\", (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_OPTION_VALUE);\n    const keys = Object.keys(options);\n    let i = keys.length;\n    while(i-- > 0){\n        const opt = keys[i];\n        const validator = schema[opt];\n        if (validator) {\n            const value = options[opt];\n            const result = value === undefined || validator(value, opt, options);\n            if (result !== true) throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"option \" + opt + \" must be \" + result, (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_OPTION_VALUE);\n            continue;\n        }\n        if (allowUnknown !== true) throw new (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039)(\"Unknown option \" + opt, (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039).ERR_BAD_OPTION);\n    }\n}\nvar $63efb8494987aa98$export$2e2bcd8739ae039 = {\n    assertOptions: $63efb8494987aa98$var$assertOptions,\n    validators: $63efb8494987aa98$var$validators\n};\n\n\n\n\"use strict\";\nconst $cd0b8e3cbef64068$var$validators = (0, $63efb8494987aa98$export$2e2bcd8739ae039).validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */ class $cd0b8e3cbef64068$var$Axios {\n    constructor(instanceConfig){\n        this.defaults = instanceConfig;\n        this.interceptors = {\n            request: new (0, $01c17f80085c95b1$export$2e2bcd8739ae039)(),\n            response: new (0, $01c17f80085c95b1$export$2e2bcd8739ae039)()\n        };\n    }\n    /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */ async request(configOrUrl, config) {\n        try {\n            return await this._request(configOrUrl, config);\n        } catch (err) {\n            if (err instanceof Error) {\n                let dummy;\n                Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();\n                // slice off the Error: ... line\n                const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, \"\") : \"\";\n                if (!err.stack) err.stack = stack;\n                else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, \"\"))) err.stack += \"\\n\" + stack;\n            }\n            throw err;\n        }\n    }\n    _request(configOrUrl, config) {\n        /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API\n        if (typeof configOrUrl === \"string\") {\n            config = config || {};\n            config.url = configOrUrl;\n        } else config = configOrUrl || {};\n        config = (0, $20ede3a7e8b675d4$export$2e2bcd8739ae039)(this.defaults, config);\n        const { transitional: transitional, paramsSerializer: paramsSerializer, headers: headers } = config;\n        if (transitional !== undefined) (0, $63efb8494987aa98$export$2e2bcd8739ae039).assertOptions(transitional, {\n            silentJSONParsing: $cd0b8e3cbef64068$var$validators.transitional($cd0b8e3cbef64068$var$validators.boolean),\n            forcedJSONParsing: $cd0b8e3cbef64068$var$validators.transitional($cd0b8e3cbef64068$var$validators.boolean),\n            clarifyTimeoutError: $cd0b8e3cbef64068$var$validators.transitional($cd0b8e3cbef64068$var$validators.boolean)\n        }, false);\n        if (paramsSerializer != null) {\n            if ((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isFunction(paramsSerializer)) config.paramsSerializer = {\n                serialize: paramsSerializer\n            };\n            else (0, $63efb8494987aa98$export$2e2bcd8739ae039).assertOptions(paramsSerializer, {\n                encode: $cd0b8e3cbef64068$var$validators.function,\n                serialize: $cd0b8e3cbef64068$var$validators.function\n            }, true);\n        }\n        // Set config.method\n        config.method = (config.method || this.defaults.method || \"get\").toLowerCase();\n        // Flatten headers\n        let contextHeaders = headers && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).merge(headers.common, headers[config.method]);\n        headers && (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach([\n            \"delete\",\n            \"get\",\n            \"head\",\n            \"post\",\n            \"put\",\n            \"patch\",\n            \"common\"\n        ], (method)=>{\n            delete headers[method];\n        });\n        config.headers = (0, $54e5234108b8e954$export$2e2bcd8739ae039).concat(contextHeaders, headers);\n        // filter out skipped interceptors\n        const requestInterceptorChain = [];\n        let synchronousRequestInterceptors = true;\n        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n            if (typeof interceptor.runWhen === \"function\" && interceptor.runWhen(config) === false) return;\n            synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n            requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n        });\n        const responseInterceptorChain = [];\n        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n            responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n        });\n        let promise;\n        let i = 0;\n        let len;\n        if (!synchronousRequestInterceptors) {\n            const chain = [\n                (0, $96666136aaccd2e5$export$2e2bcd8739ae039).bind(this),\n                undefined\n            ];\n            chain.unshift.apply(chain, requestInterceptorChain);\n            chain.push.apply(chain, responseInterceptorChain);\n            len = chain.length;\n            promise = Promise.resolve(config);\n            while(i < len)promise = promise.then(chain[i++], chain[i++]);\n            return promise;\n        }\n        len = requestInterceptorChain.length;\n        let newConfig = config;\n        i = 0;\n        while(i < len){\n            const onFulfilled = requestInterceptorChain[i++];\n            const onRejected = requestInterceptorChain[i++];\n            try {\n                newConfig = onFulfilled(newConfig);\n            } catch (error) {\n                onRejected.call(this, error);\n                break;\n            }\n        }\n        try {\n            promise = (0, $96666136aaccd2e5$export$2e2bcd8739ae039).call(this, newConfig);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n        i = 0;\n        len = responseInterceptorChain.length;\n        while(i < len)promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n        return promise;\n    }\n    getUri(config) {\n        config = (0, $20ede3a7e8b675d4$export$2e2bcd8739ae039)(this.defaults, config);\n        const fullPath = (0, $8ed3292b1f9dccb5$export$2e2bcd8739ae039)(config.baseURL, config.url);\n        return (0, $db2f05ec923f2ee7$export$2e2bcd8739ae039)(fullPath, config.params, config.paramsSerializer);\n    }\n}\n// Provide aliases for supported request methods\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach([\n    \"delete\",\n    \"get\",\n    \"head\",\n    \"options\"\n], function forEachMethodNoData(method) {\n    /*eslint func-names:0*/ $cd0b8e3cbef64068$var$Axios.prototype[method] = function(url, config) {\n        return this.request((0, $20ede3a7e8b675d4$export$2e2bcd8739ae039)(config || {}, {\n            method: method,\n            url: url,\n            data: (config || {}).data\n        }));\n    };\n});\n(0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).forEach([\n    \"post\",\n    \"put\",\n    \"patch\"\n], function forEachMethodWithData(method) {\n    /*eslint func-names:0*/ function generateHTTPMethod(isForm) {\n        return function httpMethod(url, data, config) {\n            return this.request((0, $20ede3a7e8b675d4$export$2e2bcd8739ae039)(config || {}, {\n                method: method,\n                headers: isForm ? {\n                    \"Content-Type\": \"multipart/form-data\"\n                } : {},\n                url: url,\n                data: data\n            }));\n        };\n    }\n    $cd0b8e3cbef64068$var$Axios.prototype[method] = generateHTTPMethod();\n    $cd0b8e3cbef64068$var$Axios.prototype[method + \"Form\"] = generateHTTPMethod(true);\n});\nvar $cd0b8e3cbef64068$export$2e2bcd8739ae039 = $cd0b8e3cbef64068$var$Axios;\n\n\n\n\n\n\n\n\"use strict\";\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */ class $3218dd97b5460664$var$CancelToken {\n    constructor(executor){\n        if (typeof executor !== \"function\") throw new TypeError(\"executor must be a function.\");\n        let resolvePromise;\n        this.promise = new Promise(function promiseExecutor(resolve) {\n            resolvePromise = resolve;\n        });\n        const token = this;\n        // eslint-disable-next-line func-names\n        this.promise.then((cancel)=>{\n            if (!token._listeners) return;\n            let i = token._listeners.length;\n            while(i-- > 0)token._listeners[i](cancel);\n            token._listeners = null;\n        });\n        // eslint-disable-next-line func-names\n        this.promise.then = (onfulfilled)=>{\n            let _resolve;\n            // eslint-disable-next-line func-names\n            const promise = new Promise((resolve)=>{\n                token.subscribe(resolve);\n                _resolve = resolve;\n            }).then(onfulfilled);\n            promise.cancel = function reject() {\n                token.unsubscribe(_resolve);\n            };\n            return promise;\n        };\n        executor(function cancel(message, config, request) {\n            if (token.reason) // Cancellation has already been requested\n            return;\n            token.reason = new (0, $63b8b72909769bf2$export$2e2bcd8739ae039)(message, config, request);\n            resolvePromise(token.reason);\n        });\n    }\n    /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */ throwIfRequested() {\n        if (this.reason) throw this.reason;\n    }\n    /**\n   * Subscribe to the cancel signal\n   */ subscribe(listener) {\n        if (this.reason) {\n            listener(this.reason);\n            return;\n        }\n        if (this._listeners) this._listeners.push(listener);\n        else this._listeners = [\n            listener\n        ];\n    }\n    /**\n   * Unsubscribe from the cancel signal\n   */ unsubscribe(listener) {\n        if (!this._listeners) return;\n        const index = this._listeners.indexOf(listener);\n        if (index !== -1) this._listeners.splice(index, 1);\n    }\n    /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */ static source() {\n        let cancel;\n        const token = new $3218dd97b5460664$var$CancelToken(function executor(c) {\n            cancel = c;\n        });\n        return {\n            token: token,\n            cancel: cancel\n        };\n    }\n}\nvar $3218dd97b5460664$export$2e2bcd8739ae039 = $3218dd97b5460664$var$CancelToken;\n\n\n\n\n\n\n\"use strict\";\nfunction $7874d702b64e6994$export$2e2bcd8739ae039(callback) {\n    return function wrap(arr) {\n        return callback.apply(null, arr);\n    };\n}\n\n\n\n\"use strict\";\nfunction $16f479813f4fb9c8$export$2e2bcd8739ae039(payload) {\n    return (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isObject(payload) && payload.isAxiosError === true;\n}\n\n\n\n\nconst $edd7ef3f6e3b67e5$var$HttpStatusCode = {\n    Continue: 100,\n    SwitchingProtocols: 101,\n    Processing: 102,\n    EarlyHints: 103,\n    Ok: 200,\n    Created: 201,\n    Accepted: 202,\n    NonAuthoritativeInformation: 203,\n    NoContent: 204,\n    ResetContent: 205,\n    PartialContent: 206,\n    MultiStatus: 207,\n    AlreadyReported: 208,\n    ImUsed: 226,\n    MultipleChoices: 300,\n    MovedPermanently: 301,\n    Found: 302,\n    SeeOther: 303,\n    NotModified: 304,\n    UseProxy: 305,\n    Unused: 306,\n    TemporaryRedirect: 307,\n    PermanentRedirect: 308,\n    BadRequest: 400,\n    Unauthorized: 401,\n    PaymentRequired: 402,\n    Forbidden: 403,\n    NotFound: 404,\n    MethodNotAllowed: 405,\n    NotAcceptable: 406,\n    ProxyAuthenticationRequired: 407,\n    RequestTimeout: 408,\n    Conflict: 409,\n    Gone: 410,\n    LengthRequired: 411,\n    PreconditionFailed: 412,\n    PayloadTooLarge: 413,\n    UriTooLong: 414,\n    UnsupportedMediaType: 415,\n    RangeNotSatisfiable: 416,\n    ExpectationFailed: 417,\n    ImATeapot: 418,\n    MisdirectedRequest: 421,\n    UnprocessableEntity: 422,\n    Locked: 423,\n    FailedDependency: 424,\n    TooEarly: 425,\n    UpgradeRequired: 426,\n    PreconditionRequired: 428,\n    TooManyRequests: 429,\n    RequestHeaderFieldsTooLarge: 431,\n    UnavailableForLegalReasons: 451,\n    InternalServerError: 500,\n    NotImplemented: 501,\n    BadGateway: 502,\n    ServiceUnavailable: 503,\n    GatewayTimeout: 504,\n    HttpVersionNotSupported: 505,\n    VariantAlsoNegotiates: 506,\n    InsufficientStorage: 507,\n    LoopDetected: 508,\n    NotExtended: 510,\n    NetworkAuthenticationRequired: 511\n};\nObject.entries($edd7ef3f6e3b67e5$var$HttpStatusCode).forEach(([key, value])=>{\n    $edd7ef3f6e3b67e5$var$HttpStatusCode[value] = key;\n});\nvar $edd7ef3f6e3b67e5$export$2e2bcd8739ae039 = $edd7ef3f6e3b67e5$var$HttpStatusCode;\n\n\n\"use strict\";\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */ function $5d7526a7a1e5b3fb$var$createInstance(defaultConfig) {\n    const context = new (0, $cd0b8e3cbef64068$export$2e2bcd8739ae039)(defaultConfig);\n    const instance = (0, $93b0f01b05e2607a$export$2e2bcd8739ae039)((0, $cd0b8e3cbef64068$export$2e2bcd8739ae039).prototype.request, context);\n    // Copy axios.prototype to instance\n    (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).extend(instance, (0, $cd0b8e3cbef64068$export$2e2bcd8739ae039).prototype, context, {\n        allOwnKeys: true\n    });\n    // Copy context to instance\n    (0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).extend(instance, context, null, {\n        allOwnKeys: true\n    });\n    // Factory for creating new instances\n    instance.create = function create(instanceConfig) {\n        return $5d7526a7a1e5b3fb$var$createInstance((0, $20ede3a7e8b675d4$export$2e2bcd8739ae039)(defaultConfig, instanceConfig));\n    };\n    return instance;\n}\n// Create the default instance to be exported\nconst $5d7526a7a1e5b3fb$var$axios = $5d7526a7a1e5b3fb$var$createInstance((0, $e30871f78dcd7f19$export$2e2bcd8739ae039));\n// Expose Axios class to allow class inheritance\n$5d7526a7a1e5b3fb$var$axios.Axios = (0, $cd0b8e3cbef64068$export$2e2bcd8739ae039);\n// Expose Cancel & CancelToken\n$5d7526a7a1e5b3fb$var$axios.CanceledError = (0, $63b8b72909769bf2$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.CancelToken = (0, $3218dd97b5460664$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.isCancel = (0, $fbc9c01c5c3dc518$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.VERSION = (0, $4c74d331112ba968$export$a4ad2735b021c132);\n$5d7526a7a1e5b3fb$var$axios.toFormData = (0, $fd07b9cb0132c1f6$export$2e2bcd8739ae039);\n// Expose AxiosError class\n$5d7526a7a1e5b3fb$var$axios.AxiosError = (0, $0139f1d30f4d6bd5$export$2e2bcd8739ae039);\n// alias for CanceledError for backward compatibility\n$5d7526a7a1e5b3fb$var$axios.Cancel = $5d7526a7a1e5b3fb$var$axios.CanceledError;\n// Expose all/spread\n$5d7526a7a1e5b3fb$var$axios.all = function all(promises) {\n    return Promise.all(promises);\n};\n$5d7526a7a1e5b3fb$var$axios.spread = (0, $7874d702b64e6994$export$2e2bcd8739ae039);\n// Expose isAxiosError\n$5d7526a7a1e5b3fb$var$axios.isAxiosError = (0, $16f479813f4fb9c8$export$2e2bcd8739ae039);\n// Expose mergeConfig\n$5d7526a7a1e5b3fb$var$axios.mergeConfig = (0, $20ede3a7e8b675d4$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.AxiosHeaders = (0, $54e5234108b8e954$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.formToJSON = (thing)=>(0, $cb8fe7f388dc4432$export$2e2bcd8739ae039)((0, $aace3e920a0f1e4d$export$2e2bcd8739ae039).isHTMLForm(thing) ? new FormData(thing) : thing);\n$5d7526a7a1e5b3fb$var$axios.getAdapter = (0, $d570c100e0cb7a05$export$2e2bcd8739ae039).getAdapter;\n$5d7526a7a1e5b3fb$var$axios.HttpStatusCode = (0, $edd7ef3f6e3b67e5$export$2e2bcd8739ae039);\n$5d7526a7a1e5b3fb$var$axios.default = $5d7526a7a1e5b3fb$var$axios;\nvar // this module should only have a default export\n$5d7526a7a1e5b3fb$export$2e2bcd8739ae039 = $5d7526a7a1e5b3fb$var$axios;\n\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst { Axios: $125d1ceb57662f9a$export$1c00760e9e5a4e95, AxiosError: $125d1ceb57662f9a$export$c1fbed17c2f6a328, CanceledError: $125d1ceb57662f9a$export$1ab0c6b20d94fa14, isCancel: $125d1ceb57662f9a$export$3b22524397b493c6, CancelToken: $125d1ceb57662f9a$export$fd08e3cb425f0d61, VERSION: $125d1ceb57662f9a$export$a4ad2735b021c132, all: $125d1ceb57662f9a$export$84bf76cd7afc7469, Cancel: $125d1ceb57662f9a$export$848c9b7ead0df967, isAxiosError: $125d1ceb57662f9a$export$fbafdbe06a5b5a9a, spread: $125d1ceb57662f9a$export$3ae0fd4797ed47c8, toFormData: $125d1ceb57662f9a$export$10ae0d317ea97f8b, AxiosHeaders: $125d1ceb57662f9a$export$4e7d6ff0f3e6520, HttpStatusCode: $125d1ceb57662f9a$export$a972f69c851492b3, formToJSON: $125d1ceb57662f9a$export$86d7c59254d6a2c9, getAdapter: $125d1ceb57662f9a$export$17ddc20a97d669e2, mergeConfig: $125d1ceb57662f9a$export$7ec1ebcfa9d8bd6a } = (0, $5d7526a7a1e5b3fb$export$2e2bcd8739ae039);\n\n\nvar $28571f1d6a3c3b1f$exports = {};\n/* eslint-env browser */ $28571f1d6a3c3b1f$exports = typeof self == \"object\" ? self.FormData : window.FormData;\n\n\nclass $097ad07088ede5ed$export$f2e832acab1bdd79 extends Error {\n    constructor(request, response, message){\n        super(message);\n        this.name = \"ApiError\";\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n\n\nvar $18e457eae73e373b$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar $18e457eae73e373b$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar $18e457eae73e373b$var$_CancelablePromise_isResolved, $18e457eae73e373b$var$_CancelablePromise_isRejected, $18e457eae73e373b$var$_CancelablePromise_isCancelled, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, $18e457eae73e373b$var$_CancelablePromise_promise, $18e457eae73e373b$var$_CancelablePromise_resolve, $18e457eae73e373b$var$_CancelablePromise_reject;\nclass $18e457eae73e373b$export$d7f5e52d091a66db extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"CancelError\";\n    }\n    get isCancelled() {\n        return true;\n    }\n}\nclass $18e457eae73e373b$export$551a058e9626aa5a {\n    constructor(executor){\n        $18e457eae73e373b$var$_CancelablePromise_isResolved.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_isRejected.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_isCancelled.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_cancelHandlers.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_promise.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_resolve.set(this, void 0);\n        $18e457eae73e373b$var$_CancelablePromise_reject.set(this, void 0);\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, false, \"f\");\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, false, \"f\");\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, false, \"f\");\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, [], \"f\");\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_promise, new Promise((resolve, reject)=>{\n            $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_resolve, resolve, \"f\");\n            $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_reject, reject, \"f\");\n            const onResolve = (value)=>{\n                if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\")) return;\n                $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, true, \"f\");\n                if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_resolve, \"f\")) $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_resolve, \"f\").call(this, value);\n            };\n            const onReject = (reason)=>{\n                if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\")) return;\n                $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, true, \"f\");\n                if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_reject, \"f\")) $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_reject, \"f\").call(this, reason);\n            };\n            const onCancel = (cancelHandler)=>{\n                if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\")) return;\n                $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, \"f\").push(cancelHandler);\n            };\n            Object.defineProperty(onCancel, \"isResolved\", {\n                get: ()=>$18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, \"f\")\n            });\n            Object.defineProperty(onCancel, \"isRejected\", {\n                get: ()=>$18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, \"f\")\n            });\n            Object.defineProperty(onCancel, \"isCancelled\", {\n                get: ()=>$18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\")\n            });\n            return executor(onResolve, onReject, onCancel);\n        }), \"f\");\n    }\n    get [($18e457eae73e373b$var$_CancelablePromise_isResolved = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_isRejected = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_isCancelled = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_cancelHandlers = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_promise = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_resolve = new WeakMap(), $18e457eae73e373b$var$_CancelablePromise_reject = new WeakMap(), Symbol.toStringTag)]() {\n        return \"Cancellable Promise\";\n    }\n    then(onFulfilled, onRejected) {\n        return $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_promise, \"f\").then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_promise, \"f\").catch(onRejected);\n    }\n    finally(onFinally) {\n        return $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_promise, \"f\").finally(onFinally);\n    }\n    cancel() {\n        if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isResolved, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isRejected, \"f\") || $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\")) return;\n        $18e457eae73e373b$var$__classPrivateFieldSet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, true, \"f\");\n        if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, \"f\").length) try {\n            for (const cancelHandler of $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, \"f\"))cancelHandler();\n        } catch (error) {\n            console.warn(\"Cancellation threw an error\", error);\n            return;\n        }\n        $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_cancelHandlers, \"f\").length = 0;\n        if ($18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_reject, \"f\")) $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_reject, \"f\").call(this, new $18e457eae73e373b$export$d7f5e52d091a66db(\"Request aborted\"));\n    }\n    get isCancelled() {\n        return $18e457eae73e373b$var$__classPrivateFieldGet(this, $18e457eae73e373b$var$_CancelablePromise_isCancelled, \"f\");\n    }\n}\n\n\n\nvar $75bf175d3183eb33$require$Buffer = $0934e0939605d48c$export$a143d493d941bafc;\nconst $75bf175d3183eb33$export$4e62c701997796c1 = (value)=>{\n    return value !== undefined && value !== null;\n};\nconst $75bf175d3183eb33$export$844ec244b1367d54 = (value)=>{\n    return typeof value === \"string\";\n};\nconst $75bf175d3183eb33$export$991095b57f274a5f = (value)=>{\n    return $75bf175d3183eb33$export$844ec244b1367d54(value) && value !== \"\";\n};\nconst $75bf175d3183eb33$export$5bcd6e94ed871c88 = (value)=>{\n    return typeof value === \"object\" && typeof value.type === \"string\" && typeof value.stream === \"function\" && typeof value.arrayBuffer === \"function\" && typeof value.constructor === \"function\" && typeof value.constructor.name === \"string\" && /^(Blob|File)$/.test(value.constructor.name) && /^(Blob|File)$/.test(value[Symbol.toStringTag]);\n};\nconst $75bf175d3183eb33$export$67a42df2b7ab73bc = (value)=>{\n    return value instanceof (0, (/*@__PURE__*/$parcel$interopDefault($28571f1d6a3c3b1f$exports)));\n};\nconst $75bf175d3183eb33$export$b0ac3e614a309be3 = (status)=>{\n    return status >= 200 && status < 300;\n};\nconst $75bf175d3183eb33$export$b3b2de96497acc47 = (str)=>{\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return $75bf175d3183eb33$require$Buffer.from(str).toString(\"base64\");\n    }\n};\nconst $75bf175d3183eb33$export$18380b9f669996bd = (params)=>{\n    const qs = [];\n    const append = (key, value)=>{\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n    const process = (key, value)=>{\n        if ($75bf175d3183eb33$export$4e62c701997796c1(value)) {\n            if (Array.isArray(value)) value.forEach((v)=>{\n                process(key, v);\n            });\n            else if (typeof value === \"object\") Object.entries(value).forEach(([k, v])=>{\n                process(`${key}[${k}]`, v);\n            });\n            else append(key, value);\n        }\n    };\n    Object.entries(params).forEach(([key, value])=>{\n        process(key, value);\n    });\n    if (qs.length > 0) return `?${qs.join(\"&\")}`;\n    return \"\";\n};\nconst $75bf175d3183eb33$var$getUrl = (config, options)=>{\n    const encoder = config.ENCODE_PATH || encodeURI;\n    const path = options.url.replace(\"{api-version}\", config.VERSION).replace(/{(.*?)}/g, (substring, group)=>{\n        var _a;\n        if ((_a = options.path) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(group)) return encoder(String(options.path[group]));\n        return substring;\n    });\n    const url = `${config.BASE}${path}`;\n    if (options.query) return `${url}${$75bf175d3183eb33$export$18380b9f669996bd(options.query)}`;\n    return url;\n};\nconst $75bf175d3183eb33$export$9643fd7297feaaf5 = (options)=>{\n    if (options.formData) {\n        const formData = new (0, (/*@__PURE__*/$parcel$interopDefault($28571f1d6a3c3b1f$exports)))();\n        const process = (key, value)=>{\n            if ($75bf175d3183eb33$export$844ec244b1367d54(value) || $75bf175d3183eb33$export$5bcd6e94ed871c88(value)) formData.append(key, value);\n            else formData.append(key, JSON.stringify(value));\n        };\n        Object.entries(options.formData).filter(([_, value])=>$75bf175d3183eb33$export$4e62c701997796c1(value)).forEach(([key, value])=>{\n            if (Array.isArray(value)) value.forEach((v)=>process(key, v));\n            else process(key, value);\n        });\n        return formData;\n    }\n    return undefined;\n};\nconst $75bf175d3183eb33$export$f7ad0328861e2f03 = async (options, resolver)=>{\n    if (typeof resolver === \"function\") return resolver(options);\n    return resolver;\n};\nconst $75bf175d3183eb33$export$6a9b8dd1339b1a17 = async (config, options, formData)=>{\n    const [token, username, password, additionalHeaders] = await Promise.all([\n        $75bf175d3183eb33$export$f7ad0328861e2f03(options, config.TOKEN),\n        $75bf175d3183eb33$export$f7ad0328861e2f03(options, config.USERNAME),\n        $75bf175d3183eb33$export$f7ad0328861e2f03(options, config.PASSWORD),\n        $75bf175d3183eb33$export$f7ad0328861e2f03(options, config.HEADERS)\n    ]);\n    const formHeaders = typeof (formData === null || formData === void 0 ? void 0 : formData.getHeaders) === \"function\" && (formData === null || formData === void 0 ? void 0 : formData.getHeaders()) || {};\n    const headers = Object.entries({\n        Accept: \"application/json\",\n        ...additionalHeaders,\n        ...options.headers,\n        ...formHeaders\n    }).filter(([_, value])=>$75bf175d3183eb33$export$4e62c701997796c1(value)).reduce((headers, [key, value])=>({\n            ...headers,\n            [key]: String(value)\n        }), {});\n    if ($75bf175d3183eb33$export$991095b57f274a5f(token)) headers[\"Authorization\"] = `Bearer ${token}`;\n    if ($75bf175d3183eb33$export$991095b57f274a5f(username) && $75bf175d3183eb33$export$991095b57f274a5f(password)) {\n        const credentials = $75bf175d3183eb33$export$b3b2de96497acc47(`${username}:${password}`);\n        headers[\"Authorization\"] = `Basic ${credentials}`;\n    }\n    if (options.body) {\n        if (options.mediaType) headers[\"Content-Type\"] = options.mediaType;\n        else if ($75bf175d3183eb33$export$5bcd6e94ed871c88(options.body)) headers[\"Content-Type\"] = options.body.type || \"application/octet-stream\";\n        else if ($75bf175d3183eb33$export$844ec244b1367d54(options.body)) headers[\"Content-Type\"] = \"text/plain\";\n        else if (!$75bf175d3183eb33$export$67a42df2b7ab73bc(options.body)) headers[\"Content-Type\"] = \"application/json\";\n    }\n    return headers;\n};\nconst $75bf175d3183eb33$export$55bce18df99af758 = (options)=>{\n    if (options.body) return options.body;\n    return undefined;\n};\nconst $75bf175d3183eb33$export$d5a1e65f8aa21b51 = async (config, options, url, body, formData, headers, onCancel, axiosClient)=>{\n    const source = (0, $5d7526a7a1e5b3fb$export$2e2bcd8739ae039).CancelToken.source();\n    const requestConfig = {\n        url: url,\n        headers: headers,\n        data: body !== null && body !== void 0 ? body : formData,\n        method: options.method,\n        withCredentials: config.WITH_CREDENTIALS,\n        cancelToken: source.token\n    };\n    onCancel(()=>source.cancel(\"The user aborted a request.\"));\n    try {\n        return await axiosClient.request(requestConfig);\n    } catch (error) {\n        const axiosError = error;\n        if (axiosError.response) return axiosError.response;\n        throw error;\n    }\n};\nconst $75bf175d3183eb33$export$67c14f05e310b1da = (response, responseHeader)=>{\n    if (responseHeader) {\n        const content = response.headers[responseHeader];\n        if ($75bf175d3183eb33$export$844ec244b1367d54(content)) return content;\n    }\n    return undefined;\n};\nconst $75bf175d3183eb33$export$c852f9270b343ec4 = (response)=>{\n    if (response.status !== 204) return response.data;\n    return undefined;\n};\nconst $75bf175d3183eb33$export$31bf08a141e671fd = (options, result)=>{\n    var _a, _b;\n    const errors = {\n        400: \"Bad Request\",\n        401: \"Unauthorized\",\n        403: \"Forbidden\",\n        404: \"Not Found\",\n        500: \"Internal Server Error\",\n        502: \"Bad Gateway\",\n        503: \"Service Unavailable\",\n        ...options.errors\n    };\n    const error = errors[result.status];\n    if (error) throw new (0, $097ad07088ede5ed$export$f2e832acab1bdd79)(options, result, error);\n    if (!result.ok) {\n        const errorStatus = (_a = result.status) !== null && _a !== void 0 ? _a : \"unknown\";\n        const errorStatusText = (_b = result.statusText) !== null && _b !== void 0 ? _b : \"unknown\";\n        const errorBody = (()=>{\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n        throw new (0, $097ad07088ede5ed$export$f2e832acab1bdd79)(options, result, `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`);\n    }\n};\nconst $75bf175d3183eb33$export$b5fe3f66a567bec0 = (config, options, axiosClient = (0, $5d7526a7a1e5b3fb$export$2e2bcd8739ae039))=>{\n    return new (0, $18e457eae73e373b$export$551a058e9626aa5a)(async (resolve, reject, onCancel)=>{\n        try {\n            const url = $75bf175d3183eb33$var$getUrl(config, options);\n            const formData = $75bf175d3183eb33$export$9643fd7297feaaf5(options);\n            const body = $75bf175d3183eb33$export$55bce18df99af758(options);\n            const headers = await $75bf175d3183eb33$export$6a9b8dd1339b1a17(config, options, formData);\n            if (!onCancel.isCancelled) {\n                const response = await $75bf175d3183eb33$export$d5a1e65f8aa21b51(config, options, url, body, formData, headers, onCancel, axiosClient);\n                const responseBody = $75bf175d3183eb33$export$c852f9270b343ec4(response);\n                const responseHeader = $75bf175d3183eb33$export$67c14f05e310b1da(response, options.responseHeader);\n                const result = {\n                    url: url,\n                    ok: $75bf175d3183eb33$export$b0ac3e614a309be3(response.status),\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader !== null && responseHeader !== void 0 ? responseHeader : responseBody\n                };\n                $75bf175d3183eb33$export$31bf08a141e671fd(options, result);\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n\nclass $ee917fbf512b7458$export$8a3e7688f6bbb233 extends (0, $868cdcac0038990f$export$86fcbb09edb4aebc) {\n    constructor(config){\n        super(config);\n    }\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */ request(options) {\n        return (0, $75bf175d3183eb33$export$b5fe3f66a567bec0)(this.config, options);\n    }\n}\n\n\nclass $4575016c0d5435dc$export$47ee1c28e3d17369 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get absence period by id\n     * @param companyId Your company id\n     * @param companyUserId The id of the actual user\n     * @param id The id for the requested absence period\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */ absence(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Absence Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */ updateAbsence(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete absence\n     * @param companyId Company Id\n     * @param companyUserId Customer Id\n     * @param id Customer Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteAbsence(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns AbsencePeriodModel Created\n     * @throws ApiError\n     */ newAbsence(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/absences\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b3e9581dd8c923f4$export$a1746a9cd4653513 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get absence period by company user id\n     * @param companyId Your Cinode Company id\n     * @param companyUserId The id of the actual User\n     * @returns AbsencePeriodDtoModel All went well\n     * @throws ApiError\n     */ absences(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/absences\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $6e14e2f934ef9a63$export$eb58e95b5eb4c6b3 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get absence types for company\n     * @param companyId\n     * @returns AbsenceTypeModel All went well\n     * @throws ApiError\n     */ absenceTypes(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/absence/types\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $60c6475fe65917a9$export$5cc1fb0596a42f55 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get availability for company users. Omitting companyUserId gets availability for all company users in company.\n     * @param companyId Your Cinode Company id\n     * @param requestBody Filter options\n     * @returns AvailabilityModel All went well\n     * @throws ApiError\n     */ searchAvailability(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/availability\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $fd3cc8fdfce33195$export$81a665b0338610f5 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company by id\n     * @param companyId CompanyId\n     * @returns CompanyModel All went well\n     * @throws ApiError\n     */ company(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $cb4eed8a20c67750$export$b278987a992e5fe0 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company users list for an address\n     * @param companyId Company Id\n     * @param id Address Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ companyAddressUsers(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/addresses/{id}/users\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d6600c8fb700265d$export$a24ee0c8bdccf707 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Candidate by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */ candidate(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Patch company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyCandidatePatchDocument` for full type information per property\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */ patchCompanyCandidate(companyId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PATCH\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete candidate from the system\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCandidate(companyId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param requestBody CompanyCandidateAddModel\n     * @returns any All went well\n     * @returns CompanyCandidateExtendedModel Created\n     * @throws ApiError\n     */ addCompanyCandidate(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Invite the CompanyCandidate to create their own Cinode account\n     * A email is sent with your message and details for how to login\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Model with data about the candidate needed for the invitation\n     * @returns any All went well\n     * @throws ApiError\n     */ inviteCandidate(companyId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/invite\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $1cee9bb6b4f5ccf9$export$35d7f17818448f5a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates event by id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventModel All went well\n     * @throws ApiError\n     */ companyCandidateEvent(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $c2defb76fdd81498$export$85a578801d4bad46 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates meeting event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */ companyCandidateEventMeeting(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Meeting Event details\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */ updateCompanyCandidateEventMeeting(companyId, candidateId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete company candidate meeting event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCandidateEventMeeting(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add new meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Meeting Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventMeetingModel Created\n     * @throws ApiError\n     */ newCompanyCandidateEventMeeting(companyId, candidateId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e3c17cd99653740a$export$71648590530fa008 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates events meetings list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */ companyCandidateMeetingEventList(companyId, candidateId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $65ba2b3c120ffe96$export$7d70a844d6105290 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates note event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */ companyCandidateEventNote(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Note Event details\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */ updateCompanyCandidateEventNote(companyId, candidateId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete company candidate note event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCandidateEventNote(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add new note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Note Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventNoteModel Created\n     * @throws ApiError\n     */ newCompanyCandidateEventNote(companyId, candidateId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $2e27d1d8e3591f0d$export$50aec86de547e333 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates events notes list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */ companyCandidateNoteEventList(companyId, candidateId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ade3a7c7b94d300a$export$8c8166d5fa7c286d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates events list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */ companyCandidateEvents(companyId, candidateId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $dae375880fe67ecb$export$1ba5e78a45067ab0 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates task event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */ companyCandidateEventTask(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Task Event details\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */ updateCompanyCandidateEventTask(companyId, candidateId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete company candidate task event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCandidateEventTask(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add new task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Task Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventTaskModel Created\n     * @throws ApiError\n     */ newCompanyCandidateEventTask(companyId, candidateId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $5d1d9c9f5bf81cd1$export$b6bc1ae3b8a6484a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates events tasks list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */ companyCandidateTaskEventList(companyId, candidateId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d82887d3d4d2047c$export$c8ac3e0490d41de6 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Candidate File Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */ getCandidateAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/attachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d78f01377092b528$export$9ef34bd472cfb16b {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Upload Candidate File Attachment\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyCandidateFileAttachmentListModel Created\n     * @throws ApiError\n     */ candidateAttachment(id, companyId, formData) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/attachments\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            formData: formData,\n            mediaType: \"multipart/form-data\",\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`\n            }\n        });\n    }\n}\n\n\nclass $d17e8a48f009aa2a$export$8bacb692d51e8649 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get candidate pipelines\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidatePipelineModel All went well\n     * @throws ApiError\n     */ candidatePipelines(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/pipelines\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $09a9673fccf54f1b$export$cccbbdbc47111182 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Candidates\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidateBaseModel All went well\n     * @throws ApiError\n     */ candidates(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $7c80131c69cacbaf$export$56a491cf6cf94c76 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add a Skill to company candidate\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/19870/skills\n     * {\n         * \"name\": \"SQL\",\n         * \"companyCandidateId\": 19870,\n         * \"keywordSynonymId\": 577,\n         * \"languageId\":1\n         * }\n         * @param companyId Company Id\n         * @param candidateId CandidateId Id\n         * @param requestBody CompanyCandidateSkillAddEditModel\n         * @returns CompanyCandidateSkillModel All went well\n         * @throws ApiError\n         */ newCompanyCandidateSkill(companyId, candidateId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/skills\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Candidate Skill\n     * Sample request:\n     *\n     * DELETE /v0.1/companies/1/candidates/19870/skills/577\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Skill Keyword Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCandidateSkill(companyId, candidateId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{candidateId}/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"candidateId\": candidateId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $84520c2f1d04ccac$export$c0ebe0863eddd316 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param requestBody\n     * @returns CompanyCandidateUriAttachmentModel Created\n     * @throws ApiError\n     */ candidateUriAttachment(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/uriattachments\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`\n            }\n        });\n    }\n    /**\n     * Delete Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param attachmentId\n     * @returns any Success\n     * @throws ApiError\n     */ deleteCandidateUriAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`\n            }\n        });\n    }\n}\n\n\nclass $8b0944fe7c0156e9$export$754c0ec67f37947d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Candidate Uri Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns CompanyCandidateUriAttachmentModel All went well\n     * @throws ApiError\n     */ getCandidateUriAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $46ef91ebabd2fb77$export$a0026a5769eab5d2 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Create an account for a candidate.\n     * No email is sent to the candidate, you will have to communicate login details to the candidate yourself.\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Basic account information\n     * @returns CompanyUserCandidateModel All went well\n     * @throws ApiError\n     */ addCandidateUserFromCandidate(companyId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/{id}/user\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d0710cb3c1f0af6f$export$a0707f1d94ce819b {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company capabilities\n     * @param companyId CompanyId\n     * @returns CompanyCapabilitiesModel All went well\n     * @throws ApiError\n     */ companyCapabilities(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/capabilities\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e549cdc6fa0e029c$export$4c77df3933660a6d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company currencies\n     * @param companyId Company Id\n     * @returns CurrencyModel All went well\n     * @throws ApiError\n     */ companyCurrencies(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/currencies\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $0001afa616ed19f8$export$5e0ca4e966076353 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company customer by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId\n     * @param id\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */ getCompanyCustomer(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param requestBody CompanyCustomerAddEditModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */ updateCompanyCustomer(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Patch company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody Patch of CompanyCustomerPatchModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */ patchCompanyCustomer(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PATCH\",\n            url: \"/v0.1/companies/{companyId}/customers/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerDeleteModel\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCustomer(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerAddModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */ newCompanyCustomer(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a3ecbdefb01f32a0$export$bf561abe2fb5dbc9 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer address by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */ customerAddress(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Customer Address Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */ editCompanyCustomerAddress(companyId, customerId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCustomerAddress(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */ newCompanyCustomerAddress(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/addresses\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b4a12c7c04e3019d$export$d50d29cdcdbfd5ce {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer contact by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */ contact(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */ editCompanyCustomerContact(companyId, customerId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyCustomerContact(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */ newCompanyCustomerContact(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $17608abb1bce0893$export$17d89cd4779997d1 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer contact list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */ contacts(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $8942c4444aeaa546$export$8e4892b3101b5a56 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Edit Tags for CustomerContact\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the contact.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/contacts/5360/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param contactId CustomerContact Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyTagModel All went well\n                 * @throws ApiError\n                 */ editCustomerContactTags(companyId, customerId, contactId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/contacts/{contactId}/tags\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"contactId\": contactId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $77bc92a2be025614$export$93ddafb9a54c0212 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventModel All went well\n     * @throws ApiError\n     */ companyCustomerEvent(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4a2e1115cdc567f4$export$769c6a97a634e038 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer events list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */ companyCustomerEvents(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ea8fa6069c9d802b$export$ae5ae905d4a426fe {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event meeting by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */ companyCustomerEventMeeting(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */ updateMeeting(companyId, customerId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteMeeting(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */ newMeeting(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ea9b5a4a226714e1$export$4b9bbe00845af9de {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event meetings list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */ companyCustomerEventMeetings(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $eca014fe4d43af5a$export$7b2eaf9aa467c8f1 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event note by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */ companyCustomerEventNote(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */ updateNote(companyId, customerId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteNote(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventNoteAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */ newNote(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e4cd42f2086d6178$export$ca17c8c93983bf53 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event notes list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */ companyCustomerEventNotes(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $149959019e29653d$export$388ecb6624507af3 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event task by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */ companyCustomerEventTask(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */ updateTask(companyId, customerId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteTask(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */ newTask(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $40a0563e4f03eaa0$export$304ef75be13d69d2 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer event tasks list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */ companyCustomerEventTasks(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ecb795374d00207c$export$be5342b121c1e028 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */ getCustomerAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{id}/attachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $2695de531d29fb37$export$82aca92cfb9ef6f2 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get customer managers\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerManagerModel All went well\n     * @throws ApiError\n     */ companyCustomerManagers(companyId, customerId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/managers\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add customer responsible\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/22228/managers\n     * {\n         * [\n             * 51096\n             * ]\n             * }\n             * @param companyId Company Id\n             * @param customerId Customer Id\n             * @param requestBody CompanyCustomerManagersAddEditModel\n             * @returns CompanyCustomerManagerModel All went well\n             * @throws ApiError\n             */ addCompanyCustomerResponsible(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/managers\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Remove customer responsible\n     * Sample request:\n     *\n     * DELETE /v0.1/companies/1/customers/22228/managers/54632\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ removeCustomerManager(companyId, customerId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/managers/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b18786a7e220ad2b$export$795fb71b3bad14cb {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerBaseModel All went well\n     * @throws ApiError\n     */ companyCustomers(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $34b4de9a178d5736$export$c88e756d252488d4 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get extended company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerExtendedModel All went well\n     * @throws ApiError\n     */ customersExtended(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/customers/extended\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $29b79fd8fea67627$export$8b13e7a213e7af0a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Edit Tags for Customer\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the customer.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyCustomerModel All went well\n                 * @throws ApiError\n                 */ editCustomerTags(companyId, customerId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/{customerId}/tags\",\n            path: {\n                \"companyId\": companyId,\n                \"customerId\": customerId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $881d941cdecf3074$export$c2fcdcf3abf79263 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Company Image by Id\n     * @param companyId Company Id\n     * @param id Image id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */ companyImage(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/images/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Download Company Image\n     * @param companyId Company Id\n     * @param id Image id\n     * @param imageFileName Image File Name\n     * @returns string All went well\n     * @throws ApiError\n     */ companyImageDownload(companyId, id, imageFileName) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/images/{id}/{imageFileName}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id,\n                \"imageFileName\": imageFileName\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $3a0acefaccd83597$export$b2018fc046463812 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Company Images Assigned to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */ companyImages(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{id}/images\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add Image to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param formData\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */ addCompanyImage(companyId, id, formData) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{id}/images\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            formData: formData,\n            mediaType: \"multipart/form-data\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $8e9451ade7472c2d$export$b597a0f306b928d7 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company managers\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/managers\n     * @param companyId Company Id\n     * @returns CompanyUserBaseModel All went well\n     * @throws ApiError\n     */ companyManagers(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/managers\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $5c6b0344412238dd$export$59e98d4ab7ff8c7b {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profiles list\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/profiles\n     * {\n         * \"createdOffsetDays\": 90,\n         * \"updatedOffsetDays\": 30,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15,\n             * \"order\": 0,\n             * \"sortBy\": 1\n             * }\n             * }\n             * @param companyId Company Id\n             * @param requestBody Company Profile Filter\n             * @returns CompanyProfilesModel All went well\n             * @throws ApiError\n             */ companyProfiles(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/profiles\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4ec62cc557452729$export$ca2e85756a0c75ed {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Project file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */ getProjectAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{id}/attachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $64cc46d354208ab1$export$5713bae4e6d7d0d8 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get recruitment managers\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyRecruitmentManagerModel All went well\n     * @throws ApiError\n     */ recruitmentManagers(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/recruitment/managers\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $c347c3aecdc05fba$export$8b837281bd1a79c5 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */ companyResumes(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/resumes\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $27f36a7c5f4c2e46$export$e21518b0632c2d19 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Subcontractor Group by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */ getCompanySubcontractorGroup(companyId, subcontractorGroupId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorGroupId\": subcontractorGroupId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $c22f8c170e2494a5$export$809520f725c1d7d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param requestBody AddCompanySubcontractorGroupMemberModel\n     * @returns void\n     * @throws ApiError\n     */ addCompanySubcontractorGroupMember(companyId, subcontractorGroupId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorGroupId\": subcontractorGroupId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param id Subcontractor Id\n     * @returns void\n     * @throws ApiError\n     */ deleteCompanySubcontractorGroupMember(companyId, subcontractorGroupId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorGroupId\": subcontractorGroupId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $3d6db815d64bff0b$export$16e5dd2cebfcc609 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Subcontractor Groups by Company Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */ getCompanySubcontractorGroups(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/groups\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e3c46626fd8e503f$export$f40112f75f119675 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company tag by Id\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags/1\n     * @param companyId Company Id\n     * @param id Tag Id\n     * @returns CompanyTagModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */ companyTag(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/tags/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $61d852ef2ceba8ab$export$8717da62100b1773 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company tags\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags\n     * @param companyId Company Id\n     * @returns CompanyTagBaseModel All went well\n     * @throws ApiError\n     */ companyTags(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/tags\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $40a1f0180688dad8$export$271fe9a250f232c1 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get team by id\n     * @param companyId Company Id\n     * @param id Event Id\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */ team(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update team\n     * Requires access level: CompanyAdmin.\n     * @param id Team Id\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */ updateTeam(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/teams/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */ newTeam(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/teams\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a197a4e499961a48$export$9b9e5c48cc2a66c0 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get team managers\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ teamManagers(companyId, teamId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/managers\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add team manager\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/teams/1234/managers\n     * {\n         * \"teamId\" : 1234,\n         * \"companyUserId\" : 54632\n         * }\n         * @param companyId Company Id\n         * @param teamId\n         * @param requestBody TeamMemberEditModel\n         * @returns TeamManagerModel All went well\n         * @throws ApiError\n         */ addTeamManager(companyId, teamId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/managers\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Remove team manager\n     * Sample request:\n     *\n     * DELETE /v0.1/companies/1/teams/1234/managers/54632\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ removeTeamManager(companyId, teamId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/managers/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $dc7c4bc61412843f$export$4d187899fd61c416 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get team member\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */ getTeamMember(companyId, teamId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberEditModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */ updateTeamMember(companyId, teamId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ removeTeamMember(companyId, teamId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */ addTeamMember(companyId, teamId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Move team member and associated bookings to another team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberMoveModel\n     * @returns any All went well\n     * @throws ApiError\n     */ moveTeamMember(companyId, teamId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members/{id}/move\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $c23fd24bbc0a0e0e$export$650f3955e41dfc45 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */ getTeamMembers(companyId, teamId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/members\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f1e3dcafc0fb5fb6$export$162ed105dac95d0c {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get teams list\n     * @param companyId Company Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */ companyTeams(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f35ae9f349f0552c$export$64d904ffdd8d2286 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * @deprecated\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ getTeamUsers(companyId, teamId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/users\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * @deprecated\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */ addTeamUser(companyId, teamId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/users\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * @deprecated\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ removeTeamUser(companyId, teamId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/teams/{teamId}/users/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"teamId\": teamId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $6c98ec09ddbaad8c$export$80525ec1d2c57391 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company user by id\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserModel All went well\n     * @throws ApiError\n     */ user(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody CompanyUserEditModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */ updateCompanyUser(companyId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Patch company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyUserEmployeePatchDocument` for full type information per property\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */ patchCompanyUser(companyId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PATCH\",\n            url: \"/v0.1/companies/{companyId}/users/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete user from the system\n     * Firstly, the user has to be disconnected, which can be done through a PATCH or PUT\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param firstName CompanyUser FirstName\n     * @param lastName CompanyUser LastName\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUser(companyId, id, firstName, lastName) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            query: {\n                \"firstName\": firstName,\n                \"lastName\": lastName\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add company user employee\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserAddModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */ addCompanyUser(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $8baa6e21400a1890$export$83c115d3d2b0ba96 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Convert company user employee to an AAD account\n     * Requires access level: CompanyAdmin.\n     * @param companyUserId Company User Id\n     * @param companyId\n     * @param requestBody ConvertCompanyUserToAadAccountModel\n     * @returns any All went well\n     * @throws ApiError\n     */ convertUserToAadAccount(companyUserId, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/convert-aad\",\n            path: {\n                \"companyUserId\": companyUserId,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $abd4429073e00654$export$8fe712f519126dc0 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEvent(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $705849b5d9fd2ac6$export$7eb65acfb6da1621 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventMeeting(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */ updateCompanyUserEmployeeEventMeeting(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserEmployeeEventMeeting(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Creates new employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */ newCompanyUserEmployeeEventMeeting(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $05e898f0b67c61c6$export$eed5ea593bafe920 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventNote(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */ updateCompanyUserEmployeeEventNote(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserEmployeeEventNote(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Creates new employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */ newCompanyUserEmployeeEventNote(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4d9fd314f1a9eb24$export$513b4c416c5a2a1f {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEvents(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f8d12e0e53657c7e$export$8c3335594a3b89d5 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee meetings events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventMeetingList(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $975687e355d6d57a$export$d079520dee85fe49 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee notes events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventNoteList(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4e2c863184306c18$export$fc7cb0f5eda31b60 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get employee tasks events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventTaskList(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b377f19a89018a62$export$f79a39da0c0cdc47 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Creates new employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */ newCompanyUserEmployeeEventTask(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Get employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */ companyUserEmployeeEventTask(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates employee's task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */ updateCompanyUserEmployeeEventTask(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserEmployeeEventTask(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $8dadda588aecf2a9$export$7909a7030858369c {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company user, including financial fields, by id\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */ userFull(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users-full/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $6b6637f0d882f53c$export$2ac2d9437f09b025 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Update Permissions for Company User\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserPermissionsEditModel\n     * @returns RoleModel All went well\n     * @throws ApiError\n     */ updatePermissions(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/permissions\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $42ab983f49bd85f3$export$e57da5d4b89e8cb4 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile by company user id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileFullModel All went well\n     * @throws ApiError\n     */ companyUserProfile(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Profile for user\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileBaseModel Created\n     * @throws ApiError\n     */ newCompanyUserProfile(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $fd8ede8a47a7c12c$export$889f3fe2032b14fb {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile commitment by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileCommitment Id\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */ companyUserProfileCommitment(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileCommitment(id, companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileCommitment(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Profile Commitment\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileCommitmentModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileCommitment(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $feec720c39b9e74c$export$48be4796dd3b09b1 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile education by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEducation Id\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */ companyUserProfileEducation(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileEducation(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Education\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileEducation(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEducationModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileEducation(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $5b3f5e6b06dbc0bc$export$5b02c7ef2755646f {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile employer by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEmployer Id\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */ companyUserProfileEmployer(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Employer\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileEmployer(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Employer\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileEmployer(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Employer profile item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEmployerModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileEmployer(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $2af0faff236cef1a$export$7ce3b12efbc526b1 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile external skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileExtSkill Id\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */ companyUserProfileExtSkill(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileExtSkill(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Extra Skill Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileExtSkill(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileExtSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileExtSkillModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileExtSkill(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $6147fee148667e12$export$dc03d29e832e622 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Create new profile import for a user.\n     * This will start an async operation.\n     * - If the operation is started successfully, the response will be `202 Accepted` and the `Location` header will contain the URL to get the status of the operation.\n     * - If the operation is not started successfully, the response will be `400 Bad Request`\n     * @param companyId\n     * @param companyUserId\n     * @param formData\n     * @returns any Accepted\n     * @throws ApiError\n     */ createCompanyUserProfileImport(companyId, companyUserId, formData) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/import\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            formData: formData,\n            mediaType: \"multipart/form-data\",\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`\n            }\n        });\n    }\n    /**\n     * Get current status of the async profile import operation.\n     * This will return the status of an async operation.\n     * - If the operation is still in progress, the response will be `202 Accepted`\n     * - If the operation is completed successfully, the response will be `200 OK` and the `status` property will be `Completed`\n     * - If the operation is completed with errors, the response will be `200 OK` and the `status` property will be `Failed`\n     * @param companyId\n     * @param companyUserId\n     * @param operationId\n     * @returns ImportProfileAsyncOperation Success\n     * @returns any Accepted\n     * @throws ApiError\n     */ getCompanyUserProfileImport(companyId, companyUserId, operationId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/import/{operationId}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"operationId\": operationId\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`\n            }\n        });\n    }\n}\n\n\nclass $7b963bc815f531cc$export$56a23e645db8f13b {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile language by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileLanguage Id\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */ companyUserProfileLanguage(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileLanguage(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Language Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileLanguage(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileLanguageAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileLanguageModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileLanguage(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $390b7a5d59fa786c$export$de1b171f86e70e92 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Available Profile Languages\n     * @returns ProfileLanguageModel All went well\n     * @throws ApiError\n     */ profileLanguages() {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/languages\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e772eda63182ce6c$export$a461e3b362509444 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */ companyUserProfilePresentation(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Edit Profile Presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfilePresentationEditModel\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfilePresentation(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $966762b6ede6d622$export$2ffcd76fc41d3871 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile reference by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileReference Id\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */ companyUserProfileReference(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileReference(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Reference Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileReference(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileReferenceModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileReference(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/references\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e159ad9627288dc5$export$b38f975cd45385a6 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profiles list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileBaseModel All went well\n     * @throws ApiError\n     */ companyUserProfiles(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profiles\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $80dbe41ebe853d81$export$6892c8bbf17f2028 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileSkill Id\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */ companyUserProfileSkill(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Skill\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileSkillEditModel\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileSkill(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Skill\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileSkill(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add Skill to profile\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileSkillModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileSkill(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d4d409dd621d056c$export$e6a275918e0d423e {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile training by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileTraining Id\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */ companyUserProfileTraining(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileTraining(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Training Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileTraining(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileTrainingModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileTraining(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4b040a6044529229$export$6bc5afc1f2b3db96 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get profile work experience by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileWorkExperience Id\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */ companyUserProfileWorkExperience(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Profile Work Experience\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileWorkExperienceAddEditModel\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */ updateCompanyUserProfileWorkExperience(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Profile Work Experience Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserProfileWorkExperience(id, companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Create WorkExperience Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserWorkExperienceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileWorkExperienceModel Created\n     * @throws ApiError\n     */ newCompanyUserProfileWorkExperience(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e8ee3938be25e27a$export$ed4495c6a4c00add {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns ClassicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */ getResume(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $92f9143552a4da9b$export$575593bab3224c9a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company user resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */ companyUserResumes(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/resumes\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $799beae70a3f02da$export$eb7ba955dd37b48c {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Roles for CompanyUser by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserProjectAssignmentModel All went well\n     * @throws ApiError\n     */ companyUserRoles(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{id}/roles\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a1b0a6925d918fe6$export$d59fe8dac28bbd7d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ companyUsers(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $6195bd40b274abfd$export$fc15e1837624e50a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get extended company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */ companyUsersExtended(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/extended\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $fdbfd97faf98525d$export$4a91f4807dce316a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Skill Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */ skill(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4747ca8409aff5df$export$b3422cd87055d35d {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get skills list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */ skills(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/skills\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ce29fdd354d08284$export$a8b63a6b2f767a8e {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company user by id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */ companySubcontractor(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete subcontractor from the system\n     * This action is irreversible, use with caution\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id Subcontractor Id\n     * @param firstName Subcontractor FirstName\n     * @param lastName Subcontractor LastName\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanySubcontractor(companyId, id, firstName, lastName) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            query: {\n                \"firstName\": firstName,\n                \"lastName\": lastName\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add subcontractor\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserSubcontractorAddEditModel\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */ addCompanyUserSubcontractor(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $3d6be0078931fc71$export$d8208da4ba78c877 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEvent(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $1cac77248feb07fd$export$a9776fd23f4cf45f {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Meeting event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventMeeting(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */ updateCompanyUserSubcontractorEventMeeting(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserSubcontractorEventMeeting(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Creates new subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */ newCompanyUserSubcontractorEventMeeting(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $5ee3156aa614c071$export$e3d6d5e4a419eccf {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventNote(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates subcontractor note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */ updateCompanyUserSubcontractorEventNote(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserSubcontractorEventNote(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Creates new subcontractors note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */ newCompanyUserSubcontractorEventNote(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $9cea17529d23dde2$export$ba4a80ec97b44423 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEvents(companyId, subcontractorId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/events\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorId\": subcontractorId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $2cb077c43c1d9d6b$export$32d9f60ae7d643ac {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors meetings events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventMeetingList(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a7515048b85e0748$export$19f26cddc1e4a43a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventsNotes(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $71ffffba2d0acd33$export$8437aa08351bc1ca {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventsTasks(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $5c8b027c30f2d479$export$e1a185b1a211b19a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Creates new subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */ newCompanyUserSubcontractorEventTask(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractorEventTask(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Updates subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */ updateCompanyUserSubcontractorEventTask(companyId, companyUserId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyUserSubcontractorEventTask(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $82ce7d3dc2994d12$export$a8360f1b16f063e5 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractor File Attachment by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */ getSubcontractorAttachment(id, companyId, attachmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{id}/attachments/{attachmentId}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId,\n                \"attachmentId\": attachmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e3492071c52fb25d$export$aeb133ee930745dd {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Upload subcontractor file attachment\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyUserSubcontractorFileAttachmentListModel Created\n     * @throws ApiError\n     */ subcontractorAttachment(id, companyId, formData) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{id}/attachments\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            formData: formData,\n            mediaType: \"multipart/form-data\",\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`\n            }\n        });\n    }\n}\n\n\nclass $68da44a06896b66e$export$e8c407c1c8977b57 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get assigned and prospect roles for subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @returns CompanyUserSubcontractorRolesModel All went well\n     * @throws ApiError\n     */ getSubcontractorRoles(companyId, subcontractorId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorId\": subcontractorId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Get a specific role, assigned and or prospected, for subcontractor by role id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @param projectAssignmentId Project assignment Id\n     * @returns CompanyUserSubcontractorRoleMemberModel All went well\n     * @throws ApiError\n     */ getSubcontractorRole(companyId, subcontractorId, projectAssignmentId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles/{projectAssignmentId}\",\n            path: {\n                \"companyId\": companyId,\n                \"subcontractorId\": subcontractorId,\n                \"projectAssignmentId\": projectAssignmentId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e7a6b4407a52c027$export$749854a6169bb696 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get subcontractors list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanyUserSubcontractorBaseModel All went well\n     * @throws ApiError\n     */ companyUserSubcontractors(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/subcontractors\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $3bcc2030d257e3e9$export$4700363cb7c4bf01 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Edit Tags for User\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the user.\n     * A new tag will be created if the id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/users/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-new\",\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param companyUserId CompanyUser Id\n                 * @param requestBody CompanyTagModel[]\n                 * @returns CompanyUserModel All went well\n                 * @throws ApiError\n                 */ editCompanyUserTags(companyId, companyUserId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/tags\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $acc648cdb4940ab6$export$d55285a3ab81e66c {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get teams for team member\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */ userTeams(companyId, companyUserId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/teams\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $23ed554c35e67563$export$80ea09c47452aeee {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add Webhook\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/webhooks\n     * {\n         * \"isActive\": false,\n         * \"endpointUrl\": \"https://webhook.site/7a619ffb-e67c-41fc-8113-083d6013f76c\",\n         * \"configurations\": [\n             * {\n                 * \"entityType\": 1,\n                 * \"actionType\": 1\n                 * }\n                 * ],\n                 * \"credentials\": [\n                     * {\n                         * \"isBasicAuthentication\": true,\n                         * \"headerName\": \"user\",\n                         * \"headerValue\": \"somevalue\"\n                         * }\n                         * ]\n                         * }\n                         * @param companyId Company Id\n                         * @param requestBody WebhookAddModel\n                         * @returns WebhookModel All went well\n                         * @throws ApiError\n                         */ newWebhook(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/webhooks\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Requires access level: CompanyAdmin. Requires module: Webhooks.\n     * @param companyId\n     * @param requestBody\n     * @returns WebhookModel Created\n     * @throws ApiError\n     */ installWebhookManifest(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/webhooks/manifest\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server Error`\n            }\n        });\n    }\n    /**\n     * Remove webhook\n     * Sample request:\n     *\n     * DELETE /v0.1/companies/1/webhooks/42a3a220-766c-eb11-8e13-000c29b4e92f\n     * @param companyId Company Id\n     * @param id Webhook Id\n     * @returns any All went well\n     * @throws ApiError\n     */ removeWebhook(companyId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/webhooks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f391f1e1174c3373$export$ca4decab7ef1aa1e {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company webhooks\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/webhooks\n     * @param companyId Company Id\n     * @returns WebhookModel All went well\n     * @throws ApiError\n     */ companyWebhooks(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/webhooks\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a3687585bec32f63$export$a639a6eecb57b3b7 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns DynamicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */ dynamicResume(companyId, companyUserId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}/dynamic\",\n            path: {\n                \"companyId\": companyId,\n                \"companyUserId\": companyUserId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $62a69252fb91128d$export$44d608147b7bbeb0 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Search keywords by term\n     * @param companyId Company Id\n     * @param term Search term\n     * @returns KeywordModel All went well\n     * @throws ApiError\n     */ searchKeyword(companyId, term) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/keywords/search/{term}\",\n            path: {\n                \"companyId\": companyId,\n                \"term\": term\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4f08b3ade738b23e$export$f04085d244fce783 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Translates any mention-ids in a text to their human readable form.\n     * Translations are access restricted, if you don't have enough access\n     * to get the name of an id, it won't be translated.\n     * @param companyId Company Id\n     * @param requestBody The model with one property, value, which contains the text containing the mentions you're looking to translate.  Example of a text with a mention inside: `\"Hello @(1|123456) can you please consider this role?\"`\n     * @returns string All went well\n     * @throws ApiError\n     */ translateMentions(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/mentions/to-natural-text\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $9dc626ea9cd4ee93$export$a07979cfc4e35991 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Partners by filter\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns PartnersOverviewModel All went well\n     * @throws ApiError\n     */ searchPartners(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/partners\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ece88cfc520c77ad$export$9616f8c54d4f56aa {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */ project(companyId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id Project Id\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */ updateCompanyProject(id, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{id}\",\n            path: {\n                \"id\": id,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteCompanyProject(companyId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */ newCompanyProject(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $e191e87072b42d69$export$7b75f5c0f6c791a9 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * @deprecated\n     * Get projectassignment by id (Obsolete)\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ oldProjectAssignment(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/projectassignments/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Get Role by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ projectAssignment(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Edit Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @param requestBody ProjectAssignmentEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ updateProjectAssignment(companyId, projectId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ deleteProjectAssignment(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectAssignmentAddEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ newProjectAssignment(companyId, projectId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Announce a role (ProjectAssignment) to the Partner Network and optionally also to Cinode Market(https://cinode.market/requests).\n     * If you are testing, set the \"PublishForReal\" to \"false\", otherwise you will publish this announcement for real. When you're testing (\"PublishForReal = false) RequestId will be 0 in the response.\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param projectId Project Id\n     * @param projectAssignmentId ProjectAssignment Id\n     * @param companyId\n     * @param requestBody ProjectAssignmentAnnounceModel\n     * @returns ProjectAssignmentAnnouncementBaseModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */ announceProjectAssignment(projectId, projectAssignmentId, companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{projectAssignmentId}/announce\",\n            path: {\n                \"projectId\": projectId,\n                \"projectAssignmentId\": projectAssignmentId,\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $8999668acc9425c8$export$c9c3f472996de0e2 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberEmployeeAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ addProjectAssignmentMemberEmployee(companyId, projectId, roleId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ addProjectAssignmentMemberSubcontractor(companyId, projectId, roleId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Edit Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ updateProjectAssignmentMemberEmployee(companyId, projectId, roleId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Edit Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ updateProjectAssignmentMemberSubcontractor(companyId, projectId, roleId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Role Member\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */ deleteProjectAssignmentMemberEmployee(companyId, projectId, roleId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a4014d689e45fbd7$export$8e97fb162fa11728 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get Roles by Filter\n     * Rate limited, restricted to once per minute, max 1000 requests per day\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns ProjectAssignmentWithStatusModel All went well\n     * @throws ApiError\n     */ searchRoles(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/roles\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $79e13cf0cb95dc48$export$485c8b08a67d53de {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Add Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */ addProjectAssignmentSkill(companyId, projectId, roleId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */ updateProjectAssignmentSkill(companyId, projectId, roleId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */ deleteProjectAssignmentSkill(companyId, projectId, roleId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"roleId\": roleId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $371cf3be03e8ff00$export$16ed56dbd717d2d9 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventModel All went well\n     * @throws ApiError\n     */ projectEvent(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $db934b0cdde1aa12$export$65e8b30e8dcc254a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project events list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */ projectEvents(companyId, projectId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $35a803a5d6eba89e$export$c65ad44da9d76f29 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event meeting by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */ projectEventMeeting(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */ updateProjectMeeting(companyId, projectId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteProjectMeeting(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */ newProjectMeeting(companyId, projectId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f7f8132acde7a0d9$export$4013195dfacdbeb7 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project events meetings list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */ projectEventMeetings(companyId, projectId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/meetings\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $d801db2bb3cf98d2$export$d835b03e2b60b21 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event note by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */ projectEventNote(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */ updateProjectNote(companyId, projectId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteProjectNote(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */ newProjectNote(companyId, projectId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $fdeed01a81b2cf75$export$79c6aaa02ca97a38 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event notes list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */ projectEventNotes(companyId, projectId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/notes\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $c8895ed2986afd8d$export$33ad4295cf6a52fe {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event task by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */ projectEventTask(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Update project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */ updateProjectTask(companyId, projectId, id, requestBody) {\n        return this.httpRequest.request({\n            method: \"PUT\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Delete project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */ deleteProjectTask(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"DELETE\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n    /**\n     * Add project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */ newProjectTask(companyId, projectId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $f574ea52df1e38b5$export$c609291b5d518816 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project event tasks list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */ projectEventTasks(companyId, projectId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/events/tasks\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $776d44097ecab902$export$f05399f130d784ae {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project pipelines\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectPipelineModel All went well\n     * @throws ApiError\n     */ projectPipelines(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/pipelines\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $de17eba3f28dd57e$export$827284a6eda43684 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Project reference Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */ projectReference(companyId, projectId, id) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/references/{id}\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId,\n                \"id\": id\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $60304a0bb0097467$export$3cbf3a37fdfc52ba {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */ projectReferences(companyId, projectId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/references\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $dbc2267469cb2e51$export$52e15361974fd6ce {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get projects list  - please note this endpoint currently only returns projects with the status WON. Please use the SearchProjects endpoint for more options of filtering desired Projects\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectBaseModel All went well\n     * @throws ApiError\n     */ projects(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/projects\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b93662395b76f484$export$410a03e91ff6d180 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Edit Tags for Project\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the project.\n     * A new tag will be created, if the id for a tag not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/projects/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param projectId Project Id\n                 * @param requestBody CompanyTagModel\n                 * @returns ProjectModel All went well\n                 * @throws ApiError\n                 */ editProjectTags(companyId, projectId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/{projectId}/tags\",\n            path: {\n                \"companyId\": companyId,\n                \"projectId\": projectId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $ac60e3e33620c0a3$export$cce865641658a46 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get recruitment sources\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns RecruitmentSourceModel All went well\n     * @throws ApiError\n     */ recruitmentSources(companyId) {\n        return this.httpRequest.request({\n            method: \"GET\",\n            url: \"/v0.1/companies/{companyId}/candidates/recruitment-sources\",\n            path: {\n                \"companyId\": companyId\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $9664d4063333fd48$export$ba969c1c62975e5a {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company candidates list from search criteria\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/search\n     * {\n         * \"term\": \"candidate property value\",\n         * \"rating\": 3\n         * \"status\": 0,\n         * \"sources\": [],\n         * \"noRecruiter\": false,\n         * \"recruiters\": [],\n         * \"states\": [0],\n         * \"pipeline\": null,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15\n             * },\n             * \"pipelines\": []\n             * }\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCandidateQueryModel\n             * @returns SearchCompanyCandidateResultModel All went well\n             * @throws ApiError\n             */ searchCompanyCandidate(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/candidates/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $28b648b92efac93a$export$6b7396933ce279dd {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company customer contacts list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerContactResultModel All went well\n     * @throws ApiError\n     */ searchCompanyCustomerContact(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/contacts/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $7047f924d6f6e297$export$5bb89196b8e0fd66 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company customers list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerResultModel All went well\n     * @throws ApiError\n     */ searchCompanyCustomer(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/customers/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $3fcf2e234324b2aa$export$3a26835584e937a5 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get company users list from search criteria\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyUserQueryModel\n     * @returns SearchCompanyUserResultModel All went well\n     * @throws ApiError\n     */ searchCompanyUser(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/users/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $b9079a70491b4867$export$5899a0e3ac5bbdb6 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Get projects list from search criteria\n     * Sample request\n     * {\n         * \"pipelines\": [4],\n         * \"projectStates\": [0],\n         * \"PageAndSortBy\": {\n             * \"SortBy\": \"0\",\n             * \"SortOrder\": \"1\",\n             * \"Page\": \"1\",\n             * \"ItemsPerPage\": \"15\",\n             * }\n             * }\n             * SortBy Parameter can be:\n             * CreatedDateTime=0 // Default\n             * Title=1\n             * Identifier=2\n             * CustomerIdentifier=3\n             * SeoId=4\n             * UpdatedDateTime=6\n             * LastTouchDateTime=7\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCustomerQueryModel\n             * @returns SearchProjectsResultModel All went well\n             * @throws ApiError\n             */ searchProject(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/projects/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $18dba795cbe4c53b$export$af76b0904c01521b {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Search users by skill keyword id\n     * @param companyId Company Id\n     * @param requestBody SearchSkillQueryModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */ searchSkill(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/skills/search\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $4f49e19b9639ef02$export$2b10644a1825cf13 {\n    constructor(httpRequest){\n        this.httpRequest = httpRequest;\n    }\n    /**\n     * Search users with skills by term (string value)\n     * @param companyId Company Id\n     * @param requestBody SkillSearchQueryTermModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */ searchSkillTerm(companyId, requestBody) {\n        return this.httpRequest.request({\n            method: \"POST\",\n            url: \"/v0.1/companies/{companyId}/skills/search/term\",\n            path: {\n                \"companyId\": companyId\n            },\n            body: requestBody,\n            mediaType: \"application/json-patch+json\",\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`\n            }\n        });\n    }\n}\n\n\nclass $a7cf1c7ca5d968a4$export$f13bf947ca742cdc {\n    constructor(config, HttpRequest = (0, $ee917fbf512b7458$export$8a3e7688f6bbb233)){\n        var _a, _b, _c, _d;\n        this.request = new HttpRequest({\n            BASE: (_a = config === null || config === void 0 ? void 0 : config.BASE) !== null && _a !== void 0 ? _a : \"https://api.cinode.com\",\n            VERSION: (_b = config === null || config === void 0 ? void 0 : config.VERSION) !== null && _b !== void 0 ? _b : \"0.1\",\n            WITH_CREDENTIALS: (_c = config === null || config === void 0 ? void 0 : config.WITH_CREDENTIALS) !== null && _c !== void 0 ? _c : false,\n            CREDENTIALS: (_d = config === null || config === void 0 ? void 0 : config.CREDENTIALS) !== null && _d !== void 0 ? _d : \"include\",\n            TOKEN: config === null || config === void 0 ? void 0 : config.TOKEN,\n            USERNAME: config === null || config === void 0 ? void 0 : config.USERNAME,\n            PASSWORD: config === null || config === void 0 ? void 0 : config.PASSWORD,\n            HEADERS: config === null || config === void 0 ? void 0 : config.HEADERS,\n            ENCODE_PATH: config === null || config === void 0 ? void 0 : config.ENCODE_PATH\n        });\n        this.absence = new (0, $4575016c0d5435dc$export$47ee1c28e3d17369)(this.request);\n        this.absences = new (0, $b3e9581dd8c923f4$export$a1746a9cd4653513)(this.request);\n        this.absenceType = new (0, $6e14e2f934ef9a63$export$eb58e95b5eb4c6b3)(this.request);\n        this.availability = new (0, $60c6475fe65917a9$export$5cc1fb0596a42f55)(this.request);\n        this.company = new (0, $fd3cc8fdfce33195$export$81a665b0338610f5)(this.request);\n        this.companyAddressUsers = new (0, $cb4eed8a20c67750$export$b278987a992e5fe0)(this.request);\n        this.companyCandidate = new (0, $d6600c8fb700265d$export$a24ee0c8bdccf707)(this.request);\n        this.companyCandidateEvent = new (0, $1cee9bb6b4f5ccf9$export$35d7f17818448f5a)(this.request);\n        this.companyCandidateEventMeeting = new (0, $c2defb76fdd81498$export$85a578801d4bad46)(this.request);\n        this.companyCandidateEventMeetings = new (0, $e3c17cd99653740a$export$71648590530fa008)(this.request);\n        this.companyCandidateEventNote = new (0, $65ba2b3c120ffe96$export$7d70a844d6105290)(this.request);\n        this.companyCandidateEventNotes = new (0, $2e27d1d8e3591f0d$export$50aec86de547e333)(this.request);\n        this.companyCandidateEvents = new (0, $ade3a7c7b94d300a$export$8c8166d5fa7c286d)(this.request);\n        this.companyCandidateEventTask = new (0, $dae375880fe67ecb$export$1ba5e78a45067ab0)(this.request);\n        this.companyCandidateEventTasks = new (0, $5d1d9c9f5bf81cd1$export$b6bc1ae3b8a6484a)(this.request);\n        this.companyCandidateFileAttachment = new (0, $d82887d3d4d2047c$export$c8ac3e0490d41de6)(this.request);\n        this.companyCandidateFileAttachments = new (0, $d78f01377092b528$export$9ef34bd472cfb16b)(this.request);\n        this.companyCandidatePipelines = new (0, $d17e8a48f009aa2a$export$8bacb692d51e8649)(this.request);\n        this.companyCandidates = new (0, $09a9673fccf54f1b$export$cccbbdbc47111182)(this.request);\n        this.companyCandidateSkills = new (0, $7c80131c69cacbaf$export$56a491cf6cf94c76)(this.request);\n        this.companyCandidateUriAttachment = new (0, $84520c2f1d04ccac$export$c0ebe0863eddd316)(this.request);\n        this.companyCandidateUriAttachments = new (0, $8b0944fe7c0156e9$export$754c0ec67f37947d)(this.request);\n        this.companyCandidateUser = new (0, $46ef91ebabd2fb77$export$a0026a5769eab5d2)(this.request);\n        this.companyCapabilities = new (0, $d0710cb3c1f0af6f$export$a0707f1d94ce819b)(this.request);\n        this.companyCurrencies = new (0, $e549cdc6fa0e029c$export$4c77df3933660a6d)(this.request);\n        this.companyCustomer = new (0, $0001afa616ed19f8$export$5e0ca4e966076353)(this.request);\n        this.companyCustomerAddress = new (0, $a3ecbdefb01f32a0$export$bf561abe2fb5dbc9)(this.request);\n        this.companyCustomerContact = new (0, $b4a12c7c04e3019d$export$d50d29cdcdbfd5ce)(this.request);\n        this.companyCustomerContacts = new (0, $17608abb1bce0893$export$17d89cd4779997d1)(this.request);\n        this.companyCustomerContactTags = new (0, $8942c4444aeaa546$export$8e4892b3101b5a56)(this.request);\n        this.companyCustomerEvent = new (0, $77bc92a2be025614$export$93ddafb9a54c0212)(this.request);\n        this.companyCustomerEvents = new (0, $4a2e1115cdc567f4$export$769c6a97a634e038)(this.request);\n        this.companyCustomerEventsMeeting = new (0, $ea8fa6069c9d802b$export$ae5ae905d4a426fe)(this.request);\n        this.companyCustomerEventsMeetings = new (0, $ea9b5a4a226714e1$export$4b9bbe00845af9de)(this.request);\n        this.companyCustomerEventsNote = new (0, $eca014fe4d43af5a$export$7b2eaf9aa467c8f1)(this.request);\n        this.companyCustomerEventsNotes = new (0, $e4cd42f2086d6178$export$ca17c8c93983bf53)(this.request);\n        this.companyCustomerEventsTask = new (0, $149959019e29653d$export$388ecb6624507af3)(this.request);\n        this.companyCustomerEventsTasks = new (0, $40a0563e4f03eaa0$export$304ef75be13d69d2)(this.request);\n        this.companyCustomerFileAttachment = new (0, $ecb795374d00207c$export$be5342b121c1e028)(this.request);\n        this.companyCustomerManagers = new (0, $2695de531d29fb37$export$82aca92cfb9ef6f2)(this.request);\n        this.companyCustomers = new (0, $b18786a7e220ad2b$export$795fb71b3bad14cb)(this.request);\n        this.companyCustomersExtended = new (0, $34b4de9a178d5736$export$c88e756d252488d4)(this.request);\n        this.companyCustomerTags = new (0, $29b79fd8fea67627$export$8b13e7a213e7af0a)(this.request);\n        this.companyImage = new (0, $881d941cdecf3074$export$c2fcdcf3abf79263)(this.request);\n        this.companyImages = new (0, $3a0acefaccd83597$export$b2018fc046463812)(this.request);\n        this.companyManagers = new (0, $8e9451ade7472c2d$export$b597a0f306b928d7)(this.request);\n        this.companyProfiles = new (0, $5c6b0344412238dd$export$59e98d4ab7ff8c7b)(this.request);\n        this.companyProjectFileAttachment = new (0, $4ec62cc557452729$export$ca2e85756a0c75ed)(this.request);\n        this.companyRecruitmentManagers = new (0, $64cc46d354208ab1$export$5713bae4e6d7d0d8)(this.request);\n        this.companyResumes = new (0, $c347c3aecdc05fba$export$8b837281bd1a79c5)(this.request);\n        this.companySubcontractorGroup = new (0, $27f36a7c5f4c2e46$export$e21518b0632c2d19)(this.request);\n        this.companySubcontractorGroupMembers = new (0, $c22f8c170e2494a5$export$809520f725c1d7d)(this.request);\n        this.companySubcontractorGroups = new (0, $3d6db815d64bff0b$export$16e5dd2cebfcc609)(this.request);\n        this.companyTag = new (0, $e3c46626fd8e503f$export$f40112f75f119675)(this.request);\n        this.companyTags = new (0, $61d852ef2ceba8ab$export$8717da62100b1773)(this.request);\n        this.companyTeam = new (0, $40a1f0180688dad8$export$271fe9a250f232c1)(this.request);\n        this.companyTeamManagers = new (0, $a197a4e499961a48$export$9b9e5c48cc2a66c0)(this.request);\n        this.companyTeamMember = new (0, $dc7c4bc61412843f$export$4d187899fd61c416)(this.request);\n        this.companyTeamMembers = new (0, $c23fd24bbc0a0e0e$export$650f3955e41dfc45)(this.request);\n        this.companyTeams = new (0, $f1e3dcafc0fb5fb6$export$162ed105dac95d0c)(this.request);\n        this.companyTeamUsers = new (0, $f35ae9f349f0552c$export$64d904ffdd8d2286)(this.request);\n        this.companyUser = new (0, $6c98ec09ddbaad8c$export$80525ec1d2c57391)(this.request);\n        this.companyUserConvert = new (0, $8baa6e21400a1890$export$83c115d3d2b0ba96)(this.request);\n        this.companyUserEmployeeEvent = new (0, $abd4429073e00654$export$8fe712f519126dc0)(this.request);\n        this.companyUserEmployeeEventMeeting = new (0, $705849b5d9fd2ac6$export$7eb65acfb6da1621)(this.request);\n        this.companyUserEmployeeEventNote = new (0, $05e898f0b67c61c6$export$eed5ea593bafe920)(this.request);\n        this.companyUserEmployeeEvents = new (0, $4d9fd314f1a9eb24$export$513b4c416c5a2a1f)(this.request);\n        this.companyUserEmployeeEventsMeetings = new (0, $f8d12e0e53657c7e$export$8c3335594a3b89d5)(this.request);\n        this.companyUserEmployeeEventsNotes = new (0, $975687e355d6d57a$export$d079520dee85fe49)(this.request);\n        this.companyUserEmployeeEventsTasks = new (0, $4e2c863184306c18$export$fc7cb0f5eda31b60)(this.request);\n        this.companyUserEmployeeEventTask = new (0, $b377f19a89018a62$export$f79a39da0c0cdc47)(this.request);\n        this.companyUserFull = new (0, $8dadda588aecf2a9$export$7909a7030858369c)(this.request);\n        this.companyUserPermissions = new (0, $6b6637f0d882f53c$export$2ac2d9437f09b025)(this.request);\n        this.companyUserProfile = new (0, $42ab983f49bd85f3$export$e57da5d4b89e8cb4)(this.request);\n        this.companyUserProfileCommitment = new (0, $fd8ede8a47a7c12c$export$889f3fe2032b14fb)(this.request);\n        this.companyUserProfileEducation = new (0, $feec720c39b9e74c$export$48be4796dd3b09b1)(this.request);\n        this.companyUserProfileEmployer = new (0, $5b3f5e6b06dbc0bc$export$5b02c7ef2755646f)(this.request);\n        this.companyUserProfileExtSkill = new (0, $2af0faff236cef1a$export$7ce3b12efbc526b1)(this.request);\n        this.companyUserProfileImport = new (0, $6147fee148667e12$export$dc03d29e832e622)(this.request);\n        this.companyUserProfileLanguage = new (0, $7b963bc815f531cc$export$56a23e645db8f13b)(this.request);\n        this.companyUserProfileLanguages = new (0, $390b7a5d59fa786c$export$de1b171f86e70e92)(this.request);\n        this.companyUserProfilePresentation = new (0, $e772eda63182ce6c$export$a461e3b362509444)(this.request);\n        this.companyUserProfileReference = new (0, $966762b6ede6d622$export$2ffcd76fc41d3871)(this.request);\n        this.companyUserProfiles = new (0, $e159ad9627288dc5$export$b38f975cd45385a6)(this.request);\n        this.companyUserProfileSkill = new (0, $80dbe41ebe853d81$export$6892c8bbf17f2028)(this.request);\n        this.companyUserProfileTraining = new (0, $d4d409dd621d056c$export$e6a275918e0d423e)(this.request);\n        this.companyUserProfileWorkExperience = new (0, $4b040a6044529229$export$6bc5afc1f2b3db96)(this.request);\n        this.companyUserResume = new (0, $e8ee3938be25e27a$export$ed4495c6a4c00add)(this.request);\n        this.companyUserResumes = new (0, $92f9143552a4da9b$export$575593bab3224c9a)(this.request);\n        this.companyUserRoles = new (0, $799beae70a3f02da$export$eb7ba955dd37b48c)(this.request);\n        this.companyUsers = new (0, $a1b0a6925d918fe6$export$d59fe8dac28bbd7d)(this.request);\n        this.companyUsersExtended = new (0, $6195bd40b274abfd$export$fc15e1837624e50a)(this.request);\n        this.companyUserSkill = new (0, $fdbfd97faf98525d$export$4a91f4807dce316a)(this.request);\n        this.companyUserSkills = new (0, $4747ca8409aff5df$export$b3422cd87055d35d)(this.request);\n        this.companyUserSubcontractor = new (0, $ce29fdd354d08284$export$a8b63a6b2f767a8e)(this.request);\n        this.companyUserSubcontractorEvent = new (0, $3d6be0078931fc71$export$d8208da4ba78c877)(this.request);\n        this.companyUserSubcontractorEventMeeting = new (0, $1cac77248feb07fd$export$a9776fd23f4cf45f)(this.request);\n        this.companyUserSubcontractorEventNote = new (0, $5ee3156aa614c071$export$e3d6d5e4a419eccf)(this.request);\n        this.companyUserSubcontractorEvents = new (0, $9cea17529d23dde2$export$ba4a80ec97b44423)(this.request);\n        this.companyUserSubcontractorEventsMeetings = new (0, $2cb077c43c1d9d6b$export$32d9f60ae7d643ac)(this.request);\n        this.companyUserSubcontractorEventsNotes = new (0, $a7515048b85e0748$export$19f26cddc1e4a43a)(this.request);\n        this.companyUserSubcontractorEventsTasks = new (0, $71ffffba2d0acd33$export$8437aa08351bc1ca)(this.request);\n        this.companyUserSubcontractorEventTask = new (0, $5c8b027c30f2d479$export$e1a185b1a211b19a)(this.request);\n        this.companyUserSubcontractorFileAttachment = new (0, $82ce7d3dc2994d12$export$a8360f1b16f063e5)(this.request);\n        this.companyUserSubcontractorFileAttachments = new (0, $e3492071c52fb25d$export$aeb133ee930745dd)(this.request);\n        this.companyUserSubcontractorRoles = new (0, $68da44a06896b66e$export$e8c407c1c8977b57)(this.request);\n        this.companyUserSubcontractors = new (0, $e7a6b4407a52c027$export$749854a6169bb696)(this.request);\n        this.companyUserTags = new (0, $3bcc2030d257e3e9$export$4700363cb7c4bf01)(this.request);\n        this.companyUserTeams = new (0, $acc648cdb4940ab6$export$d55285a3ab81e66c)(this.request);\n        this.companyWebhook = new (0, $23ed554c35e67563$export$80ea09c47452aeee)(this.request);\n        this.companyWebhooks = new (0, $f391f1e1174c3373$export$ca4decab7ef1aa1e)(this.request);\n        this.dynamicCompanyUserResume = new (0, $a3687585bec32f63$export$a639a6eecb57b3b7)(this.request);\n        this.keywordSearch = new (0, $62a69252fb91128d$export$44d608147b7bbeb0)(this.request);\n        this.mentions = new (0, $4f08b3ade738b23e$export$f04085d244fce783)(this.request);\n        this.partners = new (0, $9dc626ea9cd4ee93$export$a07979cfc4e35991)(this.request);\n        this.project = new (0, $ece88cfc520c77ad$export$9616f8c54d4f56aa)(this.request);\n        this.projectAssignment = new (0, $e191e87072b42d69$export$7b75f5c0f6c791a9)(this.request);\n        this.projectAssignmentMember = new (0, $8999668acc9425c8$export$c9c3f472996de0e2)(this.request);\n        this.projectAssignments = new (0, $a4014d689e45fbd7$export$8e97fb162fa11728)(this.request);\n        this.projectAssignmentSkills = new (0, $79e13cf0cb95dc48$export$485c8b08a67d53de)(this.request);\n        this.projectEvent = new (0, $371cf3be03e8ff00$export$16ed56dbd717d2d9)(this.request);\n        this.projectEvents = new (0, $db934b0cdde1aa12$export$65e8b30e8dcc254a)(this.request);\n        this.projectEventsMeeting = new (0, $35a803a5d6eba89e$export$c65ad44da9d76f29)(this.request);\n        this.projectEventsMeetings = new (0, $f7f8132acde7a0d9$export$4013195dfacdbeb7)(this.request);\n        this.projectEventsNote = new (0, $d801db2bb3cf98d2$export$d835b03e2b60b21)(this.request);\n        this.projectEventsNotes = new (0, $fdeed01a81b2cf75$export$79c6aaa02ca97a38)(this.request);\n        this.projectEventsTask = new (0, $c8895ed2986afd8d$export$33ad4295cf6a52fe)(this.request);\n        this.projectEventsTasks = new (0, $f574ea52df1e38b5$export$c609291b5d518816)(this.request);\n        this.projectPipelines = new (0, $776d44097ecab902$export$f05399f130d784ae)(this.request);\n        this.projectReference = new (0, $de17eba3f28dd57e$export$827284a6eda43684)(this.request);\n        this.projectReferences = new (0, $60304a0bb0097467$export$3cbf3a37fdfc52ba)(this.request);\n        this.projects = new (0, $dbc2267469cb2e51$export$52e15361974fd6ce)(this.request);\n        this.projectTags = new (0, $b93662395b76f484$export$410a03e91ff6d180)(this.request);\n        this.recruitmentSources = new (0, $ac60e3e33620c0a3$export$cce865641658a46)(this.request);\n        this.searchCompanyCandidate = new (0, $9664d4063333fd48$export$ba969c1c62975e5a)(this.request);\n        this.searchCompanyCustomerContact = new (0, $28b648b92efac93a$export$6b7396933ce279dd)(this.request);\n        this.searchCompanyCustomers = new (0, $7047f924d6f6e297$export$5bb89196b8e0fd66)(this.request);\n        this.searchCompanyUser = new (0, $3fcf2e234324b2aa$export$3a26835584e937a5)(this.request);\n        this.searchProject = new (0, $b9079a70491b4867$export$5899a0e3ac5bbdb6)(this.request);\n        this.skillSearch = new (0, $18dba795cbe4c53b$export$af76b0904c01521b)(this.request);\n        this.skillSearchTerm = new (0, $4f49e19b9639ef02$export$2b10644a1825cf13)(this.request);\n    }\n}\n\n\n\n\n\nconst $ac3dcebb7387aeb5$export$3bbbb17165d6e0ef = {\n    BASE: \"https://api.cinode.com\",\n    VERSION: \"0.1\",\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: \"include\",\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined\n};\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * NoAccess = 0\n *\n * Anonymous = 50\n *\n * Read = 100\n *\n * Subcontractor = 110\n *\n * Candidate = 115\n *\n * RestrictedCompanyUser = 150\n *\n * CompanyApiUser = 180\n *\n * CompanyUser = 200\n *\n * PartnerManager = 240\n *\n * CompanyRecruiter = 250\n *\n * TeamManager = 270\n *\n * CompanyManager = 300\n *\n * CompanyAdmin = 400\n *\n * Owner = 500\n */ var $d66cd31ed1e926fc$export$2fad4038535569b7;\n(function(AccessLevel) {\n    AccessLevel[AccessLevel[\"NoAccess\"] = 0] = \"NoAccess\";\n    AccessLevel[AccessLevel[\"Anonymous\"] = 50] = \"Anonymous\";\n    AccessLevel[AccessLevel[\"Read\"] = 100] = \"Read\";\n    AccessLevel[AccessLevel[\"Subcontractor\"] = 110] = \"Subcontractor\";\n    AccessLevel[AccessLevel[\"Candidate\"] = 115] = \"Candidate\";\n    AccessLevel[AccessLevel[\"RestrictedCompanyUser\"] = 150] = \"RestrictedCompanyUser\";\n    AccessLevel[AccessLevel[\"CompanyApiUser\"] = 180] = \"CompanyApiUser\";\n    AccessLevel[AccessLevel[\"CompanyUser\"] = 200] = \"CompanyUser\";\n    AccessLevel[AccessLevel[\"PartnerManager\"] = 240] = \"PartnerManager\";\n    AccessLevel[AccessLevel[\"CompanyRecruiter\"] = 250] = \"CompanyRecruiter\";\n    AccessLevel[AccessLevel[\"TeamManager\"] = 270] = \"TeamManager\";\n    AccessLevel[AccessLevel[\"CompanyManager\"] = 300] = \"CompanyManager\";\n    AccessLevel[AccessLevel[\"CompanyAdmin\"] = 400] = \"CompanyAdmin\";\n    AccessLevel[AccessLevel[\"Owner\"] = 500] = \"Owner\";\n})($d66cd31ed1e926fc$export$2fad4038535569b7 || ($d66cd31ed1e926fc$export$2fad4038535569b7 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * All = 1\n *\n * Created = 2\n *\n * Updated = 3\n *\n * Borttagen = 4\n */ var $217dff30a3d4ac70$export$e4a712fff93fb00f;\n(function(ActionType) {\n    ActionType[ActionType[\"All\"] = 1] = \"All\";\n    ActionType[ActionType[\"Created\"] = 2] = \"Created\";\n    ActionType[ActionType[\"Updated\"] = 3] = \"Updated\";\n    ActionType[ActionType[\"Deleted\"] = 4] = \"Deleted\";\n})($217dff30a3d4ac70$export$e4a712fff93fb00f || ($217dff30a3d4ac70$export$e4a712fff93fb00f = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Övrig = 0\n *\n * Besöksadress = 1\n *\n * Faktureringsadress = 2\n *\n * Placeringsort = 3\n */ var $1dcf91e3227adbde$export$189c6ba3eaa96ac2;\n(function(AddressType) {\n    AddressType[AddressType[\"Undefined\"] = 0] = \"Undefined\";\n    AddressType[AddressType[\"StreetAddress\"] = 1] = \"StreetAddress\";\n    AddressType[AddressType[\"InvoiceAddress\"] = 2] = \"InvoiceAddress\";\n    AddressType[AddressType[\"LocationAddress\"] = 3] = \"LocationAddress\";\n})($1dcf91e3227adbde$export$189c6ba3eaa96ac2 || ($1dcf91e3227adbde$export$189c6ba3eaa96ac2 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * File = 0\n *\n * Uri = 1\n */ var $77adec0ef4cc3564$export$86cfdc1f02eaf37a;\n(function(AttachmentType) {\n    AttachmentType[AttachmentType[\"File\"] = 0] = \"File\";\n    AttachmentType[AttachmentType[\"Uri\"] = 1] = \"Uri\";\n})($77adec0ef4cc3564$export$86cfdc1f02eaf37a || ($77adec0ef4cc3564$export$86cfdc1f02eaf37a = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Status = 3\n *\n * Email = 4\n *\n * UpdatedDateTime = 5\n */ var $c1cacdf8dfb07122$export$7561b63adb4bbd04;\n(function(CompanyCandidateQuerySort) {\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"CreatedDateTime\"] = 0] = \"CreatedDateTime\";\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"FirstName\"] = 1] = \"FirstName\";\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"LastName\"] = 2] = \"LastName\";\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"Status\"] = 3] = \"Status\";\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"Email\"] = 4] = \"Email\";\n    CompanyCandidateQuerySort[CompanyCandidateQuerySort[\"UpdatedDateTime\"] = 5] = \"UpdatedDateTime\";\n})($c1cacdf8dfb07122$export$7561b63adb4bbd04 || ($c1cacdf8dfb07122$export$7561b63adb4bbd04 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 10\n *\n * Pausad = 20\n *\n * Avböjd av kandidat = 30\n *\n * Avböjd av oss = 40\n */ var $ee1a76b9dce738ea$export$36a6a57a8e62490b;\n(function(CompanyCandidateState) {\n    CompanyCandidateState[CompanyCandidateState[\"Open\"] = 0] = \"Open\";\n    CompanyCandidateState[CompanyCandidateState[\"Won\"] = 10] = \"Won\";\n    CompanyCandidateState[CompanyCandidateState[\"Paused\"] = 20] = \"Paused\";\n    CompanyCandidateState[CompanyCandidateState[\"Lost\"] = 30] = \"Lost\";\n    CompanyCandidateState[CompanyCandidateState[\"Rejected\"] = 40] = \"Rejected\";\n})($ee1a76b9dce738ea$export$36a6a57a8e62490b || ($ee1a76b9dce738ea$export$36a6a57a8e62490b = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n *\n * CustomerId = 5\n */ var $35ced3e36f5d0f7e$export$b79c995920f3afc1;\n(function(CompanyCustomerContactQuerySort) {\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"CreatedDateTime\"] = 0] = \"CreatedDateTime\";\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"FirstName\"] = 1] = \"FirstName\";\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"LastName\"] = 2] = \"LastName\";\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"Email\"] = 3] = \"Email\";\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"UpdatedDateTime\"] = 4] = \"UpdatedDateTime\";\n    CompanyCustomerContactQuerySort[CompanyCustomerContactQuerySort[\"CustomerId\"] = 5] = \"CustomerId\";\n})($35ced3e36f5d0f7e$export$b79c995920f3afc1 || ($35ced3e36f5d0f7e$export$b79c995920f3afc1 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CreatedDateTime = 0\n *\n * Name = 1\n *\n * Description = 2\n *\n * Identification = 3\n *\n * SeoId = 4\n *\n * Status = 5\n *\n * Phone = 6\n *\n * Email = 7\n *\n * Fax = 8\n *\n * Homepage = 9\n *\n * CorporateIdentityNumber = 10\n *\n * VATNumber = 11\n *\n * Intermediator = 12\n *\n * UpdatedDateTime = 13\n *\n * LastTouchDateTime = 14\n */ var $60542ec1d49fc31b$export$14ae6a6b3ffd04a9;\n(function(CompanyCustomerQuerySort) {\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"CreatedDateTime\"] = 0] = \"CreatedDateTime\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Name\"] = 1] = \"Name\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Description\"] = 2] = \"Description\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Identification\"] = 3] = \"Identification\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"SeoId\"] = 4] = \"SeoId\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Status\"] = 5] = \"Status\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Phone\"] = 6] = \"Phone\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Email\"] = 7] = \"Email\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Fax\"] = 8] = \"Fax\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Homepage\"] = 9] = \"Homepage\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"CorporateIdentityNumber\"] = 10] = \"CorporateIdentityNumber\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"VATNumber\"] = 11] = \"VATNumber\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"Intermediator\"] = 12] = \"Intermediator\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"UpdatedDateTime\"] = 13] = \"UpdatedDateTime\";\n    CompanyCustomerQuerySort[CompanyCustomerQuerySort[\"LastTouchDateTime\"] = 14] = \"LastTouchDateTime\";\n})($60542ec1d49fc31b$export$14ae6a6b3ffd04a9 || ($60542ec1d49fc31b$export$14ae6a6b3ffd04a9 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n * 0 - Id (Default),\n * 1 - CompanyUserId,\n * 2 - CreatedDateTime,\n * 3 - UpdatedDateTime\n */ var $ce7ed8451c935d0e$export$d30e01d0901a1ce6;\n(function(CompanyProfileSort) {\n    CompanyProfileSort[CompanyProfileSort[\"Id\"] = 0] = \"Id\";\n    CompanyProfileSort[CompanyProfileSort[\"CompanyUserId\"] = 1] = \"CompanyUserId\";\n    CompanyProfileSort[CompanyProfileSort[\"CreatedWhen\"] = 2] = \"CreatedWhen\";\n    CompanyProfileSort[CompanyProfileSort[\"UpdatedWhen\"] = 3] = \"UpdatedWhen\";\n})($ce7ed8451c935d0e$export$d30e01d0901a1ce6 || ($ce7ed8451c935d0e$export$d30e01d0901a1ce6 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Egenföretagare = 0\n *\n * 2-10 = 1\n *\n * 11-50 = 2\n *\n * 51-200 = 3\n *\n * 201-500 = 4\n *\n * 501-1 000 = 5\n *\n * 1 001-5 000 = 6\n *\n * 5 001-10 000 = 7\n *\n * 10 001+ = 8\n */ var $36b00609fc1b120c$export$41cc48adf872ce3b;\n(function(CompanySize) {\n    CompanySize[CompanySize[\"A\"] = 0] = \"A\";\n    CompanySize[CompanySize[\"B\"] = 1] = \"B\";\n    CompanySize[CompanySize[\"C\"] = 2] = \"C\";\n    CompanySize[CompanySize[\"D\"] = 3] = \"D\";\n    CompanySize[CompanySize[\"E\"] = 4] = \"E\";\n    CompanySize[CompanySize[\"F\"] = 5] = \"F\";\n    CompanySize[CompanySize[\"G\"] = 6] = \"G\";\n    CompanySize[CompanySize[\"H\"] = 7] = \"H\";\n    CompanySize[CompanySize[\"I\"] = 8] = \"I\";\n})($36b00609fc1b120c$export$41cc48adf872ce3b || ($36b00609fc1b120c$export$41cc48adf872ce3b = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */ var $dbb6371482019f14$export$14ce8dcea15e7dd3;\n(function(CompanyUserCandidateStatus) {\n    CompanyUserCandidateStatus[CompanyUserCandidateStatus[\"Disconnected\"] = 0] = \"Disconnected\";\n    CompanyUserCandidateStatus[CompanyUserCandidateStatus[\"Active\"] = 1] = \"Active\";\n})($dbb6371482019f14$export$14ce8dcea15e7dd3 || ($dbb6371482019f14$export$14ce8dcea15e7dd3 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n */ var $834474c4a1ce0490$export$fb2ec0d0fb1caed1;\n(function(CompanyUserQuerySort) {\n    CompanyUserQuerySort[CompanyUserQuerySort[\"CreatedDateTime\"] = 0] = \"CreatedDateTime\";\n    CompanyUserQuerySort[CompanyUserQuerySort[\"FirstName\"] = 1] = \"FirstName\";\n    CompanyUserQuerySort[CompanyUserQuerySort[\"LastName\"] = 2] = \"LastName\";\n    CompanyUserQuerySort[CompanyUserQuerySort[\"Email\"] = 3] = \"Email\";\n    CompanyUserQuerySort[CompanyUserQuerySort[\"UpdatedDateTime\"] = 4] = \"UpdatedDateTime\";\n})($834474c4a1ce0490$export$fb2ec0d0fb1caed1 || ($834474c4a1ce0490$export$fb2ec0d0fb1caed1 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Frånkopplad = 0\n *\n * Kommande = 2\n *\n * Aktiv = 3\n */ var $e155d8b2f173ff97$export$78ece8b332d00629;\n(function(CompanyUserStatus) {\n    CompanyUserStatus[CompanyUserStatus[\"Disconnected\"] = 0] = \"Disconnected\";\n    CompanyUserStatus[CompanyUserStatus[\"PreActive\"] = 2] = \"PreActive\";\n    CompanyUserStatus[CompanyUserStatus[\"Active\"] = 3] = \"Active\";\n})($e155d8b2f173ff97$export$78ece8b332d00629 || ($e155d8b2f173ff97$export$78ece8b332d00629 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */ var $61f3e2fa4b82d916$export$83981b6138d1ec0d;\n(function(CompanyUserSubcontractorStatus) {\n    CompanyUserSubcontractorStatus[CompanyUserSubcontractorStatus[\"Disconnected\"] = 0] = \"Disconnected\";\n    CompanyUserSubcontractorStatus[CompanyUserSubcontractorStatus[\"Active\"] = 1] = \"Active\";\n})($61f3e2fa4b82d916$export$83981b6138d1ec0d || ($61f3e2fa4b82d916$export$83981b6138d1ec0d = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Medarbetare = 0\n *\n * Kandidat = 10\n *\n * Underkonsult = 20\n *\n * Api = 30\n *\n * Bot = 40\n */ var $599b97a53ef2ad12$export$7e1e40db963a5766;\n(function(CompanyUserType) {\n    CompanyUserType[CompanyUserType[\"Employee\"] = 0] = \"Employee\";\n    CompanyUserType[CompanyUserType[\"Candidate\"] = 10] = \"Candidate\";\n    CompanyUserType[CompanyUserType[\"Subcontractor\"] = 20] = \"Subcontractor\";\n    CompanyUserType[CompanyUserType[\"Api\"] = 30] = \"Api\";\n    CompanyUserType[CompanyUserType[\"Bot\"] = 40] = \"Bot\";\n})($599b97a53ef2ad12$export$7e1e40db963a5766 || ($599b97a53ef2ad12$export$7e1e40db963a5766 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Timpris = 0\n *\n * Fastpris = 1\n */ var $7809228b23a78895$export$ac0154f53c770f12;\n(function(ContractType) {\n    ContractType[ContractType[\"Hourly\"] = 0] = \"Hourly\";\n    ContractType[ContractType[\"Fixed\"] = 1] = \"Fixed\";\n})($7809228b23a78895$export$ac0154f53c770f12 || ($7809228b23a78895$export$ac0154f53c770f12 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */ var $3c36f7581763a93c$export$b5d90d58758173e6;\n(function(EventNoteType) {\n    EventNoteType[EventNoteType[\"NotSpecified\"] = 0] = \"NotSpecified\";\n    EventNoteType[EventNoteType[\"Phone\"] = 1] = \"Phone\";\n    EventNoteType[EventNoteType[\"Email\"] = 2] = \"Email\";\n})($3c36f7581763a93c$export$b5d90d58758173e6 || ($3c36f7581763a93c$export$b5d90d58758173e6 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Inte påbörjad = 0\n *\n * Påbörjad = 1\n *\n * Färdig = 2\n *\n * Uppskjuten = 3\n *\n * Väntar = 4\n */ var $89f607e80f4600fe$export$c5f296066cb6a74d;\n(function(EventStatusValue) {\n    EventStatusValue[EventStatusValue[\"NotStarted\"] = 0] = \"NotStarted\";\n    EventStatusValue[EventStatusValue[\"InProgress\"] = 1] = \"InProgress\";\n    EventStatusValue[EventStatusValue[\"Completed\"] = 2] = \"Completed\";\n    EventStatusValue[EventStatusValue[\"Deferred\"] = 3] = \"Deferred\";\n    EventStatusValue[EventStatusValue[\"WaitingForSomeoneElse\"] = 4] = \"WaitingForSomeoneElse\";\n})($89f607e80f4600fe$export$c5f296066cb6a74d || ($89f607e80f4600fe$export$c5f296066cb6a74d = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */ var $70df5f40f8964230$export$fd3fb5071359f87c;\n(function(EventTaskType) {\n    EventTaskType[EventTaskType[\"NotSpecified\"] = 0] = \"NotSpecified\";\n    EventTaskType[EventTaskType[\"Phone\"] = 1] = \"Phone\";\n    EventTaskType[EventTaskType[\"Email\"] = 2] = \"Email\";\n})($70df5f40f8964230$export$fd3fb5071359f87c || ($70df5f40f8964230$export$fd3fb5071359f87c = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Möte = 0\n *\n * Notering = 1\n *\n * Uppgift = 2\n *\n * Samtal = 3\n */ var $95c3f16aa49f3d77$export$3d7865934588d77e;\n(function(EventType) {\n    EventType[EventType[\"Meeting\"] = 0] = \"Meeting\";\n    EventType[EventType[\"Note\"] = 1] = \"Note\";\n    EventType[EventType[\"Task\"] = 2] = \"Task\";\n    EventType[EventType[\"Call\"] = 3] = \"Call\";\n})($95c3f16aa49f3d77$export$3d7865934588d77e || ($95c3f16aa49f3d77$export$3d7865934588d77e = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Publik = 0\n *\n * Privat = 1\n */ var $8facf9cb7c53c26b$export$361dc17531b2403c;\n(function(EventVisibility) {\n    EventVisibility[EventVisibility[\"Public\"] = 0] = \"Public\";\n    EventVisibility[EventVisibility[\"Private\"] = 1] = \"Private\";\n})($8facf9cb7c53c26b$export$361dc17531b2403c || ($8facf9cb7c53c26b$export$361dc17531b2403c = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */ var $bfd1061e657fe337$export$a4f3dfa6f1416c0f;\n(function(ExtentType) {\n    ExtentType[ExtentType[\"Percent\"] = 0] = \"Percent\";\n    ExtentType[ExtentType[\"Hours\"] = 1] = \"Hours\";\n})($bfd1061e657fe337$export$a4f3dfa6f1416c0f || ($bfd1061e657fe337$export$a4f3dfa6f1416c0f = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Original = 0\n *\n * H40W40 = 1\n *\n * H100W100 = 2\n *\n * H200W200 = 3\n *\n * H300W300 = 4\n *\n * W100 = 5\n *\n * H60 = 6\n *\n * H100 = 7\n *\n * H40 = 8\n *\n * W340 = 9\n *\n * W1800 = 10\n *\n * H750W1800 = 11\n *\n * H250 = 12\n *\n * H400W400 = 13\n *\n * W150 = 14\n *\n * W1200 = 15\n */ var $573aadcc9216972b$export$28064ee355a535f2;\n(function(ImageSize) {\n    ImageSize[ImageSize[\"Original\"] = 0] = \"Original\";\n    ImageSize[ImageSize[\"H40W40\"] = 1] = \"H40W40\";\n    ImageSize[ImageSize[\"H100W100\"] = 2] = \"H100W100\";\n    ImageSize[ImageSize[\"H200W200\"] = 3] = \"H200W200\";\n    ImageSize[ImageSize[\"H300W300\"] = 4] = \"H300W300\";\n    ImageSize[ImageSize[\"W100\"] = 5] = \"W100\";\n    ImageSize[ImageSize[\"H60\"] = 6] = \"H60\";\n    ImageSize[ImageSize[\"H100\"] = 7] = \"H100\";\n    ImageSize[ImageSize[\"H40\"] = 8] = \"H40\";\n    ImageSize[ImageSize[\"W340\"] = 9] = \"W340\";\n    ImageSize[ImageSize[\"W1800\"] = 10] = \"W1800\";\n    ImageSize[ImageSize[\"H750W1800\"] = 11] = \"H750W1800\";\n    ImageSize[ImageSize[\"H250\"] = 12] = \"H250\";\n    ImageSize[ImageSize[\"H400W400\"] = 13] = \"H400W400\";\n    ImageSize[ImageSize[\"W150\"] = 14] = \"W150\";\n    ImageSize[ImageSize[\"W1200\"] = 15] = \"W1200\";\n})($573aadcc9216972b$export$28064ee355a535f2 || ($573aadcc9216972b$export$28064ee355a535f2 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Okategoriserad = 0\n *\n * Branscher = 1\n *\n * Roller = 2\n *\n * Verktyg = 3\n *\n * Tekniker = 4\n *\n * Metoder och processer = 5\n *\n * Plattformar = 6\n *\n * Produkter och tjänster = 7\n *\n * Certifieringar = 10\n *\n * Material = 11\n *\n * Specifikationer och förordningar = 12\n *\n * Hårdvara = 13\n *\n * Verksamhet och funktion = 14\n *\n * Byggnationer = 15\n *\n * Rapporter och utredningar = 16\n *\n * Specialiteter - Medicin = 17\n *\n * Standarder och regelverk = 18\n *\n * Behörigheter = 19\n *\n * Mjuka färdigheter = 20\n *\n * CustomName = 100\n */ var $5223e238c10cf16f$export$7ae96d120743514d;\n(function(KeywordType) {\n    KeywordType[KeywordType[\"Uncategorized\"] = 0] = \"Uncategorized\";\n    KeywordType[KeywordType[\"Industries\"] = 1] = \"Industries\";\n    KeywordType[KeywordType[\"Roles\"] = 2] = \"Roles\";\n    KeywordType[KeywordType[\"Tools\"] = 3] = \"Tools\";\n    KeywordType[KeywordType[\"Techniques\"] = 4] = \"Techniques\";\n    KeywordType[KeywordType[\"MethodsProcesses\"] = 5] = \"MethodsProcesses\";\n    KeywordType[KeywordType[\"Platforms\"] = 6] = \"Platforms\";\n    KeywordType[KeywordType[\"Products\"] = 7] = \"Products\";\n    KeywordType[KeywordType[\"Certifications\"] = 10] = \"Certifications\";\n    KeywordType[KeywordType[\"Materials\"] = 11] = \"Materials\";\n    KeywordType[KeywordType[\"SpecificationsRegulations\"] = 12] = \"SpecificationsRegulations\";\n    KeywordType[KeywordType[\"Hardware\"] = 13] = \"Hardware\";\n    KeywordType[KeywordType[\"OperationalAreaAndFunction\"] = 14] = \"OperationalAreaAndFunction\";\n    KeywordType[KeywordType[\"Construction\"] = 15] = \"Construction\";\n    KeywordType[KeywordType[\"ReportsInvestigations\"] = 16] = \"ReportsInvestigations\";\n    KeywordType[KeywordType[\"SpecialitiesMedicine\"] = 17] = \"SpecialitiesMedicine\";\n    KeywordType[KeywordType[\"StandardsRegulations\"] = 18] = \"StandardsRegulations\";\n    KeywordType[KeywordType[\"Accreditation\"] = 19] = \"Accreditation\";\n    KeywordType[KeywordType[\"SoftSkills\"] = 20] = \"SoftSkills\";\n    KeywordType[KeywordType[\"CustomName\"] = 100] = \"CustomName\";\n})($5223e238c10cf16f$export$7ae96d120743514d || ($5223e238c10cf16f$export$7ae96d120743514d = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Enstaka ord och fraser = 0\n *\n * Grundläggande kunskaper = 1\n *\n * Goda kunskaper = 2\n *\n * Flytande = 3\n *\n * Modersmål = 4\n */ var $608da7722e8325e5$export$66b4c7ccfd8c5e33;\n(function(LanguageLevel) {\n    LanguageLevel[LanguageLevel[\"Level0\"] = 0] = \"Level0\";\n    LanguageLevel[LanguageLevel[\"Level1\"] = 1] = \"Level1\";\n    LanguageLevel[LanguageLevel[\"Level2\"] = 2] = \"Level2\";\n    LanguageLevel[LanguageLevel[\"Level3\"] = 3] = \"Level3\";\n    LanguageLevel[LanguageLevel[\"Level4\"] = 4] = \"Level4\";\n})($608da7722e8325e5$export$66b4c7ccfd8c5e33 || ($608da7722e8325e5$export$66b4c7ccfd8c5e33 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * InProgress = 0\n *\n * Completed = 1\n *\n * Failed = 2\n */ var $04a1d7a72b83cd0d$export$b69ffd3be5b6ff5c;\n(function(LongRunningStatus) {\n    LongRunningStatus[LongRunningStatus[\"InProgress\"] = 0] = \"InProgress\";\n    LongRunningStatus[LongRunningStatus[\"Completed\"] = 1] = \"Completed\";\n    LongRunningStatus[LongRunningStatus[\"Failed\"] = 2] = \"Failed\";\n})($04a1d7a72b83cd0d$export$b69ffd3be5b6ff5c || ($04a1d7a72b83cd0d$export$b69ffd3be5b6ff5c = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CompanyUserResume = 1\n *\n * Customers = 2\n *\n * Assignments = 3\n *\n * Partners = 4\n *\n * Offers = 5\n *\n * Reports = 6\n *\n * Recruitment = 8\n *\n * Absence = 9\n *\n * Api = 10\n *\n * ReferenceText = 11\n *\n * ProfileCompleteness = 12\n *\n * CalendarSync = 13\n *\n * AllowWidgetModification = 14\n *\n * ConfiguredFilters = 19\n *\n * SkillSets = 20\n *\n * ProfileUpdateReminders = 21\n *\n * OverdueProjectReminders = 22\n *\n * EmailSync = 23\n *\n * ApplicationRegistration = 30\n *\n * ApplicationDirectory = 31\n *\n * NextGenResume = 40\n *\n * HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41\n *\n * ImportCv = 42\n *\n * AI = 43\n *\n * AITextGeneration = 44\n *\n * ProjectPlanning = 48\n *\n * ExternalAccounts = 50\n *\n * ConvertAccount = 51\n *\n * UserProvisioning = 52\n *\n * Webhooks = 60\n *\n * GrowthPlan = 70\n *\n * GUIShowcase = 80\n *\n * Appmixer = 90\n *\n * Intercom = 600\n */ var $ae34271c237d1a11$export$6a8195ee8dd1cc03;\n(function(ModuleType) {\n    ModuleType[ModuleType[\"CompanyUserResume\"] = 1] = \"CompanyUserResume\";\n    ModuleType[ModuleType[\"Customers\"] = 2] = \"Customers\";\n    ModuleType[ModuleType[\"Assignments\"] = 3] = \"Assignments\";\n    ModuleType[ModuleType[\"Partners\"] = 4] = \"Partners\";\n    ModuleType[ModuleType[\"Offers\"] = 5] = \"Offers\";\n    ModuleType[ModuleType[\"Reports\"] = 6] = \"Reports\";\n    ModuleType[ModuleType[\"Recruitment\"] = 8] = \"Recruitment\";\n    ModuleType[ModuleType[\"Absence\"] = 9] = \"Absence\";\n    ModuleType[ModuleType[\"Api\"] = 10] = \"Api\";\n    ModuleType[ModuleType[\"ReferenceText\"] = 11] = \"ReferenceText\";\n    ModuleType[ModuleType[\"ProfileCompleteness\"] = 12] = \"ProfileCompleteness\";\n    ModuleType[ModuleType[\"CalendarSync\"] = 13] = \"CalendarSync\";\n    ModuleType[ModuleType[\"AllowWidgetModification\"] = 14] = \"AllowWidgetModification\";\n    ModuleType[ModuleType[\"ConfiguredFilters\"] = 19] = \"ConfiguredFilters\";\n    ModuleType[ModuleType[\"SkillSets\"] = 20] = \"SkillSets\";\n    ModuleType[ModuleType[\"ProfileUpdateReminders\"] = 21] = \"ProfileUpdateReminders\";\n    ModuleType[ModuleType[\"OverdueProjectReminders\"] = 22] = \"OverdueProjectReminders\";\n    ModuleType[ModuleType[\"EmailSync\"] = 23] = \"EmailSync\";\n    ModuleType[ModuleType[\"ApplicationRegistration\"] = 30] = \"ApplicationRegistration\";\n    ModuleType[ModuleType[\"ApplicationDirectory\"] = 31] = \"ApplicationDirectory\";\n    ModuleType[ModuleType[\"NextGenResume\"] = 40] = \"NextGenResume\";\n    ModuleType[ModuleType[\"HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips\"] = 41] = \"HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips\";\n    ModuleType[ModuleType[\"ImportCv\"] = 42] = \"ImportCv\";\n    ModuleType[ModuleType[\"AI\"] = 43] = \"AI\";\n    ModuleType[ModuleType[\"AITextGeneration\"] = 44] = \"AITextGeneration\";\n    ModuleType[ModuleType[\"ProjectPlanning\"] = 48] = \"ProjectPlanning\";\n    ModuleType[ModuleType[\"ExternalAccounts\"] = 50] = \"ExternalAccounts\";\n    ModuleType[ModuleType[\"ConvertAccount\"] = 51] = \"ConvertAccount\";\n    ModuleType[ModuleType[\"UserProvisioning\"] = 52] = \"UserProvisioning\";\n    ModuleType[ModuleType[\"Webhooks\"] = 60] = \"Webhooks\";\n    ModuleType[ModuleType[\"GrowthPlan\"] = 70] = \"GrowthPlan\";\n    ModuleType[ModuleType[\"GUIShowcase\"] = 80] = \"GUIShowcase\";\n    ModuleType[ModuleType[\"Appmixer\"] = 90] = \"Appmixer\";\n    ModuleType[ModuleType[\"Intercom\"] = 600] = \"Intercom\";\n})($ae34271c237d1a11$export$6a8195ee8dd1cc03 || ($ae34271c237d1a11$export$6a8195ee8dd1cc03 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Anonymiserat = 10\n *\n * Transparent = 20\n *\n * Avisera = 30\n *\n * Boka = 40\n *\n * Matcha = 50\n *\n * Tillgänglighet = 60\n *\n * UserCv = 70\n */ var $62a269496296dc0d$export$3090b6058eade22a;\n(function(PartnerConnectionTrustType) {\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserViewAnonymous\"] = 10] = \"UserViewAnonymous\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserViewTransparent\"] = 20] = \"UserViewTransparent\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserAssignRequest\"] = 30] = \"UserAssignRequest\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserAssignBook\"] = 40] = \"UserAssignBook\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserSkillMatch\"] = 50] = \"UserSkillMatch\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserAvailability\"] = 60] = \"UserAvailability\";\n    PartnerConnectionTrustType[PartnerConnectionTrustType[\"UserCv\"] = 70] = \"UserCv\";\n})($62a269496296dc0d$export$3090b6058eade22a || ($62a269496296dc0d$export$3090b6058eade22a = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * WkHtmlToPdf = 0\n *\n * Puppeteer = 2\n */ var $27500fe556e27806$export$700ba33f355b1bcf;\n(function(PdfEngineType) {\n    PdfEngineType[PdfEngineType[\"WkHtmlToPdf\"] = 0] = \"WkHtmlToPdf\";\n    PdfEngineType[PdfEngineType[\"Puppeteer\"] = 2] = \"Puppeteer\";\n})($27500fe556e27806$export$700ba33f355b1bcf || ($27500fe556e27806$export$700ba33f355b1bcf = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Portrait = 0\n *\n * Landscape = 1\n */ var $d1da0387b90cbcde$export$4e525e4bebe39709;\n(function(PdfOrientation) {\n    PdfOrientation[PdfOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    PdfOrientation[PdfOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})($d1da0387b90cbcde$export$4e525e4bebe39709 || ($d1da0387b90cbcde$export$4e525e4bebe39709 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Ej bokad = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n */ var $4b6bfb55ff2a59d4$export$e2c6d619fe74c7ec;\n(function(ProjectAssignmentAllocationStatus) {\n    ProjectAssignmentAllocationStatus[ProjectAssignmentAllocationStatus[\"NotBooked\"] = 0] = \"NotBooked\";\n    ProjectAssignmentAllocationStatus[ProjectAssignmentAllocationStatus[\"Preliminary\"] = 1] = \"Preliminary\";\n    ProjectAssignmentAllocationStatus[ProjectAssignmentAllocationStatus[\"Assigned\"] = 2] = \"Assigned\";\n})($4b6bfb55ff2a59d4$export$e2c6d619fe74c7ec || ($4b6bfb55ff2a59d4$export$e2c6d619fe74c7ec = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */ var $c885cf5746f00e5d$export$14d394e96f15e153;\n(function(ProjectAssignmentExtentType) {\n    ProjectAssignmentExtentType[ProjectAssignmentExtentType[\"Percent\"] = 0] = \"Percent\";\n    ProjectAssignmentExtentType[ProjectAssignmentExtentType[\"Hours\"] = 1] = \"Hours\";\n})($c885cf5746f00e5d$export$14d394e96f15e153 || ($c885cf5746f00e5d$export$14d394e96f15e153 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * None = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n *\n * Offererad = 3\n */ var $ef7cd373a21cada1$export$932fbbc5915a0ec0;\n(function(ProjectAssignmentMemberAllocationStatus) {\n    ProjectAssignmentMemberAllocationStatus[ProjectAssignmentMemberAllocationStatus[\"None\"] = 0] = \"None\";\n    ProjectAssignmentMemberAllocationStatus[ProjectAssignmentMemberAllocationStatus[\"Preliminary\"] = 1] = \"Preliminary\";\n    ProjectAssignmentMemberAllocationStatus[ProjectAssignmentMemberAllocationStatus[\"Assigned\"] = 2] = \"Assigned\";\n    ProjectAssignmentMemberAllocationStatus[ProjectAssignmentMemberAllocationStatus[\"Offered\"] = 3] = \"Offered\";\n})($ef7cd373a21cada1$export$932fbbc5915a0ec0 || ($ef7cd373a21cada1$export$932fbbc5915a0ec0 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Tillagd = 0\n *\n * Offererad = 10\n *\n * Avböjd av kund = 20\n *\n * Avböjd av oss = 30\n *\n * Pausad = 40\n */ var $91651db947a5d6ed$export$b60025ff86d1f1a;\n(function(ProjectAssignmentMemberState) {\n    ProjectAssignmentMemberState[ProjectAssignmentMemberState[\"Allocated\"] = 0] = \"Allocated\";\n    ProjectAssignmentMemberState[ProjectAssignmentMemberState[\"Offered\"] = 10] = \"Offered\";\n    ProjectAssignmentMemberState[ProjectAssignmentMemberState[\"Rejected\"] = 20] = \"Rejected\";\n    ProjectAssignmentMemberState[ProjectAssignmentMemberState[\"Revoked\"] = 30] = \"Revoked\";\n    ProjectAssignmentMemberState[ProjectAssignmentMemberState[\"Deferred\"] = 40] = \"Deferred\";\n})($91651db947a5d6ed$export$b60025ff86d1f1a || ($91651db947a5d6ed$export$b60025ff86d1f1a = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Unspecified = 0\n *\n * Medarbetare = 1\n *\n * Partnerkonsult = 2\n *\n * Underkonsult = 3\n */ var $f0e6eb10d9ff0f96$export$3a87eafcf6b09bc8;\n(function(ProjectAssignmentMemberType) {\n    ProjectAssignmentMemberType[ProjectAssignmentMemberType[\"Unspecified\"] = 0] = \"Unspecified\";\n    ProjectAssignmentMemberType[ProjectAssignmentMemberType[\"CompanyUser\"] = 1] = \"CompanyUser\";\n    ProjectAssignmentMemberType[ProjectAssignmentMemberType[\"PartnerCompanyUser\"] = 2] = \"PartnerCompanyUser\";\n    ProjectAssignmentMemberType[ProjectAssignmentMemberType[\"CompanyUserSubcontractor\"] = 3] = \"CompanyUserSubcontractor\";\n})($f0e6eb10d9ff0f96$export$3a87eafcf6b09bc8 || ($f0e6eb10d9ff0f96$export$3a87eafcf6b09bc8 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Öppen = 0\n *\n * Återkallad = 10\n *\n * Stängd = 20\n */ var $8c29d54674657bc2$export$b69cb4a58a0dc6b;\n(function(ProjectAssignmentRequestStatus) {\n    ProjectAssignmentRequestStatus[ProjectAssignmentRequestStatus[\"Open\"] = 0] = \"Open\";\n    ProjectAssignmentRequestStatus[ProjectAssignmentRequestStatus[\"Revoked\"] = 10] = \"Revoked\";\n    ProjectAssignmentRequestStatus[ProjectAssignmentRequestStatus[\"Closed\"] = 20] = \"Closed\";\n})($8c29d54674657bc2$export$b69cb4a58a0dc6b || ($8c29d54674657bc2$export$b69cb4a58a0dc6b = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Inga datum valda = 0\n *\n * Kommande = 1\n *\n * Pågående = 2\n *\n * Avslutat = 3\n */ var $62f23f0f1fde7b23$export$4998eb9f99843070;\n(function(ProjectAssignmentStatus) {\n    ProjectAssignmentStatus[ProjectAssignmentStatus[\"Unspecified\"] = 0] = \"Unspecified\";\n    ProjectAssignmentStatus[ProjectAssignmentStatus[\"Coming\"] = 1] = \"Coming\";\n    ProjectAssignmentStatus[ProjectAssignmentStatus[\"Ongoing\"] = 2] = \"Ongoing\";\n    ProjectAssignmentStatus[ProjectAssignmentStatus[\"Ended\"] = 3] = \"Ended\";\n})($62f23f0f1fde7b23$export$4998eb9f99843070 || ($62f23f0f1fde7b23$export$4998eb9f99843070 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Låg = 3\n *\n * Medel = 5\n *\n * Hög = 8\n */ var $f5ea8b4ea6677b00$export$6e27aaf4b7580e65;\n(function(ProjectPriority) {\n    ProjectPriority[ProjectPriority[\"Low\"] = 3] = \"Low\";\n    ProjectPriority[ProjectPriority[\"Medium\"] = 5] = \"Medium\";\n    ProjectPriority[ProjectPriority[\"High\"] = 8] = \"High\";\n})($f5ea8b4ea6677b00$export$6e27aaf4b7580e65 || ($f5ea8b4ea6677b00$export$6e27aaf4b7580e65 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * CreatedDateTime = 0\n *\n * Title = 1\n *\n * Identifier = 2\n *\n * CustomerIdentifier = 3\n *\n * SeoId = 4\n *\n * UpdatedDateTime = 5\n *\n * LastTouchDateTime = 6\n */ var $6cc2b912da2339a1$export$51868fa3a5f5dc72;\n(function(ProjectQuerySort) {\n    ProjectQuerySort[ProjectQuerySort[\"CreatedDateTime\"] = 0] = \"CreatedDateTime\";\n    ProjectQuerySort[ProjectQuerySort[\"Title\"] = 1] = \"Title\";\n    ProjectQuerySort[ProjectQuerySort[\"Identifier\"] = 2] = \"Identifier\";\n    ProjectQuerySort[ProjectQuerySort[\"CustomerIdentifier\"] = 3] = \"CustomerIdentifier\";\n    ProjectQuerySort[ProjectQuerySort[\"SeoId\"] = 4] = \"SeoId\";\n    ProjectQuerySort[ProjectQuerySort[\"UpdatedDateTime\"] = 5] = \"UpdatedDateTime\";\n    ProjectQuerySort[ProjectQuerySort[\"LastTouchDateTime\"] = 6] = \"LastTouchDateTime\";\n})($6cc2b912da2339a1$export$51868fa3a5f5dc72 || ($6cc2b912da2339a1$export$51868fa3a5f5dc72 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 30\n *\n * Förlorad = 40\n *\n * Avböjd = 50\n *\n * Uppskjuten = 60\n */ var $bcc35e41389c3a92$export$7082239a62c0df57;\n(function(ProjectState) {\n    ProjectState[ProjectState[\"Open\"] = 0] = \"Open\";\n    ProjectState[ProjectState[\"Won\"] = 30] = \"Won\";\n    ProjectState[ProjectState[\"Lost\"] = 40] = \"Lost\";\n    ProjectState[ProjectState[\"Abandoned\"] = 50] = \"Abandoned\";\n    ProjectState[ProjectState[\"Suspended\"] = 60] = \"Suspended\";\n})($bcc35e41389c3a92$export$7082239a62c0df57 || ($bcc35e41389c3a92$export$7082239a62c0df57 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * AllResumesOfLanguage = 3\n *\n * Profile = 5\n */ var $37b76b0c7545da63$export$5e40e54564bab075;\n(function(SaveToApiOption) {\n    SaveToApiOption[SaveToApiOption[\"AllResumesOfLanguage\"] = 3] = \"AllResumesOfLanguage\";\n    SaveToApiOption[SaveToApiOption[\"Profile\"] = 5] = \"Profile\";\n})($37b76b0c7545da63$export$5e40e54564bab075 || ($37b76b0c7545da63$export$5e40e54564bab075 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n * 0 - Ascending,\n * 1 - Descending\n */ var $3a5c069d91064eca$export$7ae723045d45777a;\n(function(SortOrder) {\n    SortOrder[SortOrder[\"Ascending\"] = 0] = \"Ascending\";\n    SortOrder[SortOrder[\"Descending\"] = 1] = \"Descending\";\n})($3a5c069d91064eca$export$7ae723045d45777a || ($3a5c069d91064eca$export$7ae723045d45777a = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Inaktiv = 0\n *\n * Aktiv = 1\n */ var $8b0e062cfeef76a3$export$96e9906d6d93a972;\n(function(Status) {\n    Status[Status[\"Inactive\"] = 0] = \"Inactive\";\n    Status[Status[\"Active\"] = 1] = \"Active\";\n})($8b0e062cfeef76a3$export$96e9906d6d93a972 || ($8b0e062cfeef76a3$export$96e9906d6d93a972 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Contains = 0\n *\n * StartsWith = 1\n *\n * EndsWith = 2\n *\n * Equals = 3\n */ var $0b21466567af591c$export$efb204e93138f2d8;\n(function(StringComparisonOperator) {\n    StringComparisonOperator[StringComparisonOperator[\"Contains\"] = 0] = \"Contains\";\n    StringComparisonOperator[StringComparisonOperator[\"StartsWith\"] = 1] = \"StartsWith\";\n    StringComparisonOperator[StringComparisonOperator[\"EndsWith\"] = 2] = \"EndsWith\";\n    StringComparisonOperator[StringComparisonOperator[\"Equals\"] = 3] = \"Equals\";\n})($0b21466567af591c$export$efb204e93138f2d8 || ($0b21466567af591c$export$efb204e93138f2d8 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * None = 0\n *\n * Primary = 1\n *\n * Classic = 2\n *\n * Dynamic = 3\n *\n * PageFlow = 4\n *\n * BlockWorkExperience = 50\n *\n * BlockSkillsByLevel = 51\n *\n * CinodePremium3PageFlow = 70\n *\n * CinodePremium2PageFlow = 71\n *\n * TemplateType = 100\n */ var $aee9211db155cd1c$export$7593c8ee4e312d71;\n(function(TemplateAssetType) {\n    TemplateAssetType[TemplateAssetType[\"None\"] = 0] = \"None\";\n    TemplateAssetType[TemplateAssetType[\"Primary\"] = 1] = \"Primary\";\n    TemplateAssetType[TemplateAssetType[\"Classic\"] = 2] = \"Classic\";\n    TemplateAssetType[TemplateAssetType[\"Dynamic\"] = 3] = \"Dynamic\";\n    TemplateAssetType[TemplateAssetType[\"PageFlow\"] = 4] = \"PageFlow\";\n    TemplateAssetType[TemplateAssetType[\"BlockWorkExperience\"] = 50] = \"BlockWorkExperience\";\n    TemplateAssetType[TemplateAssetType[\"BlockSkillsByLevel\"] = 51] = \"BlockSkillsByLevel\";\n    TemplateAssetType[TemplateAssetType[\"CinodePremium3PageFlow\"] = 70] = \"CinodePremium3PageFlow\";\n    TemplateAssetType[TemplateAssetType[\"CinodePremium2PageFlow\"] = 71] = \"CinodePremium2PageFlow\";\n    TemplateAssetType[TemplateAssetType[\"TemplateType\"] = 100] = \"TemplateType\";\n})($aee9211db155cd1c$export$7593c8ee4e312d71 || ($aee9211db155cd1c$export$7593c8ee4e312d71 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Kurs = 0\n *\n * Certifiering = 1\n */ var $0b442e42150884bf$export$b0710aa41382622d;\n(function(TrainingType) {\n    TrainingType[TrainingType[\"Course\"] = 0] = \"Course\";\n    TrainingType[TrainingType[\"Certification\"] = 1] = \"Certification\";\n})($0b442e42150884bf$export$b0710aa41382622d || ($0b442e42150884bf$export$b0710aa41382622d = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * Ej angiven = 0\n *\n * Man = 1\n *\n * Kvinna = 2\n */ var $0871c506605f94fe$export$c078b135ab9633b9;\n(function(UserGender) {\n    UserGender[UserGender[\"Other\"] = 0] = \"Other\";\n    UserGender[UserGender[\"Male\"] = 1] = \"Male\";\n    UserGender[UserGender[\"Female\"] = 2] = \"Female\";\n})($0871c506605f94fe$export$c078b135ab9633b9 || ($0871c506605f94fe$export$c078b135ab9633b9 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * All = 1\n *\n * CompanyCandidate = 2\n *\n * CompanyEmployee = 3\n *\n * CompanySubcontractor = 4\n *\n * CompanyCustomer = 5\n *\n * CompanyProject = 6\n *\n * Role = 7\n *\n * PublicAnnouncement = 8\n *\n * Absence = 9\n *\n * CompanyCustomerContact = 10\n */ var $de4b528bb8d2e6f1$export$f350ca2a822d34f7;\n(function(WebhookEntityType) {\n    WebhookEntityType[WebhookEntityType[\"All\"] = 1] = \"All\";\n    WebhookEntityType[WebhookEntityType[\"CompanyCandidate\"] = 2] = \"CompanyCandidate\";\n    WebhookEntityType[WebhookEntityType[\"CompanyEmployee\"] = 3] = \"CompanyEmployee\";\n    WebhookEntityType[WebhookEntityType[\"CompanySubcontractor\"] = 4] = \"CompanySubcontractor\";\n    WebhookEntityType[WebhookEntityType[\"CompanyCustomer\"] = 5] = \"CompanyCustomer\";\n    WebhookEntityType[WebhookEntityType[\"CompanyProject\"] = 6] = \"CompanyProject\";\n    WebhookEntityType[WebhookEntityType[\"Role\"] = 7] = \"Role\";\n    WebhookEntityType[WebhookEntityType[\"PublicAnnouncement\"] = 8] = \"PublicAnnouncement\";\n    WebhookEntityType[WebhookEntityType[\"Absence\"] = 9] = \"Absence\";\n    WebhookEntityType[WebhookEntityType[\"CompanyCustomerContact\"] = 10] = \"CompanyCustomerContact\";\n})($de4b528bb8d2e6f1$export$f350ca2a822d34f7 || ($de4b528bb8d2e6f1$export$f350ca2a822d34f7 = {}));\n\n\n/* generated using openapi-typescript-codegen -- do no edit */ /* istanbul ignore file */ /* tslint:disable */ /* eslint-disable */ /**\n *\n *\n * None = 0\n *\n * GroupDocs = 1\n *\n * Aspose = 2\n */ var $9cb5610b88418148$export$e81b5809efab3b7;\n(function(WordEngineType) {\n    WordEngineType[WordEngineType[\"None\"] = 0] = \"None\";\n    WordEngineType[WordEngineType[\"GroupDocs\"] = 1] = \"GroupDocs\";\n    WordEngineType[WordEngineType[\"Aspose\"] = 2] = \"Aspose\";\n})($9cb5610b88418148$export$e81b5809efab3b7 || ($9cb5610b88418148$export$e81b5809efab3b7 = {}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n})();\n//# sourceMappingURL=index.js.map\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport { Cinode } from './Cinode';\n\nexport { ApiError } from './core/ApiError';\nexport { BaseHttpRequest } from './core/BaseHttpRequest';\nexport { CancelablePromise, CancelError } from './core/CancelablePromise';\nexport { OpenAPI } from './core/OpenAPI';\nexport type { OpenAPIConfig } from './core/OpenAPI';\n\nexport type { AbscencePeriodDayModel } from './models/AbscencePeriodDayModel';\nexport type { AbsenceAddEditModel } from './models/AbsenceAddEditModel';\nexport type { AbsencePeriodDtoModel } from './models/AbsencePeriodDtoModel';\nexport type { AbsencePeriodModel } from './models/AbsencePeriodModel';\nexport type { AbsenceTypeDto } from './models/AbsenceTypeDto';\nexport type { AbsenceTypeModel } from './models/AbsenceTypeModel';\nexport { AccessLevel } from './models/AccessLevel';\nexport { ActionType } from './models/ActionType';\nexport type { AddCompanySubcontractorGroupMemberModel } from './models/AddCompanySubcontractorGroupMemberModel';\nexport type { AddressInfoBlockViewModel } from './models/AddressInfoBlockViewModel';\nexport { AddressType } from './models/AddressType';\nexport { AttachmentType } from './models/AttachmentType';\nexport type { AvailabilityFilterModel } from './models/AvailabilityFilterModel';\nexport type { AvailabilityModel } from './models/AvailabilityModel';\nexport type { CalendarDayModel } from './models/CalendarDayModel';\nexport type { ClassicCompanyUserResumeModel } from './models/ClassicCompanyUserResumeModel';\nexport type { CommitmentBlockItemModel } from './models/CommitmentBlockItemModel';\nexport type { CommitmentBlockModel } from './models/CommitmentBlockModel';\nexport type { CompanyAddressModel } from './models/CompanyAddressModel';\nexport type { CompanyBaseModel } from './models/CompanyBaseModel';\nexport type { CompanyCandidateAddCandidateUserModel } from './models/CompanyCandidateAddCandidateUserModel';\nexport type { CompanyCandidateAddInviteModel } from './models/CompanyCandidateAddInviteModel';\nexport type { CompanyCandidateAddModel } from './models/CompanyCandidateAddModel';\nexport type { CompanyCandidateAttachmentModel } from './models/CompanyCandidateAttachmentModel';\nexport type { CompanyCandidateBaseModel } from './models/CompanyCandidateBaseModel';\nexport type { CompanyCandidateEventBaseModel } from './models/CompanyCandidateEventBaseModel';\nexport type { CompanyCandidateEventMeetingModel } from './models/CompanyCandidateEventMeetingModel';\nexport type { CompanyCandidateEventModel } from './models/CompanyCandidateEventModel';\nexport type { CompanyCandidateEventNoteModel } from './models/CompanyCandidateEventNoteModel';\nexport type { CompanyCandidateEventTaskModel } from './models/CompanyCandidateEventTaskModel';\nexport type { CompanyCandidateExtendedModel } from './models/CompanyCandidateExtendedModel';\nexport type { CompanyCandidateFileAttachmentListModel } from './models/CompanyCandidateFileAttachmentListModel';\nexport type { CompanyCandidateFileAttachmentModel } from './models/CompanyCandidateFileAttachmentModel';\nexport type { CompanyCandidatePipelineModel } from './models/CompanyCandidatePipelineModel';\nexport type { CompanyCandidatePipelineStageModel } from './models/CompanyCandidatePipelineStageModel';\nexport { CompanyCandidateQuerySort } from './models/CompanyCandidateQuerySort';\nexport type { CompanyCandidateQuerySortPageAndSortByModel } from './models/CompanyCandidateQuerySortPageAndSortByModel';\nexport type { CompanyCandidateSkillAddModel } from './models/CompanyCandidateSkillAddModel';\nexport type { CompanyCandidateSkillModel } from './models/CompanyCandidateSkillModel';\nexport { CompanyCandidateState } from './models/CompanyCandidateState';\nexport type { CompanyCandidateUriAttachmentAddModel } from './models/CompanyCandidateUriAttachmentAddModel';\nexport type { CompanyCandidateUriAttachmentModel } from './models/CompanyCandidateUriAttachmentModel';\nexport type { CompanyCapabilitiesModel } from './models/CompanyCapabilitiesModel';\nexport type { CompanyCustomerAddModel } from './models/CompanyCustomerAddModel';\nexport type { CompanyCustomerAddressAddEditModel } from './models/CompanyCustomerAddressAddEditModel';\nexport type { CompanyCustomerAddressModel } from './models/CompanyCustomerAddressModel';\nexport type { CompanyCustomerAttachmentModel } from './models/CompanyCustomerAttachmentModel';\nexport type { CompanyCustomerBaseModel } from './models/CompanyCustomerBaseModel';\nexport type { CompanyCustomerContactAddEditModel } from './models/CompanyCustomerContactAddEditModel';\nexport type { CompanyCustomerContactBaseModel } from './models/CompanyCustomerContactBaseModel';\nexport type { CompanyCustomerContactModel } from './models/CompanyCustomerContactModel';\nexport { CompanyCustomerContactQuerySort } from './models/CompanyCustomerContactQuerySort';\nexport type { CompanyCustomerContactQuerySortPageAndSortByModel } from './models/CompanyCustomerContactQuerySortPageAndSortByModel';\nexport type { CompanyCustomerDeleteModel } from './models/CompanyCustomerDeleteModel';\nexport type { CompanyCustomerEditModel } from './models/CompanyCustomerEditModel';\nexport type { CompanyCustomerExtendedModel } from './models/CompanyCustomerExtendedModel';\nexport type { CompanyCustomerManagerModel } from './models/CompanyCustomerManagerModel';\nexport type { CompanyCustomerManagersAddEditModel } from './models/CompanyCustomerManagersAddEditModel';\nexport type { CompanyCustomerModel } from './models/CompanyCustomerModel';\nexport { CompanyCustomerQuerySort } from './models/CompanyCustomerQuerySort';\nexport type { CompanyCustomerQuerySortPageAndSortByModel } from './models/CompanyCustomerQuerySortPageAndSortByModel';\nexport type { CompanyEnabledModuleModel } from './models/CompanyEnabledModuleModel';\nexport type { CompanyImageModel } from './models/CompanyImageModel';\nexport type { CompanyModel } from './models/CompanyModel';\nexport type { CompanyProfileFilterModel } from './models/CompanyProfileFilterModel';\nexport type { CompanyProfilesModel } from './models/CompanyProfilesModel';\nexport { CompanyProfileSort } from './models/CompanyProfileSort';\nexport type { CompanyProfileSortPageAndSortByModel } from './models/CompanyProfileSortPageAndSortByModel';\nexport type { CompanyRecruitmentManagerModel } from './models/CompanyRecruitmentManagerModel';\nexport type { CompanyResumeTemplateBaseModel } from './models/CompanyResumeTemplateBaseModel';\nexport type { CompanyResumeTemplateLanguageModel } from './models/CompanyResumeTemplateLanguageModel';\nexport { CompanySize } from './models/CompanySize';\nexport type { CompanySubcontractorGroupBaseModel } from './models/CompanySubcontractorGroupBaseModel';\nexport type { CompanySubcontractorGroupModel } from './models/CompanySubcontractorGroupModel';\nexport type { CompanyTagBaseModel } from './models/CompanyTagBaseModel';\nexport type { CompanyTagModel } from './models/CompanyTagModel';\nexport type { CompanyTagTypeModel } from './models/CompanyTagTypeModel';\nexport type { CompanyUserAddModel } from './models/CompanyUserAddModel';\nexport type { CompanyUserBaseModel } from './models/CompanyUserBaseModel';\nexport type { CompanyUserCandidateModel } from './models/CompanyUserCandidateModel';\nexport { CompanyUserCandidateStatus } from './models/CompanyUserCandidateStatus';\nexport type { CompanyUserEditModel } from './models/CompanyUserEditModel';\nexport type { CompanyUserEventBaseModel } from './models/CompanyUserEventBaseModel';\nexport type { CompanyUserEventMeetingAddEditModel } from './models/CompanyUserEventMeetingAddEditModel';\nexport type { CompanyUserEventMeetingModel } from './models/CompanyUserEventMeetingModel';\nexport type { CompanyUserEventModel } from './models/CompanyUserEventModel';\nexport type { CompanyUserEventNoteAddEditModel } from './models/CompanyUserEventNoteAddEditModel';\nexport type { CompanyUserEventNoteModel } from './models/CompanyUserEventNoteModel';\nexport type { CompanyUserEventTaskAddEditModel } from './models/CompanyUserEventTaskAddEditModel';\nexport type { CompanyUserEventTaskModel } from './models/CompanyUserEventTaskModel';\nexport type { CompanyUserExtendedModel } from './models/CompanyUserExtendedModel';\nexport type { CompanyUserFullModel } from './models/CompanyUserFullModel';\nexport type { CompanyUserImageModel } from './models/CompanyUserImageModel';\nexport type { CompanyUserInfoBlockViewModel } from './models/CompanyUserInfoBlockViewModel';\nexport type { CompanyUserModel } from './models/CompanyUserModel';\nexport type { CompanyUserPermissionsEditModel } from './models/CompanyUserPermissionsEditModel';\nexport type { CompanyUserProfileAddEditModel } from './models/CompanyUserProfileAddEditModel';\nexport type { CompanyUserProfileBaseModel } from './models/CompanyUserProfileBaseModel';\nexport type { CompanyUserProfileCommitmentAddEditModel } from './models/CompanyUserProfileCommitmentAddEditModel';\nexport type { CompanyUserProfileCommitmentModel } from './models/CompanyUserProfileCommitmentModel';\nexport type { CompanyUserProfileCommitmentTranslationModel } from './models/CompanyUserProfileCommitmentTranslationModel';\nexport type { CompanyUserProfileEducationAddEditModel } from './models/CompanyUserProfileEducationAddEditModel';\nexport type { CompanyUserProfileEducationModel } from './models/CompanyUserProfileEducationModel';\nexport type { CompanyUserProfileEducationTranslationModel } from './models/CompanyUserProfileEducationTranslationModel';\nexport type { CompanyUserProfileEmployerAddEditModel } from './models/CompanyUserProfileEmployerAddEditModel';\nexport type { CompanyUserProfileEmployerModel } from './models/CompanyUserProfileEmployerModel';\nexport type { CompanyUserProfileEmployerTranslationModel } from './models/CompanyUserProfileEmployerTranslationModel';\nexport type { CompanyUserProfileExtSkillAddEditModel } from './models/CompanyUserProfileExtSkillAddEditModel';\nexport type { CompanyUserProfileExtSkillModel } from './models/CompanyUserProfileExtSkillModel';\nexport type { CompanyUserProfileExtSkillTranslationModel } from './models/CompanyUserProfileExtSkillTranslationModel';\nexport type { CompanyUserProfileFullModel } from './models/CompanyUserProfileFullModel';\nexport type { CompanyUserProfileLanguageAddModel } from './models/CompanyUserProfileLanguageAddModel';\nexport type { CompanyUserProfileLanguageBranchModel } from './models/CompanyUserProfileLanguageBranchModel';\nexport type { CompanyUserProfileLanguageEditModel } from './models/CompanyUserProfileLanguageEditModel';\nexport type { CompanyUserProfileLanguageModel } from './models/CompanyUserProfileLanguageModel';\nexport type { CompanyUserProfilePresentationEditModel } from './models/CompanyUserProfilePresentationEditModel';\nexport type { CompanyUserProfilePresentationModel } from './models/CompanyUserProfilePresentationModel';\nexport type { CompanyUserProfilePresentationTranslationModel } from './models/CompanyUserProfilePresentationTranslationModel';\nexport type { CompanyUserProfileReferenceAddEditModel } from './models/CompanyUserProfileReferenceAddEditModel';\nexport type { CompanyUserProfileReferenceModel } from './models/CompanyUserProfileReferenceModel';\nexport type { CompanyUserProfileReferenceTranslationModel } from './models/CompanyUserProfileReferenceTranslationModel';\nexport type { CompanyUserProfileSkillAddModel } from './models/CompanyUserProfileSkillAddModel';\nexport type { CompanyUserProfileSkillEditModel } from './models/CompanyUserProfileSkillEditModel';\nexport type { CompanyUserProfileSkillHistoryModel } from './models/CompanyUserProfileSkillHistoryModel';\nexport type { CompanyUserProfileSkillModel } from './models/CompanyUserProfileSkillModel';\nexport type { CompanyUserProfileSkillTranslationModel } from './models/CompanyUserProfileSkillTranslationModel';\nexport type { CompanyUserProfileTrainingAddEditModel } from './models/CompanyUserProfileTrainingAddEditModel';\nexport type { CompanyUserProfileTrainingModel } from './models/CompanyUserProfileTrainingModel';\nexport type { CompanyUserProfileTrainingTranslationModel } from './models/CompanyUserProfileTrainingTranslationModel';\nexport type { CompanyUserProfileTranslationModel } from './models/CompanyUserProfileTranslationModel';\nexport type { CompanyUserProfileWorkExperienceAddEditModel } from './models/CompanyUserProfileWorkExperienceAddEditModel';\nexport type { CompanyUserProfileWorkExperienceModel } from './models/CompanyUserProfileWorkExperienceModel';\nexport type { CompanyUserProfileWorkExperienceSkillAddModel } from './models/CompanyUserProfileWorkExperienceSkillAddModel';\nexport type { CompanyUserProfileWorkExperienceTranslationModel } from './models/CompanyUserProfileWorkExperienceTranslationModel';\nexport type { CompanyUserProjectAssignmentModel } from './models/CompanyUserProjectAssignmentModel';\nexport { CompanyUserQuerySort } from './models/CompanyUserQuerySort';\nexport type { CompanyUserQuerySortPageAndSortByModel } from './models/CompanyUserQuerySortPageAndSortByModel';\nexport type { CompanyUserResumeBaseModel } from './models/CompanyUserResumeBaseModel';\nexport type { CompanyUserSearchSkillModel } from './models/CompanyUserSearchSkillModel';\nexport type { CompanyUserSkillModel } from './models/CompanyUserSkillModel';\nexport { CompanyUserStatus } from './models/CompanyUserStatus';\nexport type { CompanyUserSubcontractorAddEditModel } from './models/CompanyUserSubcontractorAddEditModel';\nexport type { CompanyUserSubcontractorAttachmentModel } from './models/CompanyUserSubcontractorAttachmentModel';\nexport type { CompanyUserSubcontractorBaseModel } from './models/CompanyUserSubcontractorBaseModel';\nexport type { CompanyUserSubcontractorFileAttachmentListModel } from './models/CompanyUserSubcontractorFileAttachmentListModel';\nexport type { CompanyUserSubcontractorFileAttachmentModel } from './models/CompanyUserSubcontractorFileAttachmentModel';\nexport type { CompanyUserSubcontractorModel } from './models/CompanyUserSubcontractorModel';\nexport type { CompanyUserSubcontractorRoleMemberModel } from './models/CompanyUserSubcontractorRoleMemberModel';\nexport type { CompanyUserSubcontractorRolesModel } from './models/CompanyUserSubcontractorRolesModel';\nexport { CompanyUserSubcontractorStatus } from './models/CompanyUserSubcontractorStatus';\nexport { CompanyUserType } from './models/CompanyUserType';\nexport { ContractType } from './models/ContractType';\nexport type { ConvertCompanyUserToAadAccountModel } from './models/ConvertCompanyUserToAadAccountModel';\nexport type { CountryModel } from './models/CountryModel';\nexport type { CreatedModel } from './models/CreatedModel';\nexport type { CurrencyModel } from './models/CurrencyModel';\nexport type { CustomerEventBaseModel } from './models/CustomerEventBaseModel';\nexport type { CustomerEventMeetingAddEditModel } from './models/CustomerEventMeetingAddEditModel';\nexport type { CustomerEventMeetingModel } from './models/CustomerEventMeetingModel';\nexport type { CustomerEventModel } from './models/CustomerEventModel';\nexport type { CustomerEventNoteAddEditModel } from './models/CustomerEventNoteAddEditModel';\nexport type { CustomerEventNoteModel } from './models/CustomerEventNoteModel';\nexport type { CustomerEventTaskAddEditModel } from './models/CustomerEventTaskAddEditModel';\nexport type { CustomerEventTaskModel } from './models/CustomerEventTaskModel';\nexport type { DynamicCompanyUserResumeModel } from './models/DynamicCompanyUserResumeModel';\nexport type { DynamicTemplateViewModel } from './models/DynamicTemplateViewModel';\nexport type { EducationBlockItemModel } from './models/EducationBlockItemModel';\nexport type { EducationBlockModel } from './models/EducationBlockModel';\nexport type { EmployerBlockItemModel } from './models/EmployerBlockItemModel';\nexport type { EmployerBlockModel } from './models/EmployerBlockModel';\nexport type { ErrorModel } from './models/ErrorModel';\nexport type { EventCommentModel } from './models/EventCommentModel';\nexport type { EventMeetingAddEditModel } from './models/EventMeetingAddEditModel';\nexport type { EventNoteAddEditModel } from './models/EventNoteAddEditModel';\nexport { EventNoteType } from './models/EventNoteType';\nexport { EventStatusValue } from './models/EventStatusValue';\nexport type { EventTaskAddEditModel } from './models/EventTaskAddEditModel';\nexport { EventTaskType } from './models/EventTaskType';\nexport { EventType } from './models/EventType';\nexport { EventVisibility } from './models/EventVisibility';\nexport { ExtentType } from './models/ExtentType';\nexport type { ExtraSkillBlockModel } from './models/ExtraSkillBlockModel';\nexport type { ExtraSkillItemBlockModel } from './models/ExtraSkillItemBlockModel';\nexport type { FilterModel } from './models/FilterModel';\nexport type { HighlightedWorkExperienceBlockItemModel } from './models/HighlightedWorkExperienceBlockItemModel';\nexport type { HighlightedWorkExperienceBlockModel } from './models/HighlightedWorkExperienceBlockModel';\nexport type { ICompanyAddressViewModel } from './models/ICompanyAddressViewModel';\nexport type { ICompanyCandidatePatchDocument } from './models/ICompanyCandidatePatchDocument';\nexport type { ICompanyUserEmployeePatchDocument } from './models/ICompanyUserEmployeePatchDocument';\nexport type { IContactInfoViewModel } from './models/IContactInfoViewModel';\nexport type { IDynamicBlockViewModel } from './models/IDynamicBlockViewModel';\nexport type { ImageBlockModel } from './models/ImageBlockModel';\nexport { ImageSize } from './models/ImageSize';\nexport type { ImportProfileAsyncOperation } from './models/ImportProfileAsyncOperation';\nexport type { ITemplateCompany } from './models/ITemplateCompany';\nexport type { ITemplateLogotype } from './models/ITemplateLogotype';\nexport type { ITemplateProfileImage } from './models/ITemplateProfileImage';\nexport type { ITemplateSharedAssetViewModel } from './models/ITemplateSharedAssetViewModel';\nexport type { ITemplateStyleAssetViewModel } from './models/ITemplateStyleAssetViewModel';\nexport type { ITemplateUserInfo } from './models/ITemplateUserInfo';\nexport type { JsonPatchDocument } from './models/JsonPatchDocument';\nexport type { KeywordModel } from './models/KeywordModel';\nexport type { KeywordSynonymModel } from './models/KeywordSynonymModel';\nexport { KeywordType } from './models/KeywordType';\nexport type { LanguageBlockModel } from './models/LanguageBlockModel';\nexport type { LanguageItemBlockModel } from './models/LanguageItemBlockModel';\nexport { LanguageLevel } from './models/LanguageLevel';\nexport type { Link } from './models/Link';\nexport type { LocationBlockModel } from './models/LocationBlockModel';\nexport type { LocationModel } from './models/LocationModel';\nexport { LongRunningStatus } from './models/LongRunningStatus';\nexport type { MentionTextModel } from './models/MentionTextModel';\nexport { ModuleType } from './models/ModuleType';\nexport type { Operation } from './models/Operation';\nexport type { PartnerBaseModel } from './models/PartnerBaseModel';\nexport type { PartnerConnectionBaseModel } from './models/PartnerConnectionBaseModel';\nexport { PartnerConnectionTrustType } from './models/PartnerConnectionTrustType';\nexport type { PartnerRecipientBaseModel } from './models/PartnerRecipientBaseModel';\nexport type { PartnersFilterModel } from './models/PartnersFilterModel';\nexport type { PartnersOverviewModel } from './models/PartnersOverviewModel';\nexport { PdfEngineType } from './models/PdfEngineType';\nexport { PdfOrientation } from './models/PdfOrientation';\nexport type { PresentationBlockModel } from './models/PresentationBlockModel';\nexport type { ProfileLanguageModel } from './models/ProfileLanguageModel';\nexport type { ProjectAddEditModel } from './models/ProjectAddEditModel';\nexport type { ProjectAssignmentAddModel } from './models/ProjectAssignmentAddModel';\nexport { ProjectAssignmentAllocationStatus } from './models/ProjectAssignmentAllocationStatus';\nexport type { ProjectAssignmentAnnouncementBaseModel } from './models/ProjectAssignmentAnnouncementBaseModel';\nexport type { ProjectAssignmentAnnounceModel } from './models/ProjectAssignmentAnnounceModel';\nexport type { ProjectAssignmentBaseModel } from './models/ProjectAssignmentBaseModel';\nexport type { ProjectAssignmentEditModel } from './models/ProjectAssignmentEditModel';\nexport { ProjectAssignmentExtentType } from './models/ProjectAssignmentExtentType';\nexport type { ProjectAssignmentFilterModel } from './models/ProjectAssignmentFilterModel';\nexport { ProjectAssignmentMemberAllocationStatus } from './models/ProjectAssignmentMemberAllocationStatus';\nexport type { ProjectAssignmentMemberEmployeeAddModel } from './models/ProjectAssignmentMemberEmployeeAddModel';\nexport type { ProjectAssignmentMemberEmployeeEditModel } from './models/ProjectAssignmentMemberEmployeeEditModel';\nexport type { ProjectAssignmentMemberModel } from './models/ProjectAssignmentMemberModel';\nexport { ProjectAssignmentMemberState } from './models/ProjectAssignmentMemberState';\nexport type { ProjectAssignmentMemberStateHistoryModel } from './models/ProjectAssignmentMemberStateHistoryModel';\nexport type { ProjectAssignmentMemberSubcontractorAddModel } from './models/ProjectAssignmentMemberSubcontractorAddModel';\nexport type { ProjectAssignmentMemberSubcontractorEditModel } from './models/ProjectAssignmentMemberSubcontractorEditModel';\nexport { ProjectAssignmentMemberType } from './models/ProjectAssignmentMemberType';\nexport type { ProjectAssignmentModel } from './models/ProjectAssignmentModel';\nexport { ProjectAssignmentRequestStatus } from './models/ProjectAssignmentRequestStatus';\nexport type { ProjectAssignmentSkillAddModel } from './models/ProjectAssignmentSkillAddModel';\nexport type { ProjectAssignmentSkillBaseModel } from './models/ProjectAssignmentSkillBaseModel';\nexport type { ProjectAssignmentSkillEditModel } from './models/ProjectAssignmentSkillEditModel';\nexport type { ProjectAssignmentSkillModel } from './models/ProjectAssignmentSkillModel';\nexport { ProjectAssignmentStatus } from './models/ProjectAssignmentStatus';\nexport type { ProjectAssignmentWithStatusModel } from './models/ProjectAssignmentWithStatusModel';\nexport type { ProjectAttachmentModel } from './models/ProjectAttachmentModel';\nexport type { ProjectBaseModel } from './models/ProjectBaseModel';\nexport type { ProjectEventBaseModel } from './models/ProjectEventBaseModel';\nexport type { ProjectEventMeetingAddEditModel } from './models/ProjectEventMeetingAddEditModel';\nexport type { ProjectEventMeetingModel } from './models/ProjectEventMeetingModel';\nexport type { ProjectEventModel } from './models/ProjectEventModel';\nexport type { ProjectEventNoteAddEditModel } from './models/ProjectEventNoteAddEditModel';\nexport type { ProjectEventNoteModel } from './models/ProjectEventNoteModel';\nexport type { ProjectEventTaskAddEditModel } from './models/ProjectEventTaskAddEditModel';\nexport type { ProjectEventTaskModel } from './models/ProjectEventTaskModel';\nexport type { ProjectModel } from './models/ProjectModel';\nexport type { ProjectPipelineModel } from './models/ProjectPipelineModel';\nexport type { ProjectPipelineStageModel } from './models/ProjectPipelineStageModel';\nexport { ProjectPriority } from './models/ProjectPriority';\nexport { ProjectQuerySort } from './models/ProjectQuerySort';\nexport type { ProjectQuerySortPageAndSortByModel } from './models/ProjectQuerySortPageAndSortByModel';\nexport type { ProjectReferenceModel } from './models/ProjectReferenceModel';\nexport { ProjectState } from './models/ProjectState';\nexport type { ProjectStateHistoryModel } from './models/ProjectStateHistoryModel';\nexport type { ProjectStateReasonModel } from './models/ProjectStateReasonModel';\nexport type { RecruitmentSourceModel } from './models/RecruitmentSourceModel';\nexport type { ReferenceBlockItemModel } from './models/ReferenceBlockItemModel';\nexport type { ReferenceBlockModel } from './models/ReferenceBlockModel';\nexport type { ResumeModel } from './models/ResumeModel';\nexport type { RoleModel } from './models/RoleModel';\nexport { SaveToApiOption } from './models/SaveToApiOption';\nexport type { SearchCompanyCandidateQueryModel } from './models/SearchCompanyCandidateQueryModel';\nexport type { SearchCompanyCandidateResultModel } from './models/SearchCompanyCandidateResultModel';\nexport type { SearchCompanyCustomerContactQueryModel } from './models/SearchCompanyCustomerContactQueryModel';\nexport type { SearchCompanyCustomerContactResultModel } from './models/SearchCompanyCustomerContactResultModel';\nexport type { SearchCompanyCustomerQueryModel } from './models/SearchCompanyCustomerQueryModel';\nexport type { SearchCompanyCustomerResultModel } from './models/SearchCompanyCustomerResultModel';\nexport type { SearchCompanyUserQueryModel } from './models/SearchCompanyUserQueryModel';\nexport type { SearchCompanyUserResultModel } from './models/SearchCompanyUserResultModel';\nexport type { SearchProjectQueryModel } from './models/SearchProjectQueryModel';\nexport type { SearchProjectsResultModel } from './models/SearchProjectsResultModel';\nexport type { SearchSkillModel } from './models/SearchSkillModel';\nexport type { SearchSkillQueryModel } from './models/SearchSkillQueryModel';\nexport type { SearchSkillResultModel } from './models/SearchSkillResultModel';\nexport type { SkillBlockItemModel } from './models/SkillBlockItemModel';\nexport type { SkillByCategoryBlockItemModel } from './models/SkillByCategoryBlockItemModel';\nexport type { SkillByCategoryBlockModel } from './models/SkillByCategoryBlockModel';\nexport type { SkillModelModel } from './models/SkillModelModel';\nexport type { SkillResultModel } from './models/SkillResultModel';\nexport type { SkillSearchQueryTermModel } from './models/SkillSearchQueryTermModel';\nexport { SortOrder } from './models/SortOrder';\nexport { Status } from './models/Status';\nexport { StringComparisonOperator } from './models/StringComparisonOperator';\nexport type { TeamAddEditModel } from './models/TeamAddEditModel';\nexport type { TeamBaseModel } from './models/TeamBaseModel';\nexport type { TeamManagerEditModel } from './models/TeamManagerEditModel';\nexport type { TeamManagerModel } from './models/TeamManagerModel';\nexport type { TeamMemberAddModel } from './models/TeamMemberAddModel';\nexport type { TeamMemberEditModel } from './models/TeamMemberEditModel';\nexport type { TeamMemberModel } from './models/TeamMemberModel';\nexport type { TeamMemberMoveModel } from './models/TeamMemberMoveModel';\nexport type { TeamModel } from './models/TeamModel';\nexport { TemplateAssetType } from './models/TemplateAssetType';\nexport type { TextBlockModel } from './models/TextBlockModel';\nexport type { TopSkillBlockItemModel } from './models/TopSkillBlockItemModel';\nexport type { TopSkillBlockModel } from './models/TopSkillBlockModel';\nexport type { TrainingBlockModel } from './models/TrainingBlockModel';\nexport type { TrainingItemBlockModel } from './models/TrainingItemBlockModel';\nexport { TrainingType } from './models/TrainingType';\nexport type { UpdatedModel } from './models/UpdatedModel';\nexport { UserGender } from './models/UserGender';\nexport type { ValidationModel } from './models/ValidationModel';\nexport type { WebhookAddModel } from './models/WebhookAddModel';\nexport type { WebhookConfigurationAddModel } from './models/WebhookConfigurationAddModel';\nexport type { WebhookConfigurationModel } from './models/WebhookConfigurationModel';\nexport type { WebhookCredentialsAddModel } from './models/WebhookCredentialsAddModel';\nexport type { WebhookCredentialsModel } from './models/WebhookCredentialsModel';\nexport { WebhookEntityType } from './models/WebhookEntityType';\nexport type { WebhookModel } from './models/WebhookModel';\nexport { WordEngineType } from './models/WordEngineType';\nexport type { WorkExperienceBlockItemModel } from './models/WorkExperienceBlockItemModel';\nexport type { WorkExperienceBlockModel } from './models/WorkExperienceBlockModel';\n\nexport { AbsenceService } from './services/AbsenceService';\nexport { AbsencesService } from './services/AbsencesService';\nexport { AbsenceTypeService } from './services/AbsenceTypeService';\nexport { AvailabilityService } from './services/AvailabilityService';\nexport { CompanyService } from './services/CompanyService';\nexport { CompanyAddressUsersService } from './services/CompanyAddressUsersService';\nexport { CompanyCandidateService } from './services/CompanyCandidateService';\nexport { CompanyCandidateEventService } from './services/CompanyCandidateEventService';\nexport { CompanyCandidateEventMeetingService } from './services/CompanyCandidateEventMeetingService';\nexport { CompanyCandidateEventMeetingsService } from './services/CompanyCandidateEventMeetingsService';\nexport { CompanyCandidateEventNoteService } from './services/CompanyCandidateEventNoteService';\nexport { CompanyCandidateEventNotesService } from './services/CompanyCandidateEventNotesService';\nexport { CompanyCandidateEventsService } from './services/CompanyCandidateEventsService';\nexport { CompanyCandidateEventTaskService } from './services/CompanyCandidateEventTaskService';\nexport { CompanyCandidateEventTasksService } from './services/CompanyCandidateEventTasksService';\nexport { CompanyCandidateFileAttachmentService } from './services/CompanyCandidateFileAttachmentService';\nexport { CompanyCandidateFileAttachmentsService } from './services/CompanyCandidateFileAttachmentsService';\nexport { CompanyCandidatePipelinesService } from './services/CompanyCandidatePipelinesService';\nexport { CompanyCandidatesService } from './services/CompanyCandidatesService';\nexport { CompanyCandidateSkillsService } from './services/CompanyCandidateSkillsService';\nexport { CompanyCandidateUriAttachmentService } from './services/CompanyCandidateUriAttachmentService';\nexport { CompanyCandidateUriAttachmentsService } from './services/CompanyCandidateUriAttachmentsService';\nexport { CompanyCandidateUserService } from './services/CompanyCandidateUserService';\nexport { CompanyCapabilitiesService } from './services/CompanyCapabilitiesService';\nexport { CompanyCurrenciesService } from './services/CompanyCurrenciesService';\nexport { CompanyCustomerService } from './services/CompanyCustomerService';\nexport { CompanyCustomerAddressService } from './services/CompanyCustomerAddressService';\nexport { CompanyCustomerContactService } from './services/CompanyCustomerContactService';\nexport { CompanyCustomerContactsService } from './services/CompanyCustomerContactsService';\nexport { CompanyCustomerContactTagsService } from './services/CompanyCustomerContactTagsService';\nexport { CompanyCustomerEventService } from './services/CompanyCustomerEventService';\nexport { CompanyCustomerEventsService } from './services/CompanyCustomerEventsService';\nexport { CompanyCustomerEventsMeetingService } from './services/CompanyCustomerEventsMeetingService';\nexport { CompanyCustomerEventsMeetingsService } from './services/CompanyCustomerEventsMeetingsService';\nexport { CompanyCustomerEventsNoteService } from './services/CompanyCustomerEventsNoteService';\nexport { CompanyCustomerEventsNotesService } from './services/CompanyCustomerEventsNotesService';\nexport { CompanyCustomerEventsTaskService } from './services/CompanyCustomerEventsTaskService';\nexport { CompanyCustomerEventsTasksService } from './services/CompanyCustomerEventsTasksService';\nexport { CompanyCustomerFileAttachmentService } from './services/CompanyCustomerFileAttachmentService';\nexport { CompanyCustomerManagersService } from './services/CompanyCustomerManagersService';\nexport { CompanyCustomersService } from './services/CompanyCustomersService';\nexport { CompanyCustomersExtendedService } from './services/CompanyCustomersExtendedService';\nexport { CompanyCustomerTagsService } from './services/CompanyCustomerTagsService';\nexport { CompanyImageService } from './services/CompanyImageService';\nexport { CompanyImagesService } from './services/CompanyImagesService';\nexport { CompanyManagersService } from './services/CompanyManagersService';\nexport { CompanyProfilesService } from './services/CompanyProfilesService';\nexport { CompanyProjectFileAttachmentService } from './services/CompanyProjectFileAttachmentService';\nexport { CompanyRecruitmentManagersService } from './services/CompanyRecruitmentManagersService';\nexport { CompanyResumesService } from './services/CompanyResumesService';\nexport { CompanySubcontractorGroupService } from './services/CompanySubcontractorGroupService';\nexport { CompanySubcontractorGroupMembersService } from './services/CompanySubcontractorGroupMembersService';\nexport { CompanySubcontractorGroupsService } from './services/CompanySubcontractorGroupsService';\nexport { CompanyTagService } from './services/CompanyTagService';\nexport { CompanyTagsService } from './services/CompanyTagsService';\nexport { CompanyTeamService } from './services/CompanyTeamService';\nexport { CompanyTeamManagersService } from './services/CompanyTeamManagersService';\nexport { CompanyTeamMemberService } from './services/CompanyTeamMemberService';\nexport { CompanyTeamMembersService } from './services/CompanyTeamMembersService';\nexport { CompanyTeamsService } from './services/CompanyTeamsService';\nexport { CompanyTeamUsersService } from './services/CompanyTeamUsersService';\nexport { CompanyUserService } from './services/CompanyUserService';\nexport { CompanyUserConvertService } from './services/CompanyUserConvertService';\nexport { CompanyUserEmployeeEventService } from './services/CompanyUserEmployeeEventService';\nexport { CompanyUserEmployeeEventMeetingService } from './services/CompanyUserEmployeeEventMeetingService';\nexport { CompanyUserEmployeeEventNoteService } from './services/CompanyUserEmployeeEventNoteService';\nexport { CompanyUserEmployeeEventsService } from './services/CompanyUserEmployeeEventsService';\nexport { CompanyUserEmployeeEventsMeetingsService } from './services/CompanyUserEmployeeEventsMeetingsService';\nexport { CompanyUserEmployeeEventsNotesService } from './services/CompanyUserEmployeeEventsNotesService';\nexport { CompanyUserEmployeeEventsTasksService } from './services/CompanyUserEmployeeEventsTasksService';\nexport { CompanyUserEmployeeEventTaskService } from './services/CompanyUserEmployeeEventTaskService';\nexport { CompanyUserFullService } from './services/CompanyUserFullService';\nexport { CompanyUserPermissionsService } from './services/CompanyUserPermissionsService';\nexport { CompanyUserProfileService } from './services/CompanyUserProfileService';\nexport { CompanyUserProfileCommitmentService } from './services/CompanyUserProfileCommitmentService';\nexport { CompanyUserProfileEducationService } from './services/CompanyUserProfileEducationService';\nexport { CompanyUserProfileEmployerService } from './services/CompanyUserProfileEmployerService';\nexport { CompanyUserProfileExtSkillService } from './services/CompanyUserProfileExtSkillService';\nexport { CompanyUserProfileImportService } from './services/CompanyUserProfileImportService';\nexport { CompanyUserProfileLanguageService } from './services/CompanyUserProfileLanguageService';\nexport { CompanyUserProfileLanguagesService } from './services/CompanyUserProfileLanguagesService';\nexport { CompanyUserProfilePresentationService } from './services/CompanyUserProfilePresentationService';\nexport { CompanyUserProfileReferenceService } from './services/CompanyUserProfileReferenceService';\nexport { CompanyUserProfilesService } from './services/CompanyUserProfilesService';\nexport { CompanyUserProfileSkillService } from './services/CompanyUserProfileSkillService';\nexport { CompanyUserProfileTrainingService } from './services/CompanyUserProfileTrainingService';\nexport { CompanyUserProfileWorkExperienceService } from './services/CompanyUserProfileWorkExperienceService';\nexport { CompanyUserResumeService } from './services/CompanyUserResumeService';\nexport { CompanyUserResumesService } from './services/CompanyUserResumesService';\nexport { CompanyUserRolesService } from './services/CompanyUserRolesService';\nexport { CompanyUsersService } from './services/CompanyUsersService';\nexport { CompanyUsersExtendedService } from './services/CompanyUsersExtendedService';\nexport { CompanyUserSkillService } from './services/CompanyUserSkillService';\nexport { CompanyUserSkillsService } from './services/CompanyUserSkillsService';\nexport { CompanyUserSubcontractorService } from './services/CompanyUserSubcontractorService';\nexport { CompanyUserSubcontractorEventService } from './services/CompanyUserSubcontractorEventService';\nexport { CompanyUserSubcontractorEventMeetingService } from './services/CompanyUserSubcontractorEventMeetingService';\nexport { CompanyUserSubcontractorEventNoteService } from './services/CompanyUserSubcontractorEventNoteService';\nexport { CompanyUserSubcontractorEventsService } from './services/CompanyUserSubcontractorEventsService';\nexport { CompanyUserSubcontractorEventsMeetingsService } from './services/CompanyUserSubcontractorEventsMeetingsService';\nexport { CompanyUserSubcontractorEventsNotesService } from './services/CompanyUserSubcontractorEventsNotesService';\nexport { CompanyUserSubcontractorEventsTasksService } from './services/CompanyUserSubcontractorEventsTasksService';\nexport { CompanyUserSubcontractorEventTaskService } from './services/CompanyUserSubcontractorEventTaskService';\nexport { CompanyUserSubcontractorFileAttachmentService } from './services/CompanyUserSubcontractorFileAttachmentService';\nexport { CompanyUserSubcontractorFileAttachmentsService } from './services/CompanyUserSubcontractorFileAttachmentsService';\nexport { CompanyUserSubcontractorRolesService } from './services/CompanyUserSubcontractorRolesService';\nexport { CompanyUserSubcontractorsService } from './services/CompanyUserSubcontractorsService';\nexport { CompanyUserTagsService } from './services/CompanyUserTagsService';\nexport { CompanyUserTeamsService } from './services/CompanyUserTeamsService';\nexport { CompanyWebhookService } from './services/CompanyWebhookService';\nexport { CompanyWebhooksService } from './services/CompanyWebhooksService';\nexport { DynamicCompanyUserResumeService } from './services/DynamicCompanyUserResumeService';\nexport { KeywordSearchService } from './services/KeywordSearchService';\nexport { MentionsService } from './services/MentionsService';\nexport { PartnersService } from './services/PartnersService';\nexport { ProjectService } from './services/ProjectService';\nexport { ProjectAssignmentService } from './services/ProjectAssignmentService';\nexport { ProjectAssignmentMemberService } from './services/ProjectAssignmentMemberService';\nexport { ProjectAssignmentsService } from './services/ProjectAssignmentsService';\nexport { ProjectAssignmentSkillsService } from './services/ProjectAssignmentSkillsService';\nexport { ProjectEventService } from './services/ProjectEventService';\nexport { ProjectEventsService } from './services/ProjectEventsService';\nexport { ProjectEventsMeetingService } from './services/ProjectEventsMeetingService';\nexport { ProjectEventsMeetingsService } from './services/ProjectEventsMeetingsService';\nexport { ProjectEventsNoteService } from './services/ProjectEventsNoteService';\nexport { ProjectEventsNotesService } from './services/ProjectEventsNotesService';\nexport { ProjectEventsTaskService } from './services/ProjectEventsTaskService';\nexport { ProjectEventsTasksService } from './services/ProjectEventsTasksService';\nexport { ProjectPipelinesService } from './services/ProjectPipelinesService';\nexport { ProjectReferenceService } from './services/ProjectReferenceService';\nexport { ProjectReferencesService } from './services/ProjectReferencesService';\nexport { ProjectsService } from './services/ProjectsService';\nexport { ProjectTagsService } from './services/ProjectTagsService';\nexport { RecruitmentSourcesService } from './services/RecruitmentSourcesService';\nexport { SearchCompanyCandidateService } from './services/SearchCompanyCandidateService';\nexport { SearchCompanyCustomerContactService } from './services/SearchCompanyCustomerContactService';\nexport { SearchCompanyCustomersService } from './services/SearchCompanyCustomersService';\nexport { SearchCompanyUserService } from './services/SearchCompanyUserService';\nexport { SearchProjectService } from './services/SearchProjectService';\nexport { SkillSearchService } from './services/SkillSearchService';\nexport { SkillSearchTermService } from './services/SkillSearchTermService';\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\nimport type { OpenAPIConfig } from './core/OpenAPI';\nimport { AxiosHttpRequest } from './core/AxiosHttpRequest';\nimport { AbsenceService } from './services/AbsenceService';\nimport { AbsencesService } from './services/AbsencesService';\nimport { AbsenceTypeService } from './services/AbsenceTypeService';\nimport { AvailabilityService } from './services/AvailabilityService';\nimport { CompanyService } from './services/CompanyService';\nimport { CompanyAddressUsersService } from './services/CompanyAddressUsersService';\nimport { CompanyCandidateService } from './services/CompanyCandidateService';\nimport { CompanyCandidateEventService } from './services/CompanyCandidateEventService';\nimport { CompanyCandidateEventMeetingService } from './services/CompanyCandidateEventMeetingService';\nimport { CompanyCandidateEventMeetingsService } from './services/CompanyCandidateEventMeetingsService';\nimport { CompanyCandidateEventNoteService } from './services/CompanyCandidateEventNoteService';\nimport { CompanyCandidateEventNotesService } from './services/CompanyCandidateEventNotesService';\nimport { CompanyCandidateEventsService } from './services/CompanyCandidateEventsService';\nimport { CompanyCandidateEventTaskService } from './services/CompanyCandidateEventTaskService';\nimport { CompanyCandidateEventTasksService } from './services/CompanyCandidateEventTasksService';\nimport { CompanyCandidateFileAttachmentService } from './services/CompanyCandidateFileAttachmentService';\nimport { CompanyCandidateFileAttachmentsService } from './services/CompanyCandidateFileAttachmentsService';\nimport { CompanyCandidatePipelinesService } from './services/CompanyCandidatePipelinesService';\nimport { CompanyCandidatesService } from './services/CompanyCandidatesService';\nimport { CompanyCandidateSkillsService } from './services/CompanyCandidateSkillsService';\nimport { CompanyCandidateUriAttachmentService } from './services/CompanyCandidateUriAttachmentService';\nimport { CompanyCandidateUriAttachmentsService } from './services/CompanyCandidateUriAttachmentsService';\nimport { CompanyCandidateUserService } from './services/CompanyCandidateUserService';\nimport { CompanyCapabilitiesService } from './services/CompanyCapabilitiesService';\nimport { CompanyCurrenciesService } from './services/CompanyCurrenciesService';\nimport { CompanyCustomerService } from './services/CompanyCustomerService';\nimport { CompanyCustomerAddressService } from './services/CompanyCustomerAddressService';\nimport { CompanyCustomerContactService } from './services/CompanyCustomerContactService';\nimport { CompanyCustomerContactsService } from './services/CompanyCustomerContactsService';\nimport { CompanyCustomerContactTagsService } from './services/CompanyCustomerContactTagsService';\nimport { CompanyCustomerEventService } from './services/CompanyCustomerEventService';\nimport { CompanyCustomerEventsService } from './services/CompanyCustomerEventsService';\nimport { CompanyCustomerEventsMeetingService } from './services/CompanyCustomerEventsMeetingService';\nimport { CompanyCustomerEventsMeetingsService } from './services/CompanyCustomerEventsMeetingsService';\nimport { CompanyCustomerEventsNoteService } from './services/CompanyCustomerEventsNoteService';\nimport { CompanyCustomerEventsNotesService } from './services/CompanyCustomerEventsNotesService';\nimport { CompanyCustomerEventsTaskService } from './services/CompanyCustomerEventsTaskService';\nimport { CompanyCustomerEventsTasksService } from './services/CompanyCustomerEventsTasksService';\nimport { CompanyCustomerFileAttachmentService } from './services/CompanyCustomerFileAttachmentService';\nimport { CompanyCustomerManagersService } from './services/CompanyCustomerManagersService';\nimport { CompanyCustomersService } from './services/CompanyCustomersService';\nimport { CompanyCustomersExtendedService } from './services/CompanyCustomersExtendedService';\nimport { CompanyCustomerTagsService } from './services/CompanyCustomerTagsService';\nimport { CompanyImageService } from './services/CompanyImageService';\nimport { CompanyImagesService } from './services/CompanyImagesService';\nimport { CompanyManagersService } from './services/CompanyManagersService';\nimport { CompanyProfilesService } from './services/CompanyProfilesService';\nimport { CompanyProjectFileAttachmentService } from './services/CompanyProjectFileAttachmentService';\nimport { CompanyRecruitmentManagersService } from './services/CompanyRecruitmentManagersService';\nimport { CompanyResumesService } from './services/CompanyResumesService';\nimport { CompanySubcontractorGroupService } from './services/CompanySubcontractorGroupService';\nimport { CompanySubcontractorGroupMembersService } from './services/CompanySubcontractorGroupMembersService';\nimport { CompanySubcontractorGroupsService } from './services/CompanySubcontractorGroupsService';\nimport { CompanyTagService } from './services/CompanyTagService';\nimport { CompanyTagsService } from './services/CompanyTagsService';\nimport { CompanyTeamService } from './services/CompanyTeamService';\nimport { CompanyTeamManagersService } from './services/CompanyTeamManagersService';\nimport { CompanyTeamMemberService } from './services/CompanyTeamMemberService';\nimport { CompanyTeamMembersService } from './services/CompanyTeamMembersService';\nimport { CompanyTeamsService } from './services/CompanyTeamsService';\nimport { CompanyTeamUsersService } from './services/CompanyTeamUsersService';\nimport { CompanyUserService } from './services/CompanyUserService';\nimport { CompanyUserConvertService } from './services/CompanyUserConvertService';\nimport { CompanyUserEmployeeEventService } from './services/CompanyUserEmployeeEventService';\nimport { CompanyUserEmployeeEventMeetingService } from './services/CompanyUserEmployeeEventMeetingService';\nimport { CompanyUserEmployeeEventNoteService } from './services/CompanyUserEmployeeEventNoteService';\nimport { CompanyUserEmployeeEventsService } from './services/CompanyUserEmployeeEventsService';\nimport { CompanyUserEmployeeEventsMeetingsService } from './services/CompanyUserEmployeeEventsMeetingsService';\nimport { CompanyUserEmployeeEventsNotesService } from './services/CompanyUserEmployeeEventsNotesService';\nimport { CompanyUserEmployeeEventsTasksService } from './services/CompanyUserEmployeeEventsTasksService';\nimport { CompanyUserEmployeeEventTaskService } from './services/CompanyUserEmployeeEventTaskService';\nimport { CompanyUserFullService } from './services/CompanyUserFullService';\nimport { CompanyUserPermissionsService } from './services/CompanyUserPermissionsService';\nimport { CompanyUserProfileService } from './services/CompanyUserProfileService';\nimport { CompanyUserProfileCommitmentService } from './services/CompanyUserProfileCommitmentService';\nimport { CompanyUserProfileEducationService } from './services/CompanyUserProfileEducationService';\nimport { CompanyUserProfileEmployerService } from './services/CompanyUserProfileEmployerService';\nimport { CompanyUserProfileExtSkillService } from './services/CompanyUserProfileExtSkillService';\nimport { CompanyUserProfileImportService } from './services/CompanyUserProfileImportService';\nimport { CompanyUserProfileLanguageService } from './services/CompanyUserProfileLanguageService';\nimport { CompanyUserProfileLanguagesService } from './services/CompanyUserProfileLanguagesService';\nimport { CompanyUserProfilePresentationService } from './services/CompanyUserProfilePresentationService';\nimport { CompanyUserProfileReferenceService } from './services/CompanyUserProfileReferenceService';\nimport { CompanyUserProfilesService } from './services/CompanyUserProfilesService';\nimport { CompanyUserProfileSkillService } from './services/CompanyUserProfileSkillService';\nimport { CompanyUserProfileTrainingService } from './services/CompanyUserProfileTrainingService';\nimport { CompanyUserProfileWorkExperienceService } from './services/CompanyUserProfileWorkExperienceService';\nimport { CompanyUserResumeService } from './services/CompanyUserResumeService';\nimport { CompanyUserResumesService } from './services/CompanyUserResumesService';\nimport { CompanyUserRolesService } from './services/CompanyUserRolesService';\nimport { CompanyUsersService } from './services/CompanyUsersService';\nimport { CompanyUsersExtendedService } from './services/CompanyUsersExtendedService';\nimport { CompanyUserSkillService } from './services/CompanyUserSkillService';\nimport { CompanyUserSkillsService } from './services/CompanyUserSkillsService';\nimport { CompanyUserSubcontractorService } from './services/CompanyUserSubcontractorService';\nimport { CompanyUserSubcontractorEventService } from './services/CompanyUserSubcontractorEventService';\nimport { CompanyUserSubcontractorEventMeetingService } from './services/CompanyUserSubcontractorEventMeetingService';\nimport { CompanyUserSubcontractorEventNoteService } from './services/CompanyUserSubcontractorEventNoteService';\nimport { CompanyUserSubcontractorEventsService } from './services/CompanyUserSubcontractorEventsService';\nimport { CompanyUserSubcontractorEventsMeetingsService } from './services/CompanyUserSubcontractorEventsMeetingsService';\nimport { CompanyUserSubcontractorEventsNotesService } from './services/CompanyUserSubcontractorEventsNotesService';\nimport { CompanyUserSubcontractorEventsTasksService } from './services/CompanyUserSubcontractorEventsTasksService';\nimport { CompanyUserSubcontractorEventTaskService } from './services/CompanyUserSubcontractorEventTaskService';\nimport { CompanyUserSubcontractorFileAttachmentService } from './services/CompanyUserSubcontractorFileAttachmentService';\nimport { CompanyUserSubcontractorFileAttachmentsService } from './services/CompanyUserSubcontractorFileAttachmentsService';\nimport { CompanyUserSubcontractorRolesService } from './services/CompanyUserSubcontractorRolesService';\nimport { CompanyUserSubcontractorsService } from './services/CompanyUserSubcontractorsService';\nimport { CompanyUserTagsService } from './services/CompanyUserTagsService';\nimport { CompanyUserTeamsService } from './services/CompanyUserTeamsService';\nimport { CompanyWebhookService } from './services/CompanyWebhookService';\nimport { CompanyWebhooksService } from './services/CompanyWebhooksService';\nimport { DynamicCompanyUserResumeService } from './services/DynamicCompanyUserResumeService';\nimport { KeywordSearchService } from './services/KeywordSearchService';\nimport { MentionsService } from './services/MentionsService';\nimport { PartnersService } from './services/PartnersService';\nimport { ProjectService } from './services/ProjectService';\nimport { ProjectAssignmentService } from './services/ProjectAssignmentService';\nimport { ProjectAssignmentMemberService } from './services/ProjectAssignmentMemberService';\nimport { ProjectAssignmentsService } from './services/ProjectAssignmentsService';\nimport { ProjectAssignmentSkillsService } from './services/ProjectAssignmentSkillsService';\nimport { ProjectEventService } from './services/ProjectEventService';\nimport { ProjectEventsService } from './services/ProjectEventsService';\nimport { ProjectEventsMeetingService } from './services/ProjectEventsMeetingService';\nimport { ProjectEventsMeetingsService } from './services/ProjectEventsMeetingsService';\nimport { ProjectEventsNoteService } from './services/ProjectEventsNoteService';\nimport { ProjectEventsNotesService } from './services/ProjectEventsNotesService';\nimport { ProjectEventsTaskService } from './services/ProjectEventsTaskService';\nimport { ProjectEventsTasksService } from './services/ProjectEventsTasksService';\nimport { ProjectPipelinesService } from './services/ProjectPipelinesService';\nimport { ProjectReferenceService } from './services/ProjectReferenceService';\nimport { ProjectReferencesService } from './services/ProjectReferencesService';\nimport { ProjectsService } from './services/ProjectsService';\nimport { ProjectTagsService } from './services/ProjectTagsService';\nimport { RecruitmentSourcesService } from './services/RecruitmentSourcesService';\nimport { SearchCompanyCandidateService } from './services/SearchCompanyCandidateService';\nimport { SearchCompanyCustomerContactService } from './services/SearchCompanyCustomerContactService';\nimport { SearchCompanyCustomersService } from './services/SearchCompanyCustomersService';\nimport { SearchCompanyUserService } from './services/SearchCompanyUserService';\nimport { SearchProjectService } from './services/SearchProjectService';\nimport { SkillSearchService } from './services/SkillSearchService';\nimport { SkillSearchTermService } from './services/SkillSearchTermService';\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\nexport class Cinode {\n    public readonly absence: AbsenceService;\n    public readonly absences: AbsencesService;\n    public readonly absenceType: AbsenceTypeService;\n    public readonly availability: AvailabilityService;\n    public readonly company: CompanyService;\n    public readonly companyAddressUsers: CompanyAddressUsersService;\n    public readonly companyCandidate: CompanyCandidateService;\n    public readonly companyCandidateEvent: CompanyCandidateEventService;\n    public readonly companyCandidateEventMeeting: CompanyCandidateEventMeetingService;\n    public readonly companyCandidateEventMeetings: CompanyCandidateEventMeetingsService;\n    public readonly companyCandidateEventNote: CompanyCandidateEventNoteService;\n    public readonly companyCandidateEventNotes: CompanyCandidateEventNotesService;\n    public readonly companyCandidateEvents: CompanyCandidateEventsService;\n    public readonly companyCandidateEventTask: CompanyCandidateEventTaskService;\n    public readonly companyCandidateEventTasks: CompanyCandidateEventTasksService;\n    public readonly companyCandidateFileAttachment: CompanyCandidateFileAttachmentService;\n    public readonly companyCandidateFileAttachments: CompanyCandidateFileAttachmentsService;\n    public readonly companyCandidatePipelines: CompanyCandidatePipelinesService;\n    public readonly companyCandidates: CompanyCandidatesService;\n    public readonly companyCandidateSkills: CompanyCandidateSkillsService;\n    public readonly companyCandidateUriAttachment: CompanyCandidateUriAttachmentService;\n    public readonly companyCandidateUriAttachments: CompanyCandidateUriAttachmentsService;\n    public readonly companyCandidateUser: CompanyCandidateUserService;\n    public readonly companyCapabilities: CompanyCapabilitiesService;\n    public readonly companyCurrencies: CompanyCurrenciesService;\n    public readonly companyCustomer: CompanyCustomerService;\n    public readonly companyCustomerAddress: CompanyCustomerAddressService;\n    public readonly companyCustomerContact: CompanyCustomerContactService;\n    public readonly companyCustomerContacts: CompanyCustomerContactsService;\n    public readonly companyCustomerContactTags: CompanyCustomerContactTagsService;\n    public readonly companyCustomerEvent: CompanyCustomerEventService;\n    public readonly companyCustomerEvents: CompanyCustomerEventsService;\n    public readonly companyCustomerEventsMeeting: CompanyCustomerEventsMeetingService;\n    public readonly companyCustomerEventsMeetings: CompanyCustomerEventsMeetingsService;\n    public readonly companyCustomerEventsNote: CompanyCustomerEventsNoteService;\n    public readonly companyCustomerEventsNotes: CompanyCustomerEventsNotesService;\n    public readonly companyCustomerEventsTask: CompanyCustomerEventsTaskService;\n    public readonly companyCustomerEventsTasks: CompanyCustomerEventsTasksService;\n    public readonly companyCustomerFileAttachment: CompanyCustomerFileAttachmentService;\n    public readonly companyCustomerManagers: CompanyCustomerManagersService;\n    public readonly companyCustomers: CompanyCustomersService;\n    public readonly companyCustomersExtended: CompanyCustomersExtendedService;\n    public readonly companyCustomerTags: CompanyCustomerTagsService;\n    public readonly companyImage: CompanyImageService;\n    public readonly companyImages: CompanyImagesService;\n    public readonly companyManagers: CompanyManagersService;\n    public readonly companyProfiles: CompanyProfilesService;\n    public readonly companyProjectFileAttachment: CompanyProjectFileAttachmentService;\n    public readonly companyRecruitmentManagers: CompanyRecruitmentManagersService;\n    public readonly companyResumes: CompanyResumesService;\n    public readonly companySubcontractorGroup: CompanySubcontractorGroupService;\n    public readonly companySubcontractorGroupMembers: CompanySubcontractorGroupMembersService;\n    public readonly companySubcontractorGroups: CompanySubcontractorGroupsService;\n    public readonly companyTag: CompanyTagService;\n    public readonly companyTags: CompanyTagsService;\n    public readonly companyTeam: CompanyTeamService;\n    public readonly companyTeamManagers: CompanyTeamManagersService;\n    public readonly companyTeamMember: CompanyTeamMemberService;\n    public readonly companyTeamMembers: CompanyTeamMembersService;\n    public readonly companyTeams: CompanyTeamsService;\n    public readonly companyTeamUsers: CompanyTeamUsersService;\n    public readonly companyUser: CompanyUserService;\n    public readonly companyUserConvert: CompanyUserConvertService;\n    public readonly companyUserEmployeeEvent: CompanyUserEmployeeEventService;\n    public readonly companyUserEmployeeEventMeeting: CompanyUserEmployeeEventMeetingService;\n    public readonly companyUserEmployeeEventNote: CompanyUserEmployeeEventNoteService;\n    public readonly companyUserEmployeeEvents: CompanyUserEmployeeEventsService;\n    public readonly companyUserEmployeeEventsMeetings: CompanyUserEmployeeEventsMeetingsService;\n    public readonly companyUserEmployeeEventsNotes: CompanyUserEmployeeEventsNotesService;\n    public readonly companyUserEmployeeEventsTasks: CompanyUserEmployeeEventsTasksService;\n    public readonly companyUserEmployeeEventTask: CompanyUserEmployeeEventTaskService;\n    public readonly companyUserFull: CompanyUserFullService;\n    public readonly companyUserPermissions: CompanyUserPermissionsService;\n    public readonly companyUserProfile: CompanyUserProfileService;\n    public readonly companyUserProfileCommitment: CompanyUserProfileCommitmentService;\n    public readonly companyUserProfileEducation: CompanyUserProfileEducationService;\n    public readonly companyUserProfileEmployer: CompanyUserProfileEmployerService;\n    public readonly companyUserProfileExtSkill: CompanyUserProfileExtSkillService;\n    public readonly companyUserProfileImport: CompanyUserProfileImportService;\n    public readonly companyUserProfileLanguage: CompanyUserProfileLanguageService;\n    public readonly companyUserProfileLanguages: CompanyUserProfileLanguagesService;\n    public readonly companyUserProfilePresentation: CompanyUserProfilePresentationService;\n    public readonly companyUserProfileReference: CompanyUserProfileReferenceService;\n    public readonly companyUserProfiles: CompanyUserProfilesService;\n    public readonly companyUserProfileSkill: CompanyUserProfileSkillService;\n    public readonly companyUserProfileTraining: CompanyUserProfileTrainingService;\n    public readonly companyUserProfileWorkExperience: CompanyUserProfileWorkExperienceService;\n    public readonly companyUserResume: CompanyUserResumeService;\n    public readonly companyUserResumes: CompanyUserResumesService;\n    public readonly companyUserRoles: CompanyUserRolesService;\n    public readonly companyUsers: CompanyUsersService;\n    public readonly companyUsersExtended: CompanyUsersExtendedService;\n    public readonly companyUserSkill: CompanyUserSkillService;\n    public readonly companyUserSkills: CompanyUserSkillsService;\n    public readonly companyUserSubcontractor: CompanyUserSubcontractorService;\n    public readonly companyUserSubcontractorEvent: CompanyUserSubcontractorEventService;\n    public readonly companyUserSubcontractorEventMeeting: CompanyUserSubcontractorEventMeetingService;\n    public readonly companyUserSubcontractorEventNote: CompanyUserSubcontractorEventNoteService;\n    public readonly companyUserSubcontractorEvents: CompanyUserSubcontractorEventsService;\n    public readonly companyUserSubcontractorEventsMeetings: CompanyUserSubcontractorEventsMeetingsService;\n    public readonly companyUserSubcontractorEventsNotes: CompanyUserSubcontractorEventsNotesService;\n    public readonly companyUserSubcontractorEventsTasks: CompanyUserSubcontractorEventsTasksService;\n    public readonly companyUserSubcontractorEventTask: CompanyUserSubcontractorEventTaskService;\n    public readonly companyUserSubcontractorFileAttachment: CompanyUserSubcontractorFileAttachmentService;\n    public readonly companyUserSubcontractorFileAttachments: CompanyUserSubcontractorFileAttachmentsService;\n    public readonly companyUserSubcontractorRoles: CompanyUserSubcontractorRolesService;\n    public readonly companyUserSubcontractors: CompanyUserSubcontractorsService;\n    public readonly companyUserTags: CompanyUserTagsService;\n    public readonly companyUserTeams: CompanyUserTeamsService;\n    public readonly companyWebhook: CompanyWebhookService;\n    public readonly companyWebhooks: CompanyWebhooksService;\n    public readonly dynamicCompanyUserResume: DynamicCompanyUserResumeService;\n    public readonly keywordSearch: KeywordSearchService;\n    public readonly mentions: MentionsService;\n    public readonly partners: PartnersService;\n    public readonly project: ProjectService;\n    public readonly projectAssignment: ProjectAssignmentService;\n    public readonly projectAssignmentMember: ProjectAssignmentMemberService;\n    public readonly projectAssignments: ProjectAssignmentsService;\n    public readonly projectAssignmentSkills: ProjectAssignmentSkillsService;\n    public readonly projectEvent: ProjectEventService;\n    public readonly projectEvents: ProjectEventsService;\n    public readonly projectEventsMeeting: ProjectEventsMeetingService;\n    public readonly projectEventsMeetings: ProjectEventsMeetingsService;\n    public readonly projectEventsNote: ProjectEventsNoteService;\n    public readonly projectEventsNotes: ProjectEventsNotesService;\n    public readonly projectEventsTask: ProjectEventsTaskService;\n    public readonly projectEventsTasks: ProjectEventsTasksService;\n    public readonly projectPipelines: ProjectPipelinesService;\n    public readonly projectReference: ProjectReferenceService;\n    public readonly projectReferences: ProjectReferencesService;\n    public readonly projects: ProjectsService;\n    public readonly projectTags: ProjectTagsService;\n    public readonly recruitmentSources: RecruitmentSourcesService;\n    public readonly searchCompanyCandidate: SearchCompanyCandidateService;\n    public readonly searchCompanyCustomerContact: SearchCompanyCustomerContactService;\n    public readonly searchCompanyCustomers: SearchCompanyCustomersService;\n    public readonly searchCompanyUser: SearchCompanyUserService;\n    public readonly searchProject: SearchProjectService;\n    public readonly skillSearch: SkillSearchService;\n    public readonly skillSearchTerm: SkillSearchTermService;\n    public readonly request: BaseHttpRequest;\n    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n        this.request = new HttpRequest({\n            BASE: config?.BASE ?? 'https://api.cinode.com',\n            VERSION: config?.VERSION ?? '0.1',\n            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n            CREDENTIALS: config?.CREDENTIALS ?? 'include',\n            TOKEN: config?.TOKEN,\n            USERNAME: config?.USERNAME,\n            PASSWORD: config?.PASSWORD,\n            HEADERS: config?.HEADERS,\n            ENCODE_PATH: config?.ENCODE_PATH,\n        });\n        this.absence = new AbsenceService(this.request);\n        this.absences = new AbsencesService(this.request);\n        this.absenceType = new AbsenceTypeService(this.request);\n        this.availability = new AvailabilityService(this.request);\n        this.company = new CompanyService(this.request);\n        this.companyAddressUsers = new CompanyAddressUsersService(this.request);\n        this.companyCandidate = new CompanyCandidateService(this.request);\n        this.companyCandidateEvent = new CompanyCandidateEventService(this.request);\n        this.companyCandidateEventMeeting = new CompanyCandidateEventMeetingService(this.request);\n        this.companyCandidateEventMeetings = new CompanyCandidateEventMeetingsService(this.request);\n        this.companyCandidateEventNote = new CompanyCandidateEventNoteService(this.request);\n        this.companyCandidateEventNotes = new CompanyCandidateEventNotesService(this.request);\n        this.companyCandidateEvents = new CompanyCandidateEventsService(this.request);\n        this.companyCandidateEventTask = new CompanyCandidateEventTaskService(this.request);\n        this.companyCandidateEventTasks = new CompanyCandidateEventTasksService(this.request);\n        this.companyCandidateFileAttachment = new CompanyCandidateFileAttachmentService(this.request);\n        this.companyCandidateFileAttachments = new CompanyCandidateFileAttachmentsService(this.request);\n        this.companyCandidatePipelines = new CompanyCandidatePipelinesService(this.request);\n        this.companyCandidates = new CompanyCandidatesService(this.request);\n        this.companyCandidateSkills = new CompanyCandidateSkillsService(this.request);\n        this.companyCandidateUriAttachment = new CompanyCandidateUriAttachmentService(this.request);\n        this.companyCandidateUriAttachments = new CompanyCandidateUriAttachmentsService(this.request);\n        this.companyCandidateUser = new CompanyCandidateUserService(this.request);\n        this.companyCapabilities = new CompanyCapabilitiesService(this.request);\n        this.companyCurrencies = new CompanyCurrenciesService(this.request);\n        this.companyCustomer = new CompanyCustomerService(this.request);\n        this.companyCustomerAddress = new CompanyCustomerAddressService(this.request);\n        this.companyCustomerContact = new CompanyCustomerContactService(this.request);\n        this.companyCustomerContacts = new CompanyCustomerContactsService(this.request);\n        this.companyCustomerContactTags = new CompanyCustomerContactTagsService(this.request);\n        this.companyCustomerEvent = new CompanyCustomerEventService(this.request);\n        this.companyCustomerEvents = new CompanyCustomerEventsService(this.request);\n        this.companyCustomerEventsMeeting = new CompanyCustomerEventsMeetingService(this.request);\n        this.companyCustomerEventsMeetings = new CompanyCustomerEventsMeetingsService(this.request);\n        this.companyCustomerEventsNote = new CompanyCustomerEventsNoteService(this.request);\n        this.companyCustomerEventsNotes = new CompanyCustomerEventsNotesService(this.request);\n        this.companyCustomerEventsTask = new CompanyCustomerEventsTaskService(this.request);\n        this.companyCustomerEventsTasks = new CompanyCustomerEventsTasksService(this.request);\n        this.companyCustomerFileAttachment = new CompanyCustomerFileAttachmentService(this.request);\n        this.companyCustomerManagers = new CompanyCustomerManagersService(this.request);\n        this.companyCustomers = new CompanyCustomersService(this.request);\n        this.companyCustomersExtended = new CompanyCustomersExtendedService(this.request);\n        this.companyCustomerTags = new CompanyCustomerTagsService(this.request);\n        this.companyImage = new CompanyImageService(this.request);\n        this.companyImages = new CompanyImagesService(this.request);\n        this.companyManagers = new CompanyManagersService(this.request);\n        this.companyProfiles = new CompanyProfilesService(this.request);\n        this.companyProjectFileAttachment = new CompanyProjectFileAttachmentService(this.request);\n        this.companyRecruitmentManagers = new CompanyRecruitmentManagersService(this.request);\n        this.companyResumes = new CompanyResumesService(this.request);\n        this.companySubcontractorGroup = new CompanySubcontractorGroupService(this.request);\n        this.companySubcontractorGroupMembers = new CompanySubcontractorGroupMembersService(this.request);\n        this.companySubcontractorGroups = new CompanySubcontractorGroupsService(this.request);\n        this.companyTag = new CompanyTagService(this.request);\n        this.companyTags = new CompanyTagsService(this.request);\n        this.companyTeam = new CompanyTeamService(this.request);\n        this.companyTeamManagers = new CompanyTeamManagersService(this.request);\n        this.companyTeamMember = new CompanyTeamMemberService(this.request);\n        this.companyTeamMembers = new CompanyTeamMembersService(this.request);\n        this.companyTeams = new CompanyTeamsService(this.request);\n        this.companyTeamUsers = new CompanyTeamUsersService(this.request);\n        this.companyUser = new CompanyUserService(this.request);\n        this.companyUserConvert = new CompanyUserConvertService(this.request);\n        this.companyUserEmployeeEvent = new CompanyUserEmployeeEventService(this.request);\n        this.companyUserEmployeeEventMeeting = new CompanyUserEmployeeEventMeetingService(this.request);\n        this.companyUserEmployeeEventNote = new CompanyUserEmployeeEventNoteService(this.request);\n        this.companyUserEmployeeEvents = new CompanyUserEmployeeEventsService(this.request);\n        this.companyUserEmployeeEventsMeetings = new CompanyUserEmployeeEventsMeetingsService(this.request);\n        this.companyUserEmployeeEventsNotes = new CompanyUserEmployeeEventsNotesService(this.request);\n        this.companyUserEmployeeEventsTasks = new CompanyUserEmployeeEventsTasksService(this.request);\n        this.companyUserEmployeeEventTask = new CompanyUserEmployeeEventTaskService(this.request);\n        this.companyUserFull = new CompanyUserFullService(this.request);\n        this.companyUserPermissions = new CompanyUserPermissionsService(this.request);\n        this.companyUserProfile = new CompanyUserProfileService(this.request);\n        this.companyUserProfileCommitment = new CompanyUserProfileCommitmentService(this.request);\n        this.companyUserProfileEducation = new CompanyUserProfileEducationService(this.request);\n        this.companyUserProfileEmployer = new CompanyUserProfileEmployerService(this.request);\n        this.companyUserProfileExtSkill = new CompanyUserProfileExtSkillService(this.request);\n        this.companyUserProfileImport = new CompanyUserProfileImportService(this.request);\n        this.companyUserProfileLanguage = new CompanyUserProfileLanguageService(this.request);\n        this.companyUserProfileLanguages = new CompanyUserProfileLanguagesService(this.request);\n        this.companyUserProfilePresentation = new CompanyUserProfilePresentationService(this.request);\n        this.companyUserProfileReference = new CompanyUserProfileReferenceService(this.request);\n        this.companyUserProfiles = new CompanyUserProfilesService(this.request);\n        this.companyUserProfileSkill = new CompanyUserProfileSkillService(this.request);\n        this.companyUserProfileTraining = new CompanyUserProfileTrainingService(this.request);\n        this.companyUserProfileWorkExperience = new CompanyUserProfileWorkExperienceService(this.request);\n        this.companyUserResume = new CompanyUserResumeService(this.request);\n        this.companyUserResumes = new CompanyUserResumesService(this.request);\n        this.companyUserRoles = new CompanyUserRolesService(this.request);\n        this.companyUsers = new CompanyUsersService(this.request);\n        this.companyUsersExtended = new CompanyUsersExtendedService(this.request);\n        this.companyUserSkill = new CompanyUserSkillService(this.request);\n        this.companyUserSkills = new CompanyUserSkillsService(this.request);\n        this.companyUserSubcontractor = new CompanyUserSubcontractorService(this.request);\n        this.companyUserSubcontractorEvent = new CompanyUserSubcontractorEventService(this.request);\n        this.companyUserSubcontractorEventMeeting = new CompanyUserSubcontractorEventMeetingService(this.request);\n        this.companyUserSubcontractorEventNote = new CompanyUserSubcontractorEventNoteService(this.request);\n        this.companyUserSubcontractorEvents = new CompanyUserSubcontractorEventsService(this.request);\n        this.companyUserSubcontractorEventsMeetings = new CompanyUserSubcontractorEventsMeetingsService(this.request);\n        this.companyUserSubcontractorEventsNotes = new CompanyUserSubcontractorEventsNotesService(this.request);\n        this.companyUserSubcontractorEventsTasks = new CompanyUserSubcontractorEventsTasksService(this.request);\n        this.companyUserSubcontractorEventTask = new CompanyUserSubcontractorEventTaskService(this.request);\n        this.companyUserSubcontractorFileAttachment = new CompanyUserSubcontractorFileAttachmentService(this.request);\n        this.companyUserSubcontractorFileAttachments = new CompanyUserSubcontractorFileAttachmentsService(this.request);\n        this.companyUserSubcontractorRoles = new CompanyUserSubcontractorRolesService(this.request);\n        this.companyUserSubcontractors = new CompanyUserSubcontractorsService(this.request);\n        this.companyUserTags = new CompanyUserTagsService(this.request);\n        this.companyUserTeams = new CompanyUserTeamsService(this.request);\n        this.companyWebhook = new CompanyWebhookService(this.request);\n        this.companyWebhooks = new CompanyWebhooksService(this.request);\n        this.dynamicCompanyUserResume = new DynamicCompanyUserResumeService(this.request);\n        this.keywordSearch = new KeywordSearchService(this.request);\n        this.mentions = new MentionsService(this.request);\n        this.partners = new PartnersService(this.request);\n        this.project = new ProjectService(this.request);\n        this.projectAssignment = new ProjectAssignmentService(this.request);\n        this.projectAssignmentMember = new ProjectAssignmentMemberService(this.request);\n        this.projectAssignments = new ProjectAssignmentsService(this.request);\n        this.projectAssignmentSkills = new ProjectAssignmentSkillsService(this.request);\n        this.projectEvent = new ProjectEventService(this.request);\n        this.projectEvents = new ProjectEventsService(this.request);\n        this.projectEventsMeeting = new ProjectEventsMeetingService(this.request);\n        this.projectEventsMeetings = new ProjectEventsMeetingsService(this.request);\n        this.projectEventsNote = new ProjectEventsNoteService(this.request);\n        this.projectEventsNotes = new ProjectEventsNotesService(this.request);\n        this.projectEventsTask = new ProjectEventsTaskService(this.request);\n        this.projectEventsTasks = new ProjectEventsTasksService(this.request);\n        this.projectPipelines = new ProjectPipelinesService(this.request);\n        this.projectReference = new ProjectReferenceService(this.request);\n        this.projectReferences = new ProjectReferencesService(this.request);\n        this.projects = new ProjectsService(this.request);\n        this.projectTags = new ProjectTagsService(this.request);\n        this.recruitmentSources = new RecruitmentSourcesService(this.request);\n        this.searchCompanyCandidate = new SearchCompanyCandidateService(this.request);\n        this.searchCompanyCustomerContact = new SearchCompanyCustomerContactService(this.request);\n        this.searchCompanyCustomers = new SearchCompanyCustomersService(this.request);\n        this.searchCompanyUser = new SearchCompanyUserService(this.request);\n        this.searchProject = new SearchProjectService(this.request);\n        this.skillSearch = new SkillSearchService(this.request);\n        this.skillSearchTerm = new SkillSearchTermService(this.request);\n    }\n}\n\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class AxiosHttpRequest extends BaseHttpRequest {\n\n    constructor(config: OpenAPIConfig) {\n        super(config);\n    }\n\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */\n    public override request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n        return __request(this.config, options);\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n    constructor(public readonly config: OpenAPIConfig) {}\n\n    public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse, AxiosInstance } from 'axios';\nimport FormData from 'form-data';\n\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const isSuccess = (status: number): boolean => {\n    return status >= 200 && status < 300;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions, formData?: FormData): Promise<Record<string, string>> => {\n    const [token, username, password, additionalHeaders] = await Promise.all([\n        resolve(options, config.TOKEN),\n        resolve(options, config.USERNAME),\n        resolve(options, config.PASSWORD),\n        resolve(options, config.HEADERS),\n    ]);\n\n    const formHeaders = typeof formData?.getHeaders === 'function' && formData?.getHeaders() || {}\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n        ...formHeaders,\n    })\n    .filter(([_, value]) => isDefined(value))\n    .reduce((headers, [key, value]) => ({\n        ...headers,\n        [key]: String(value),\n    }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return headers;\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        return options.body;\n    }\n    return undefined;\n};\n\nexport const sendRequest = async <T>(\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Record<string, string>,\n    onCancel: OnCancel,\n    axiosClient: AxiosInstance\n): Promise<AxiosResponse<T>> => {\n    const source = axios.CancelToken.source();\n\n    const requestConfig: AxiosRequestConfig = {\n        url,\n        headers,\n        data: body ?? formData,\n        method: options.method,\n        withCredentials: config.WITH_CREDENTIALS,\n        cancelToken: source.token,\n    };\n\n    onCancel(() => source.cancel('The user aborted a request.'));\n\n    try {\n        return await axiosClient.request(requestConfig);\n    } catch (error) {\n        const axiosError = error as AxiosError<T>;\n        if (axiosError.response) {\n            return axiosError.response;\n        }\n        throw error;\n    }\n};\n\nexport const getResponseHeader = (response: AxiosResponse<any>, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers[responseHeader];\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = (response: AxiosResponse<any>): any => {\n    if (response.status !== 204) {\n        return response.data;\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @param axiosClient The axios client instance to use\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions, axiosClient: AxiosInstance = axios): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options, formData);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel, axiosClient);\n                const responseBody = getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: isSuccess(response.status),\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.6.7\";","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                if (this.#resolve) this.#resolve(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                if (this.#reject) this.#reject(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        if (this.#reject) this.#reject(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsenceAddEditModel } from '../models/AbsenceAddEditModel';\nimport type { AbsencePeriodModel } from '../models/AbsencePeriodModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence period by id\n     * @param companyId Your company id\n     * @param companyUserId The id of the actual user\n     * @param id The id for the requested absence period\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */\n    public absence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Absence Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns AbsencePeriodModel All went well\n     * @throws ApiError\n     */\n    public updateAbsence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: AbsenceAddEditModel,\n    ): CancelablePromise<AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete absence\n     * @param companyId Company Id\n     * @param companyUserId Customer Id\n     * @param id Customer Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteAbsence(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Absence Item for User\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns AbsencePeriodModel Created\n     * @throws ApiError\n     */\n    public newAbsence(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: AbsenceAddEditModel,\n    ): CancelablePromise<any | AbsencePeriodModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsencePeriodDtoModel } from '../models/AbsencePeriodDtoModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsencesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence period by company user id\n     * @param companyId Your Cinode Company id\n     * @param companyUserId The id of the actual User\n     * @returns AbsencePeriodDtoModel All went well\n     * @throws ApiError\n     */\n    public absences(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<AbsencePeriodDtoModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/absences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AbsenceTypeModel } from '../models/AbsenceTypeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AbsenceTypeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get absence types for company\n     * @param companyId\n     * @returns AbsenceTypeModel All went well\n     * @throws ApiError\n     */\n    public absenceTypes(\n        companyId: number,\n    ): CancelablePromise<Array<AbsenceTypeModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/absence/types',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AvailabilityFilterModel } from '../models/AvailabilityFilterModel';\nimport type { AvailabilityModel } from '../models/AvailabilityModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class AvailabilityService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get availability for company users. Omitting companyUserId gets availability for all company users in company.\n     * @param companyId Your Cinode Company id\n     * @param requestBody Filter options\n     * @returns AvailabilityModel All went well\n     * @throws ApiError\n     */\n    public searchAvailability(\n        companyId: number,\n        requestBody?: AvailabilityFilterModel,\n    ): CancelablePromise<Array<AvailabilityModel>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/availability',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyModel } from '../models/CompanyModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company by id\n     * @param companyId CompanyId\n     * @returns CompanyModel All went well\n     * @throws ApiError\n     */\n    public company(\n        companyId: number,\n    ): CancelablePromise<CompanyModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyAddressUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list for an address\n     * @param companyId Company Id\n     * @param id Address Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyAddressUsers(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/addresses/{id}/users',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateAddInviteModel } from '../models/CompanyCandidateAddInviteModel';\nimport type { CompanyCandidateAddModel } from '../models/CompanyCandidateAddModel';\nimport type { CompanyCandidateExtendedModel } from '../models/CompanyCandidateExtendedModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */\n    public candidate(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyCandidatePatchDocument` for full type information per property\n     * @returns CompanyCandidateExtendedModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete candidate from the system\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidate(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param requestBody CompanyCandidateAddModel\n     * @returns any All went well\n     * @returns CompanyCandidateExtendedModel Created\n     * @throws ApiError\n     */\n    public addCompanyCandidate(\n        companyId: number,\n        requestBody?: CompanyCandidateAddModel,\n    ): CancelablePromise<any | CompanyCandidateExtendedModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Invite the CompanyCandidate to create their own Cinode account\n     * A email is sent with your message and details for how to login\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Model with data about the candidate needed for the invitation\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public inviteCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyCandidateAddInviteModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/invite',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventModel } from '../models/CompanyCandidateEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates event by id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEvent(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventMeetingModel } from '../models/CompanyCandidateEventMeetingModel';\nimport type { EventMeetingAddEditModel } from '../models/EventMeetingAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates meeting event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Meeting Event details\n     * @returns CompanyCandidateEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventMeetingAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate meeting event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new meeting event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Meeting Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventMeeting(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events meetings list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateMeetingEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventNoteModel } from '../models/CompanyCandidateEventNoteModel';\nimport type { EventNoteAddEditModel } from '../models/EventNoteAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates note event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Note Event details\n     * @returns CompanyCandidateEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventNoteAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate note event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new note event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Note Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventNote(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events notes list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateNoteEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEvents(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventTaskModel } from '../models/CompanyCandidateEventTaskModel';\nimport type { EventTaskAddEditModel } from '../models/EventTaskAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates task event with specified id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @param requestBody Task Event details\n     * @returns CompanyCandidateEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n        requestBody?: EventTaskAddEditModel,\n    ): CancelablePromise<CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete company candidate task event\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add new task event for company candidate\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @param requestBody Task Event details\n     * @returns any All went well\n     * @returns CompanyCandidateEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyCandidateEventTask(\n        companyId: number,\n        candidateId: number,\n        requestBody?: EventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyCandidateEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateEventBaseModel } from '../models/CompanyCandidateEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateEventTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates events tasks list\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param candidateId CandidateId Id\n     * @returns CompanyCandidateEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCandidateTaskEventList(\n        companyId: number,\n        candidateId: number,\n    ): CancelablePromise<Array<CompanyCandidateEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'candidateId': candidateId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate File Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getCandidateAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateFileAttachmentListModel } from '../models/CompanyCandidateFileAttachmentListModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateFileAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Upload Candidate File Attachment\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyCandidateFileAttachmentListModel Created\n     * @throws ApiError\n     */\n    public candidateAttachment(\n        id: number,\n        companyId: number,\n        formData?: {\n            Files: Array<Blob>;\n            Title: string;\n            Description?: string;\n        },\n    ): CancelablePromise<CompanyCandidateFileAttachmentListModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/attachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidatePipelineModel } from '../models/CompanyCandidatePipelineModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidatePipelinesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get candidate pipelines\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidatePipelineModel All went well\n     * @throws ApiError\n     */\n    public candidatePipelines(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCandidatePipelineModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/pipelines',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateBaseModel } from '../models/CompanyCandidateBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidatesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidates\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyCandidateBaseModel All went well\n     * @throws ApiError\n     */\n    public candidates(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCandidateBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateSkillAddModel } from '../models/CompanyCandidateSkillAddModel';\nimport type { CompanyCandidateSkillModel } from '../models/CompanyCandidateSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add a Skill to company candidate\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/19870/skills\n     * {\n         * \"name\": \"SQL\",\n         * \"companyCandidateId\": 19870,\n         * \"keywordSynonymId\": 577,\n         * \"languageId\":1\n         * }\n         * @param companyId Company Id\n         * @param candidateId CandidateId Id\n         * @param requestBody CompanyCandidateSkillAddEditModel\n         * @returns CompanyCandidateSkillModel All went well\n         * @throws ApiError\n         */\n        public newCompanyCandidateSkill(\n            companyId: number,\n            candidateId: number,\n            requestBody?: CompanyCandidateSkillAddModel,\n        ): CancelablePromise<CompanyCandidateSkillModel> {\n            return this.httpRequest.request({\n                method: 'POST',\n                url: '/v0.1/companies/{companyId}/candidates/{candidateId}/skills',\n                path: {\n                    'companyId': companyId,\n                    'candidateId': candidateId,\n                },\n                body: requestBody,\n                mediaType: 'application/json-patch+json',\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    403: `Forbidden request`,\n                    404: `Resource not found`,\n                    500: `Server error`,\n                },\n            });\n        }\n        /**\n         * Delete Candidate Skill\n         * Sample request:\n         *\n         * DELETE /v0.1/companies/1/candidates/19870/skills/577\n         * @param companyId Company Id\n         * @param candidateId CandidateId Id\n         * @param id Skill Keyword Id\n         * @returns any All went well\n         * @throws ApiError\n         */\n        public deleteCompanyCandidateSkill(\n            companyId: number,\n            candidateId: number,\n            id: number,\n        ): CancelablePromise<any> {\n            return this.httpRequest.request({\n                method: 'DELETE',\n                url: '/v0.1/companies/{companyId}/candidates/{candidateId}/skills/{id}',\n                path: {\n                    'companyId': companyId,\n                    'candidateId': candidateId,\n                    'id': id,\n                },\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateUriAttachmentAddModel } from '../models/CompanyCandidateUriAttachmentAddModel';\nimport type { CompanyCandidateUriAttachmentModel } from '../models/CompanyCandidateUriAttachmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUriAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param requestBody\n     * @returns CompanyCandidateUriAttachmentModel Created\n     * @throws ApiError\n     */\n    public candidateUriAttachment(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCandidateUriAttachmentAddModel,\n    ): CancelablePromise<CompanyCandidateUriAttachmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n    /**\n     * Delete Candidate Uri (Link)\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param attachmentId\n     * @returns any Success\n     * @throws ApiError\n     */\n    public deleteCandidateUriAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateUriAttachmentModel } from '../models/CompanyCandidateUriAttachmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUriAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Candidate Uri Attachment by Id\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns CompanyCandidateUriAttachmentModel All went well\n     * @throws ApiError\n     */\n    public getCandidateUriAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<CompanyCandidateUriAttachmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCandidateAddCandidateUserModel } from '../models/CompanyCandidateAddCandidateUserModel';\nimport type { CompanyUserCandidateModel } from '../models/CompanyUserCandidateModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCandidateUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Create an account for a candidate.\n     * No email is sent to the candidate, you will have to communicate login details to the candidate yourself.\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @param id Candidate Id\n     * @param requestBody Basic account information\n     * @returns CompanyUserCandidateModel All went well\n     * @throws ApiError\n     */\n    public addCandidateUserFromCandidate(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyCandidateAddCandidateUserModel,\n    ): CancelablePromise<CompanyUserCandidateModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/candidates/{id}/user',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCapabilitiesModel } from '../models/CompanyCapabilitiesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCapabilitiesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company capabilities\n     * @param companyId CompanyId\n     * @returns CompanyCapabilitiesModel All went well\n     * @throws ApiError\n     */\n    public companyCapabilities(\n        companyId: number,\n    ): CancelablePromise<CompanyCapabilitiesModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/capabilities',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CurrencyModel } from '../models/CurrencyModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCurrenciesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company currencies\n     * @param companyId Company Id\n     * @returns CurrencyModel All went well\n     * @throws ApiError\n     */\n    public companyCurrencies(\n        companyId: number,\n    ): CancelablePromise<Array<CurrencyModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/currencies',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerAddModel } from '../models/CompanyCustomerAddModel';\nimport type { CompanyCustomerDeleteModel } from '../models/CompanyCustomerDeleteModel';\nimport type { CompanyCustomerEditModel } from '../models/CompanyCustomerEditModel';\nimport type { CompanyCustomerModel } from '../models/CompanyCustomerModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customer by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId\n     * @param id\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public getCompanyCustomer(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param requestBody CompanyCustomerAddEditModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCustomerEditModel,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody Patch of CompanyCustomerPatchModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id Customer Id\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerDeleteModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomer(\n        id: number,\n        companyId: number,\n        requestBody?: CompanyCustomerDeleteModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add company customer\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody CompanyCustomerAddModel\n     * @returns CompanyCustomerModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomer(\n        companyId: number,\n        requestBody?: CompanyCustomerAddModel,\n    ): CancelablePromise<CompanyCustomerModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerAddressAddEditModel } from '../models/CompanyCustomerAddressAddEditModel';\nimport type { CompanyCustomerAddressModel } from '../models/CompanyCustomerAddressModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerAddressService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer address by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public customerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Customer Address Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public editCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n        requestBody?: CompanyCustomerAddressAddEditModel,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Address Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer address\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerAddressAddEditModel\n     * @returns CompanyCustomerAddressModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomerAddress(\n        companyId: number,\n        customerId: number,\n        requestBody?: CompanyCustomerAddressAddEditModel,\n    ): CancelablePromise<CompanyCustomerAddressModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/addresses',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerContactAddEditModel } from '../models/CompanyCustomerContactAddEditModel';\nimport type { CompanyCustomerContactModel } from '../models/CompanyCustomerContactModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer contact by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public contact(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public editCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        id: number,\n        requestBody?: CompanyCustomerContactAddEditModel,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Contact Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer contact\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CompanyCustomerContactAddEditModel\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public newCompanyCustomerContact(\n        companyId: number,\n        customerId: number,\n        requestBody?: CompanyCustomerContactAddEditModel,\n    ): CancelablePromise<CompanyCustomerContactModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerContactModel } from '../models/CompanyCustomerContactModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer contact list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerContactModel All went well\n     * @throws ApiError\n     */\n    public contacts(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CompanyCustomerContactModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerContactTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for CustomerContact\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the contact.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/contacts/5360/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param contactId CustomerContact Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyTagModel All went well\n                 * @throws ApiError\n                 */\n                public editCustomerContactTags(\n                    companyId: number,\n                    customerId: number,\n                    contactId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<Array<CompanyTagModel>> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/customers/{customerId}/contacts/{contactId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'customerId': customerId,\n                            'contactId': contactId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventModel } from '../models/CustomerEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEvent(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer events list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEvents(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventMeetingAddEditModel } from '../models/CustomerEventMeetingAddEditModel';\nimport type { CustomerEventMeetingModel } from '../models/CustomerEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event meeting by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventMeetingAddEditModel,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteMeeting(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event meeting\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public newMeeting(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventMeetingAddEditModel,\n    ): CancelablePromise<CustomerEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event meetings list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventMeetings(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventNoteAddEditModel } from '../models/CustomerEventNoteAddEditModel';\nimport type { CustomerEventNoteModel } from '../models/CustomerEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event note by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventMeetingAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventNoteAddEditModel,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteNote(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event note\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventNoteAddEditModel\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public newNote(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventNoteAddEditModel,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event notes list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventNotes(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventTaskAddEditModel } from '../models/CustomerEventTaskAddEditModel';\nimport type { CustomerEventTaskModel } from '../models/CustomerEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event task by id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n        requestBody?: CustomerEventTaskAddEditModel,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteTask(\n        companyId: number,\n        customerId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer event task\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @param requestBody CustomerEventTaskAddEditModel\n     * @returns CustomerEventTaskModel All went well\n     * @throws ApiError\n     */\n    public newTask(\n        companyId: number,\n        customerId: number,\n        requestBody?: CustomerEventTaskAddEditModel,\n    ): CancelablePromise<CustomerEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventBaseModel } from '../models/CustomerEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer event tasks list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CustomerEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerEventTasks(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CustomerEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getCustomerAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerManagerModel } from '../models/CompanyCustomerManagerModel';\nimport type { CompanyCustomerManagersAddEditModel } from '../models/CompanyCustomerManagersAddEditModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get customer managers\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param customerId Customer Id\n     * @returns CompanyCustomerManagerModel All went well\n     * @throws ApiError\n     */\n    public companyCustomerManagers(\n        companyId: number,\n        customerId: number,\n    ): CancelablePromise<Array<CompanyCustomerManagerModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/{customerId}/managers',\n            path: {\n                'companyId': companyId,\n                'customerId': customerId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add customer responsible\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/22228/managers\n     * {\n         * [\n             * 51096\n             * ]\n             * }\n             * @param companyId Company Id\n             * @param customerId Customer Id\n             * @param requestBody CompanyCustomerManagersAddEditModel\n             * @returns CompanyCustomerManagerModel All went well\n             * @throws ApiError\n             */\n            public addCompanyCustomerResponsible(\n                companyId: number,\n                customerId: number,\n                requestBody?: CompanyCustomerManagersAddEditModel,\n            ): CancelablePromise<Array<CompanyCustomerManagerModel>> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/customers/{customerId}/managers',\n                    path: {\n                        'companyId': companyId,\n                        'customerId': customerId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        403: `Forbidden`,\n                        404: `Not Found`,\n                        500: `Server error`,\n                    },\n                });\n            }\n            /**\n             * Remove customer responsible\n             * Sample request:\n             *\n             * DELETE /v0.1/companies/1/customers/22228/managers/54632\n             * @param companyId Company Id\n             * @param customerId Customer Id\n             * @param id User Id\n             * @returns any All went well\n             * @throws ApiError\n             */\n            public removeCustomerManager(\n                companyId: number,\n                customerId: number,\n                id: number,\n            ): CancelablePromise<any> {\n                return this.httpRequest.request({\n                    method: 'DELETE',\n                    url: '/v0.1/companies/{companyId}/customers/{customerId}/managers/{id}',\n                    path: {\n                        'companyId': companyId,\n                        'customerId': customerId,\n                        'id': id,\n                    },\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerBaseModel } from '../models/CompanyCustomerBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerBaseModel All went well\n     * @throws ApiError\n     */\n    public companyCustomers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCustomerBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerExtendedModel } from '../models/CompanyCustomerExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomersExtendedService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get extended company customers list\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @returns CompanyCustomerExtendedModel All went well\n     * @throws ApiError\n     */\n    public customersExtended(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyCustomerExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/customers/extended',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyCustomerModel } from '../models/CompanyCustomerModel';\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyCustomerTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for Customer\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the customer.\n     * A new tag will be created if the Id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/customers/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param customerId Customer Id\n                 * @param requestBody CompanyTagModel\n                 * @returns CompanyCustomerModel All went well\n                 * @throws ApiError\n                 */\n                public editCustomerTags(\n                    companyId: number,\n                    customerId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<CompanyCustomerModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/customers/{customerId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'customerId': customerId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyImageModel } from '../models/CompanyImageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyImageService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Company Image by Id\n     * @param companyId Company Id\n     * @param id Image id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public companyImage(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyImageModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/images/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Download Company Image\n     * @param companyId Company Id\n     * @param id Image id\n     * @param imageFileName Image File Name\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public companyImageDownload(\n        companyId: number,\n        id: number,\n        imageFileName: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/images/{id}/{imageFileName}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n                'imageFileName': imageFileName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyImageModel } from '../models/CompanyImageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyImagesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Company Images Assigned to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public companyImages(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyImageModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}/images',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Image to User\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param formData\n     * @returns CompanyImageModel All went well\n     * @throws ApiError\n     */\n    public addCompanyImage(\n        companyId: number,\n        id: number,\n        formData?: {\n            File: Blob;\n            SetAsPrimary?: boolean;\n        },\n    ): CancelablePromise<CompanyImageModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{id}/images',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserBaseModel } from '../models/CompanyUserBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company managers\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/managers\n     * @param companyId Company Id\n     * @returns CompanyUserBaseModel All went well\n     * @throws ApiError\n     */\n    public companyManagers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/managers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyProfileFilterModel } from '../models/CompanyProfileFilterModel';\nimport type { CompanyProfilesModel } from '../models/CompanyProfilesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyProfilesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profiles list\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/profiles\n     * {\n         * \"createdOffsetDays\": 90,\n         * \"updatedOffsetDays\": 30,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15,\n             * \"order\": 0,\n             * \"sortBy\": 1\n             * }\n             * }\n             * @param companyId Company Id\n             * @param requestBody Company Profile Filter\n             * @returns CompanyProfilesModel All went well\n             * @throws ApiError\n             */\n            public companyProfiles(\n                companyId: number,\n                requestBody?: CompanyProfileFilterModel,\n            ): CancelablePromise<CompanyProfilesModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/profiles',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        403: `Forbidden request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyProjectFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Project file attachment by Id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getProjectAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyRecruitmentManagerModel } from '../models/CompanyRecruitmentManagerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyRecruitmentManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get recruitment managers\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns CompanyRecruitmentManagerModel All went well\n     * @throws ApiError\n     */\n    public recruitmentManagers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyRecruitmentManagerModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/recruitment/managers',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserResumeBaseModel } from '../models/CompanyUserResumeBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyResumesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */\n    public companyResumes(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserResumeBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/resumes',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanySubcontractorGroupModel } from '../models/CompanySubcontractorGroupModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Subcontractor Group by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */\n    public getCompanySubcontractorGroup(\n        companyId: number,\n        subcontractorGroupId: number,\n    ): CancelablePromise<CompanySubcontractorGroupModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AddCompanySubcontractorGroupMemberModel } from '../models/AddCompanySubcontractorGroupMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupMembersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param requestBody AddCompanySubcontractorGroupMemberModel\n     * @returns void\n     * @throws ApiError\n     */\n    public addCompanySubcontractorGroupMember(\n        companyId: number,\n        subcontractorGroupId: number,\n        requestBody?: AddCompanySubcontractorGroupMemberModel,\n    ): CancelablePromise<void> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete subcontractor group member\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorGroupId Subcontractor Group Id\n     * @param id Subcontractor Id\n     * @returns void\n     * @throws ApiError\n     */\n    public deleteCompanySubcontractorGroupMember(\n        companyId: number,\n        subcontractorGroupId: number,\n        id: number,\n    ): CancelablePromise<void> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'subcontractorGroupId': subcontractorGroupId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanySubcontractorGroupModel } from '../models/CompanySubcontractorGroupModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanySubcontractorGroupsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Subcontractor Groups by Company Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanySubcontractorGroupModel All went well\n     * @throws ApiError\n     */\n    public getCompanySubcontractorGroups(\n        companyId: number,\n    ): CancelablePromise<Array<CompanySubcontractorGroupModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/groups',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTagService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company tag by Id\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags/1\n     * @param companyId Company Id\n     * @param id Tag Id\n     * @returns CompanyTagModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public companyTag(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyTagModel | any> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/tags/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagBaseModel } from '../models/CompanyTagBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company tags\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/tags\n     * @param companyId Company Id\n     * @returns CompanyTagBaseModel All went well\n     * @throws ApiError\n     */\n    public companyTags(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyTagBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/tags',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamAddEditModel } from '../models/TeamAddEditModel';\nimport type { TeamModel } from '../models/TeamModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team by id\n     * @param companyId Company Id\n     * @param id Event Id\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public team(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update team\n     * Requires access level: CompanyAdmin.\n     * @param id Team Id\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public updateTeam(\n        id: number,\n        companyId: number,\n        requestBody?: TeamAddEditModel,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/teams/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody TeamAddEditModel\n     * @returns TeamModel All went well\n     * @throws ApiError\n     */\n    public newTeam(\n        companyId: number,\n        requestBody?: TeamAddEditModel,\n    ): CancelablePromise<TeamModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { TeamManagerEditModel } from '../models/TeamManagerEditModel';\nimport type { TeamManagerModel } from '../models/TeamManagerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamManagersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team managers\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public teamManagers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/managers',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team manager\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/teams/1234/managers\n     * {\n         * \"teamId\" : 1234,\n         * \"companyUserId\" : 54632\n         * }\n         * @param companyId Company Id\n         * @param teamId\n         * @param requestBody TeamMemberEditModel\n         * @returns TeamManagerModel All went well\n         * @throws ApiError\n         */\n        public addTeamManager(\n            companyId: number,\n            teamId: string,\n            requestBody?: TeamManagerEditModel,\n        ): CancelablePromise<Array<TeamManagerModel>> {\n            return this.httpRequest.request({\n                method: 'POST',\n                url: '/v0.1/companies/{companyId}/teams/{teamId}/managers',\n                path: {\n                    'companyId': companyId,\n                    'teamId': teamId,\n                },\n                body: requestBody,\n                mediaType: 'application/json-patch+json',\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n        /**\n         * Remove team manager\n         * Sample request:\n         *\n         * DELETE /v0.1/companies/1/teams/1234/managers/54632\n         * @param companyId Company Id\n         * @param teamId Team Id\n         * @param id User Id\n         * @returns any All went well\n         * @throws ApiError\n         */\n        public removeTeamManager(\n            companyId: number,\n            teamId: number,\n            id: number,\n        ): CancelablePromise<any> {\n            return this.httpRequest.request({\n                method: 'DELETE',\n                url: '/v0.1/companies/{companyId}/teams/{teamId}/managers/{id}',\n                path: {\n                    'companyId': companyId,\n                    'teamId': teamId,\n                    'id': id,\n                },\n                errors: {\n                    400: `Incorrect request`,\n                    401: `Unauthorized request`,\n                    500: `Server error`,\n                },\n            });\n        }\n    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamMemberAddModel } from '../models/TeamMemberAddModel';\nimport type { TeamMemberEditModel } from '../models/TeamMemberEditModel';\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { TeamMemberMoveModel } from '../models/TeamMemberMoveModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamMemberService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team member\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public getTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberEditModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public updateTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n        requestBody?: TeamMemberEditModel,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public removeTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public addTeamMember(\n        companyId: number,\n        teamId: number,\n        requestBody?: TeamMemberAddModel,\n    ): CancelablePromise<TeamMemberModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Move team member and associated bookings to another team\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User id\n     * @param requestBody TeamMemberMoveModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public moveTeamMember(\n        companyId: number,\n        teamId: number,\n        id: number,\n        requestBody?: TeamMemberMoveModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members/{id}/move',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamMembersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public getTeamMembers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<TeamMemberModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/members',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamBaseModel } from '../models/TeamBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get teams list\n     * @param companyId Company Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */\n    public companyTeams(\n        companyId: number,\n    ): CancelablePromise<Array<TeamBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Not Found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { TeamMemberAddModel } from '../models/TeamMemberAddModel';\nimport type { TeamMemberModel } from '../models/TeamMemberModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyTeamUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * @deprecated\n     * Get team members\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public getTeamUsers(\n        companyId: number,\n        teamId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * @deprecated\n     * Add team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param requestBody TeamMemberAddModel\n     * @returns TeamMemberModel All went well\n     * @throws ApiError\n     */\n    public addTeamUser(\n        companyId: number,\n        teamId: number,\n        requestBody?: TeamMemberAddModel,\n    ): CancelablePromise<Array<TeamMemberModel>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * @deprecated\n     * Remove team member\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param teamId Team Id\n     * @param id User Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public removeTeamUser(\n        companyId: number,\n        teamId: number,\n        id: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/teams/{teamId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'teamId': teamId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserAddModel } from '../models/CompanyUserAddModel';\nimport type { CompanyUserEditModel } from '../models/CompanyUserEditModel';\nimport type { CompanyUserFullModel } from '../models/CompanyUserFullModel';\nimport type { CompanyUserModel } from '../models/CompanyUserModel';\nimport type { JsonPatchDocument } from '../models/JsonPatchDocument';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user by id\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserModel All went well\n     * @throws ApiError\n     */\n    public user(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody CompanyUserEditModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUser(\n        companyId: number,\n        id: number,\n        requestBody?: CompanyUserEditModel,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Patch company user\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param requestBody Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyUserEmployeePatchDocument` for full type information per property\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public patchCompanyUser(\n        companyId: number,\n        id: number,\n        requestBody?: JsonPatchDocument,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'PATCH',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete user from the system\n     * Firstly, the user has to be disconnected, which can be done through a PATCH or PUT\n     * This action is irreversible, use with caution\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @param firstName CompanyUser FirstName\n     * @param lastName CompanyUser LastName\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUser(\n        companyId: number,\n        id: number,\n        firstName?: string,\n        lastName?: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            query: {\n                'firstName': firstName,\n                'lastName': lastName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add company user employee\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserAddModel\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public addCompanyUser(\n        companyId: number,\n        requestBody?: CompanyUserAddModel,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ConvertCompanyUserToAadAccountModel } from '../models/ConvertCompanyUserToAadAccountModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserConvertService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Convert company user employee to an AAD account\n     * Requires access level: CompanyAdmin.\n     * @param companyUserId Company User Id\n     * @param companyId\n     * @param requestBody ConvertCompanyUserToAadAccountModel\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public convertUserToAadAccount(\n        companyUserId: number,\n        companyId: string,\n        requestBody?: ConvertCompanyUserToAadAccountModel,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/convert-aad',\n            path: {\n                'companyUserId': companyUserId,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventModel } from '../models/CompanyUserEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEvent(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventMeetingAddEditModel } from '../models/CompanyUserEventMeetingAddEditModel';\nimport type { CompanyUserEventMeetingModel } from '../models/CompanyUserEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new employee meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventNoteAddEditModel } from '../models/CompanyUserEventNoteAddEditModel';\nimport type { CompanyUserEventNoteModel } from '../models/CompanyUserEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new employee note event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventNote(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEvents(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee meetings events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventMeetingList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee notes events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventNoteList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get employee tasks events list\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventTaskList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventTaskAddEditModel } from '../models/CompanyUserEventTaskAddEditModel';\nimport type { CompanyUserEventTaskModel } from '../models/CompanyUserEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserEmployeeEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Creates new employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get employee task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates employee's task event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: CompanyManager.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserEmployeeEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserFullModel } from '../models/CompanyUserFullModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserFullService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user, including financial fields, by id\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserFullModel All went well\n     * @throws ApiError\n     */\n    public userFull(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserFullModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users-full/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserPermissionsEditModel } from '../models/CompanyUserPermissionsEditModel';\nimport type { RoleModel } from '../models/RoleModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserPermissionsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Update Permissions for Company User\n     * Requires access level: CompanyAdmin.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserPermissionsEditModel\n     * @returns RoleModel All went well\n     * @throws ApiError\n     */\n    public updatePermissions(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserPermissionsEditModel,\n    ): CancelablePromise<Array<RoleModel>> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/permissions',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileAddEditModel } from '../models/CompanyUserProfileAddEditModel';\nimport type { CompanyUserProfileBaseModel } from '../models/CompanyUserProfileBaseModel';\nimport type { CompanyUserProfileFullModel } from '../models/CompanyUserProfileFullModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile by company user id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileFullModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfile(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<CompanyUserProfileFullModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile for user\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileBaseModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfile(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileBaseModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileCommitmentAddEditModel } from '../models/CompanyUserProfileCommitmentAddEditModel';\nimport type { CompanyUserProfileCommitmentModel } from '../models/CompanyUserProfileCommitmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileCommitmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile commitment by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileCommitment Id\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileCommitment(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns CompanyUserProfileCommitmentModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileCommitment(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileCommitmentAddEditModel,\n    ): CancelablePromise<CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Commitment\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileCommitment(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Commitment\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileCommitmentAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileCommitmentModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileCommitment(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileCommitmentAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileCommitmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileEducationAddEditModel } from '../models/CompanyUserProfileEducationAddEditModel';\nimport type { CompanyUserProfileEducationModel } from '../models/CompanyUserProfileEducationModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileEducationService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile education by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEducation Id\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns CompanyUserProfileEducationModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileEducationAddEditModel,\n    ): CancelablePromise<CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Education\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileEducation(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Education\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEducationAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEducationModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileEducation(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileEducationAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileEducationModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileEmployerAddEditModel } from '../models/CompanyUserProfileEmployerAddEditModel';\nimport type { CompanyUserProfileEmployerModel } from '../models/CompanyUserProfileEmployerModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileEmployerService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile employer by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileEmployer Id\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Employer\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns CompanyUserProfileEmployerModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileEmployerAddEditModel,\n    ): CancelablePromise<CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Employer\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileEmployer(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Employer profile item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileEmployerAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileEmployerModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileEmployer(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileEmployerAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileEmployerModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileExtSkillAddEditModel } from '../models/CompanyUserProfileExtSkillAddEditModel';\nimport type { CompanyUserProfileExtSkillModel } from '../models/CompanyUserProfileExtSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileExtSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile external skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileExtSkill Id\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileExtSkillModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileExtSkillAddEditModel,\n    ): CancelablePromise<CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Extra Skill Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileExtSkill(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Extra Skill Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileExtSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileExtSkillModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileExtSkill(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileExtSkillAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileExtSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ImportProfileAsyncOperation } from '../models/ImportProfileAsyncOperation';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileImportService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Create new profile import for a user.\n     * This will start an async operation.\n     * - If the operation is started successfully, the response will be `202 Accepted` and the `Location` header will contain the URL to get the status of the operation.\n     * - If the operation is not started successfully, the response will be `400 Bad Request`\n     * @param companyId\n     * @param companyUserId\n     * @param formData\n     * @returns any Accepted\n     * @throws ApiError\n     */\n    public createCompanyUserProfileImport(\n        companyId: number,\n        companyUserId: number,\n        formData?: {\n            File: Blob;\n            MapSkillExperienceYearsToLevel?: boolean;\n        },\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/import',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`,\n            },\n        });\n    }\n    /**\n     * Get current status of the async profile import operation.\n     * This will return the status of an async operation.\n     * - If the operation is still in progress, the response will be `202 Accepted`\n     * - If the operation is completed successfully, the response will be `200 OK` and the `status` property will be `Completed`\n     * - If the operation is completed with errors, the response will be `200 OK` and the `status` property will be `Failed`\n     * @param companyId\n     * @param companyUserId\n     * @param operationId\n     * @returns ImportProfileAsyncOperation Success\n     * @returns any Accepted\n     * @throws ApiError\n     */\n    public getCompanyUserProfileImport(\n        companyId: number,\n        companyUserId: number,\n        operationId: number,\n    ): CancelablePromise<ImportProfileAsyncOperation | any> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/import/{operationId}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'operationId': operationId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileLanguageAddModel } from '../models/CompanyUserProfileLanguageAddModel';\nimport type { CompanyUserProfileLanguageEditModel } from '../models/CompanyUserProfileLanguageEditModel';\nimport type { CompanyUserProfileLanguageModel } from '../models/CompanyUserProfileLanguageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileLanguageService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile language by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileLanguage Id\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileExtraSkillAddEditModel\n     * @returns CompanyUserProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileLanguageEditModel,\n    ): CancelablePromise<CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Language Profile Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileLanguage(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Language Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileLanguageAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileLanguageModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileLanguage(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileLanguageAddModel,\n    ): CancelablePromise<any | CompanyUserProfileLanguageModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProfileLanguageModel } from '../models/ProfileLanguageModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileLanguagesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Available Profile Languages\n     * @returns ProfileLanguageModel All went well\n     * @throws ApiError\n     */\n    public profileLanguages(): CancelablePromise<Array<ProfileLanguageModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/languages',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfilePresentationEditModel } from '../models/CompanyUserProfilePresentationEditModel';\nimport type { CompanyUserProfilePresentationModel } from '../models/CompanyUserProfilePresentationModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfilePresentationService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfilePresentation(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<CompanyUserProfilePresentationModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Profile Presentation\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfilePresentationEditModel\n     * @returns CompanyUserProfilePresentationModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfilePresentation(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfilePresentationEditModel,\n    ): CancelablePromise<CompanyUserProfilePresentationModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileReferenceAddEditModel } from '../models/CompanyUserProfileReferenceAddEditModel';\nimport type { CompanyUserProfileReferenceModel } from '../models/CompanyUserProfileReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileReferenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile reference by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileReference Id\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns CompanyUserProfileReferenceModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileReferenceAddEditModel,\n    ): CancelablePromise<CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Reference Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileReference(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Reference Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileReferenceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileReferenceModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileReference(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileReferenceAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileReferenceModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/references',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileBaseModel } from '../models/CompanyUserProfileBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfilesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profiles list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserProfileBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfiles(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserProfileBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profiles',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileSkillAddModel } from '../models/CompanyUserProfileSkillAddModel';\nimport type { CompanyUserProfileSkillEditModel } from '../models/CompanyUserProfileSkillEditModel';\nimport type { CompanyUserProfileSkillModel } from '../models/CompanyUserProfileSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileSkill Id\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Skill\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileSkillEditModel\n     * @returns CompanyUserProfileSkillModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileSkillEditModel,\n    ): CancelablePromise<CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Skill\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileSkill(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Skill to profile\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileSkillAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileSkillModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileSkill(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileSkillAddModel,\n    ): CancelablePromise<any | CompanyUserProfileSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileTrainingAddEditModel } from '../models/CompanyUserProfileTrainingAddEditModel';\nimport type { CompanyUserProfileTrainingModel } from '../models/CompanyUserProfileTrainingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileTrainingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile training by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileTraining Id\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns CompanyUserProfileTrainingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileTrainingAddEditModel,\n    ): CancelablePromise<CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Training Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileTraining(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create Profile Training Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserProfileTrainingAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileTrainingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileTraining(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileTrainingAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileTrainingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProfileWorkExperienceAddEditModel } from '../models/CompanyUserProfileWorkExperienceAddEditModel';\nimport type { CompanyUserProfileWorkExperienceModel } from '../models/CompanyUserProfileWorkExperienceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserProfileWorkExperienceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get profile work experience by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id ProfileWorkExperience Id\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */\n    public companyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Profile Work Experience\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id\n     * @param requestBody CompanyUserProfileWorkExperienceAddEditModel\n     * @returns CompanyUserProfileWorkExperienceModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n        requestBody?: CompanyUserProfileWorkExperienceAddEditModel,\n    ): CancelablePromise<CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Profile Work Experience Item\n     * @param id Profile Item Id\n     * @param companyId Company Id\n     * @param companyUserId Company User Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserProfileWorkExperience(\n        id: number,\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Create WorkExperience Profile Item\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody CompanyUserWorkExperienceAddEditModel\n     * @returns any All went well\n     * @returns CompanyUserProfileWorkExperienceModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserProfileWorkExperience(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserProfileWorkExperienceAddEditModel,\n    ): CancelablePromise<any | CompanyUserProfileWorkExperienceModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ClassicCompanyUserResumeModel } from '../models/ClassicCompanyUserResumeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserResumeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns ClassicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */\n    public getResume(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<ClassicCompanyUserResumeModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserResumeBaseModel } from '../models/CompanyUserResumeBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserResumesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user resumes list\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserResumeBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserResumes(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserResumeBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserProjectAssignmentModel } from '../models/CompanyUserProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserRolesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Roles for CompanyUser by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public companyUserRoles(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{id}/roles',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUsersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyUsers(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserExtendedModel } from '../models/CompanyUserExtendedModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUsersExtendedService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get extended company users list\n     * @param companyId Company Id\n     * @returns CompanyUserExtendedModel All went well\n     * @throws ApiError\n     */\n    public companyUsersExtended(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserExtendedModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/extended',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSkillModel } from '../models/CompanyUserSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSkillService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get skill by id\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Skill Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */\n    public skill(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserSkillModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSkillModel } from '../models/CompanyUserSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get skills list\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserSkillModel All went well\n     * @throws ApiError\n     */\n    public skills(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserSkillModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/skills',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorAddEditModel } from '../models/CompanyUserSubcontractorAddEditModel';\nimport type { CompanyUserSubcontractorModel } from '../models/CompanyUserSubcontractorModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company user by id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id CompanyUser Id\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */\n    public companySubcontractor(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<CompanyUserSubcontractorModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete subcontractor from the system\n     * This action is irreversible, use with caution\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param id Subcontractor Id\n     * @param firstName Subcontractor FirstName\n     * @param lastName Subcontractor LastName\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanySubcontractor(\n        companyId: number,\n        id: number,\n        firstName?: string,\n        lastName?: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            query: {\n                'firstName': firstName,\n                'lastName': lastName,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add subcontractor\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody CompanyUserSubcontractorAddEditModel\n     * @returns CompanyUserSubcontractorModel All went well\n     * @throws ApiError\n     */\n    public addCompanyUserSubcontractor(\n        companyId: number,\n        requestBody?: CompanyUserSubcontractorAddEditModel,\n    ): CancelablePromise<CompanyUserSubcontractorModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventModel } from '../models/CompanyUserEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEvent(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventMeetingAddEditModel } from '../models/CompanyUserEventMeetingAddEditModel';\nimport type { CompanyUserEventMeetingModel } from '../models/CompanyUserEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Meeting event Id\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Meeting event details\n     * @returns CompanyUserEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new subcontractor meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Meeting event details\n     * @returns any All went well\n     * @returns CompanyUserEventMeetingModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventMeeting(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventMeetingAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventNoteAddEditModel } from '../models/CompanyUserEventNoteAddEditModel';\nimport type { CompanyUserEventNoteModel } from '../models/CompanyUserEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Note event details\n     * @returns CompanyUserEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Creates new subcontractors note event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Note event details\n     * @returns any All went well\n     * @returns CompanyUserEventNoteModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventNote(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventNoteAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param subcontractorId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEvents(\n        companyId: number,\n        subcontractorId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/events',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors meetings events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventMeetingList(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors notes events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventsNotes(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventBaseModel } from '../models/CompanyUserEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns CompanyUserEventBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventsTasks(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<CompanyUserEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserEventTaskAddEditModel } from '../models/CompanyUserEventTaskAddEditModel';\nimport type { CompanyUserEventTaskModel } from '../models/CompanyUserEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorEventTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Creates new subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param requestBody Task event details\n     * @returns any All went well\n     * @returns CompanyUserEventTaskModel Created\n     * @throws ApiError\n     */\n    public newCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<any | CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get subcontractors tasks events list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event Id\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Updates subcontractor task event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @param requestBody Task event details\n     * @returns CompanyUserEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n        requestBody?: CompanyUserEventTaskAddEditModel,\n    ): CancelablePromise<CompanyUserEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Deletes meeting event\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Event id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyUserSubcontractorEventTask(\n        companyId: number,\n        companyUserId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorFileAttachmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractor File Attachment by Id\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id\n     * @param companyId\n     * @param attachmentId\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public getSubcontractorAttachment(\n        id: number,\n        companyId: number,\n        attachmentId: string,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}/attachments/{attachmentId}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n                'attachmentId': attachmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorFileAttachmentListModel } from '../models/CompanyUserSubcontractorFileAttachmentListModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorFileAttachmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Upload subcontractor file attachment\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param id Candidate Id\n     * @param companyId Company Id\n     * @param formData\n     * @returns CompanyUserSubcontractorFileAttachmentListModel Created\n     * @throws ApiError\n     */\n    public subcontractorAttachment(\n        id: number,\n        companyId: number,\n        formData?: {\n            Files: Array<Blob>;\n            Title: string;\n            Description?: string;\n        },\n    ): CancelablePromise<CompanyUserSubcontractorFileAttachmentListModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/subcontractors/{id}/attachments',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Server Error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorRoleMemberModel } from '../models/CompanyUserSubcontractorRoleMemberModel';\nimport type { CompanyUserSubcontractorRolesModel } from '../models/CompanyUserSubcontractorRolesModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorRolesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get assigned and prospect roles for subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @returns CompanyUserSubcontractorRolesModel All went well\n     * @throws ApiError\n     */\n    public getSubcontractorRoles(\n        companyId: number,\n        subcontractorId: number,\n    ): CancelablePromise<CompanyUserSubcontractorRolesModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get a specific role, assigned and or prospected, for subcontractor by role id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param subcontractorId Subcontractor Id\n     * @param projectAssignmentId Project assignment Id\n     * @returns CompanyUserSubcontractorRoleMemberModel All went well\n     * @throws ApiError\n     */\n    public getSubcontractorRole(\n        companyId: number,\n        subcontractorId: number,\n        projectAssignmentId: number,\n    ): CancelablePromise<CompanyUserSubcontractorRoleMemberModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles/{projectAssignmentId}',\n            path: {\n                'companyId': companyId,\n                'subcontractorId': subcontractorId,\n                'projectAssignmentId': projectAssignmentId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyUserSubcontractorBaseModel } from '../models/CompanyUserSubcontractorBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserSubcontractorsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get subcontractors list\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @returns CompanyUserSubcontractorBaseModel All went well\n     * @throws ApiError\n     */\n    public companyUserSubcontractors(\n        companyId: number,\n    ): CancelablePromise<Array<CompanyUserSubcontractorBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/subcontractors',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { CompanyUserModel } from '../models/CompanyUserModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for User\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the user.\n     * A new tag will be created if the id for a tag is not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/users/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-new\",\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param companyUserId CompanyUser Id\n                 * @param requestBody CompanyTagModel[]\n                 * @returns CompanyUserModel All went well\n                 * @throws ApiError\n                 */\n                public editCompanyUserTags(\n                    companyId: number,\n                    companyUserId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<CompanyUserModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/users/{companyUserId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'companyUserId': companyUserId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { TeamBaseModel } from '../models/TeamBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyUserTeamsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get teams for team member\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @returns TeamBaseModel All went well\n     * @throws ApiError\n     */\n    public userTeams(\n        companyId: number,\n        companyUserId: number,\n    ): CancelablePromise<Array<TeamBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/teams',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { WebhookAddModel } from '../models/WebhookAddModel';\nimport type { WebhookModel } from '../models/WebhookModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyWebhookService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Webhook\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/webhooks\n     * {\n         * \"isActive\": false,\n         * \"endpointUrl\": \"https://webhook.site/7a619ffb-e67c-41fc-8113-083d6013f76c\",\n         * \"configurations\": [\n             * {\n                 * \"entityType\": 1,\n                 * \"actionType\": 1\n                 * }\n                 * ],\n                 * \"credentials\": [\n                     * {\n                         * \"isBasicAuthentication\": true,\n                         * \"headerName\": \"user\",\n                         * \"headerValue\": \"somevalue\"\n                         * }\n                         * ]\n                         * }\n                         * @param companyId Company Id\n                         * @param requestBody WebhookAddModel\n                         * @returns WebhookModel All went well\n                         * @throws ApiError\n                         */\n                        public newWebhook(\n                            companyId: number,\n                            requestBody?: WebhookAddModel,\n                        ): CancelablePromise<WebhookModel> {\n                            return this.httpRequest.request({\n                                method: 'POST',\n                                url: '/v0.1/companies/{companyId}/webhooks',\n                                path: {\n                                    'companyId': companyId,\n                                },\n                                body: requestBody,\n                                mediaType: 'application/json-patch+json',\n                                errors: {\n                                    400: `Incorrect request`,\n                                    401: `Unauthorized request`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server error`,\n                                },\n                            });\n                        }\n                        /**\n                         * Requires access level: CompanyAdmin. Requires module: Webhooks.\n                         * @param companyId\n                         * @param requestBody\n                         * @returns WebhookModel Created\n                         * @throws ApiError\n                         */\n                        public installWebhookManifest(\n                            companyId: number,\n                            requestBody?: Array<WebhookAddModel>,\n                        ): CancelablePromise<Array<WebhookModel>> {\n                            return this.httpRequest.request({\n                                method: 'POST',\n                                url: '/v0.1/companies/{companyId}/webhooks/manifest',\n                                path: {\n                                    'companyId': companyId,\n                                },\n                                body: requestBody,\n                                mediaType: 'application/json-patch+json',\n                                errors: {\n                                    400: `Bad Request`,\n                                    401: `Unauthorized`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server Error`,\n                                },\n                            });\n                        }\n                        /**\n                         * Remove webhook\n                         * Sample request:\n                         *\n                         * DELETE /v0.1/companies/1/webhooks/42a3a220-766c-eb11-8e13-000c29b4e92f\n                         * @param companyId Company Id\n                         * @param id Webhook Id\n                         * @returns any All went well\n                         * @throws ApiError\n                         */\n                        public removeWebhook(\n                            companyId: number,\n                            id: string,\n                        ): CancelablePromise<any> {\n                            return this.httpRequest.request({\n                                method: 'DELETE',\n                                url: '/v0.1/companies/{companyId}/webhooks/{id}',\n                                path: {\n                                    'companyId': companyId,\n                                    'id': id,\n                                },\n                                errors: {\n                                    400: `Incorrect request`,\n                                    401: `Unauthorized request`,\n                                    403: `Forbidden`,\n                                    404: `Not Found`,\n                                    500: `Server error`,\n                                },\n                            });\n                        }\n                    }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { WebhookModel } from '../models/WebhookModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class CompanyWebhooksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company webhooks\n     * Sample request:\n     *\n     * GET /v0.1/companies/1/webhooks\n     * @param companyId Company Id\n     * @returns WebhookModel All went well\n     * @throws ApiError\n     */\n    public companyWebhooks(\n        companyId: number,\n    ): CancelablePromise<Array<WebhookModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/webhooks',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                403: `Forbidden request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { DynamicCompanyUserResumeModel } from '../models/DynamicCompanyUserResumeModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class DynamicCompanyUserResumeService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get resume by id\n     * Requires module: CompanyUserResume.\n     * @param companyId Company Id\n     * @param companyUserId CompanyUser Id\n     * @param id Resume Id\n     * @returns DynamicCompanyUserResumeModel All went well\n     * @throws ApiError\n     */\n    public dynamicResume(\n        companyId: number,\n        companyUserId: number,\n        id: number,\n    ): CancelablePromise<DynamicCompanyUserResumeModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}/dynamic',\n            path: {\n                'companyId': companyId,\n                'companyUserId': companyUserId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { KeywordModel } from '../models/KeywordModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class KeywordSearchService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search keywords by term\n     * @param companyId Company Id\n     * @param term Search term\n     * @returns KeywordModel All went well\n     * @throws ApiError\n     */\n    public searchKeyword(\n        companyId: number,\n        term: string,\n    ): CancelablePromise<Array<KeywordModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/keywords/search/{term}',\n            path: {\n                'companyId': companyId,\n                'term': term,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { MentionTextModel } from '../models/MentionTextModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class MentionsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Translates any mention-ids in a text to their human readable form.\n     * Translations are access restricted, if you don't have enough access\n     * to get the name of an id, it won't be translated.\n     * @param companyId Company Id\n     * @param requestBody The model with one property, value, which contains the text containing the mentions you're looking to translate.  Example of a text with a mention inside: `\"Hello @(1|123456) can you please consider this role?\"`\n     * @returns string All went well\n     * @throws ApiError\n     */\n    public translateMentions(\n        companyId: number,\n        requestBody?: MentionTextModel,\n    ): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/mentions/to-natural-text',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PartnersFilterModel } from '../models/PartnersFilterModel';\nimport type { PartnersOverviewModel } from '../models/PartnersOverviewModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class PartnersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Partners by filter\n     * Requires access level: PartnerManager. Requires module: Partners.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns PartnersOverviewModel All went well\n     * @throws ApiError\n     */\n    public searchPartners(\n        companyId: number,\n        requestBody?: PartnersFilterModel,\n    ): CancelablePromise<PartnersOverviewModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/partners',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAddEditModel } from '../models/ProjectAddEditModel';\nimport type { ProjectModel } from '../models/ProjectModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public project(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param id Project Id\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public updateCompanyProject(\n        id: number,\n        companyId: number,\n        requestBody?: ProjectAddEditModel,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'id': id,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param id Project Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteCompanyProject(\n        companyId: number,\n        id: number,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{id}',\n            path: {\n                'companyId': companyId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody ProjectAddEditModel\n     * @returns ProjectModel All went well\n     * @throws ApiError\n     */\n    public newCompanyProject(\n        companyId: number,\n        requestBody?: ProjectAddEditModel,\n    ): CancelablePromise<ProjectModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentAddModel } from '../models/ProjectAssignmentAddModel';\nimport type { ProjectAssignmentAnnouncementBaseModel } from '../models/ProjectAssignmentAnnouncementBaseModel';\nimport type { ProjectAssignmentAnnounceModel } from '../models/ProjectAssignmentAnnounceModel';\nimport type { ProjectAssignmentEditModel } from '../models/ProjectAssignmentEditModel';\nimport type { ProjectAssignmentModel } from '../models/ProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * @deprecated\n     * Get projectassignment by id (Obsolete)\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public oldProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/projectassignments/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Get Role by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public projectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @param requestBody ProjectAssignmentEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n        requestBody?: ProjectAssignmentEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id ProjectAssignment Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignment(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Role\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectAssignmentAddEditModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public newProjectAssignment(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectAssignmentAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Announce a role (ProjectAssignment) to the Partner Network and optionally also to Cinode Market(https://cinode.market/requests).\n     * If you are testing, set the \"PublishForReal\" to \"false\", otherwise you will publish this announcement for real. When you're testing (\"PublishForReal = false) RequestId will be 0 in the response.\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param projectId Project Id\n     * @param projectAssignmentId ProjectAssignment Id\n     * @param companyId\n     * @param requestBody ProjectAssignmentAnnounceModel\n     * @returns ProjectAssignmentAnnouncementBaseModel Success\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public announceProjectAssignment(\n        projectId: number,\n        projectAssignmentId: number,\n        companyId: string,\n        requestBody?: ProjectAssignmentAnnounceModel,\n    ): CancelablePromise<ProjectAssignmentAnnouncementBaseModel | any> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{projectAssignmentId}/announce',\n            path: {\n                'projectId': projectId,\n                'projectAssignmentId': projectAssignmentId,\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentMemberEmployeeAddModel } from '../models/ProjectAssignmentMemberEmployeeAddModel';\nimport type { ProjectAssignmentMemberEmployeeEditModel } from '../models/ProjectAssignmentMemberEmployeeEditModel';\nimport type { ProjectAssignmentMemberSubcontractorAddModel } from '../models/ProjectAssignmentMemberSubcontractorAddModel';\nimport type { ProjectAssignmentMemberSubcontractorEditModel } from '../models/ProjectAssignmentMemberSubcontractorEditModel';\nimport type { ProjectAssignmentModel } from '../models/ProjectAssignmentModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentMemberService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberEmployeeAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentMemberEmployeeAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentMemberSubcontractor(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentMemberSubcontractorAddModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role Member Employee\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentMemberEmployeeEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Edit Role Member Subcontractor\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @param requestBody ProjectAssignmentMemberSubcontractorAddModel\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentMemberSubcontractor(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentMemberSubcontractorEditModel,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role Member\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Role Member Id\n     * @returns ProjectAssignmentModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignmentMemberEmployee(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentFilterModel } from '../models/ProjectAssignmentFilterModel';\nimport type { ProjectAssignmentWithStatusModel } from '../models/ProjectAssignmentWithStatusModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get Roles by Filter\n     * Rate limited, restricted to once per minute, max 1000 requests per day\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param requestBody Filter options\n     * @returns ProjectAssignmentWithStatusModel All went well\n     * @throws ApiError\n     */\n    public searchRoles(\n        companyId: number,\n        requestBody?: ProjectAssignmentFilterModel,\n    ): CancelablePromise<ProjectAssignmentWithStatusModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/roles',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectAssignmentSkillAddModel } from '../models/ProjectAssignmentSkillAddModel';\nimport type { ProjectAssignmentSkillEditModel } from '../models/ProjectAssignmentSkillEditModel';\nimport type { ProjectAssignmentSkillModel } from '../models/ProjectAssignmentSkillModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectAssignmentSkillsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Add Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public addProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        requestBody?: ProjectAssignmentSkillAddModel,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @param requestBody ProjectAssignmentMemberSkillAddModel\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public updateProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n        requestBody?: ProjectAssignmentSkillEditModel,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete Role Skill\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param roleId Role Id\n     * @param id Keyword Id\n     * @returns ProjectAssignmentSkillModel All went well\n     * @throws ApiError\n     */\n    public deleteProjectAssignmentSkill(\n        companyId: number,\n        projectId: number,\n        roleId: number,\n        id: number,\n    ): CancelablePromise<ProjectAssignmentSkillModel> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'roleId': roleId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventModel } from '../models/ProjectEventModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventModel All went well\n     * @throws ApiError\n     */\n    public projectEvent(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project events list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEvents(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventMeetingAddEditModel } from '../models/ProjectEventMeetingAddEditModel';\nimport type { ProjectEventMeetingModel } from '../models/ProjectEventMeetingModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsMeetingService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event meeting by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public projectEventMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public updateProjectMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventMeetingAddEditModel,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectMeeting(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event meeting\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventMeetingAddEditModel\n     * @returns ProjectEventMeetingModel All went well\n     * @throws ApiError\n     */\n    public newProjectMeeting(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventMeetingAddEditModel,\n    ): CancelablePromise<ProjectEventMeetingModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsMeetingsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project events meetings list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventMeetings(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/meetings',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CustomerEventNoteModel } from '../models/CustomerEventNoteModel';\nimport type { ProjectEventNoteAddEditModel } from '../models/ProjectEventNoteAddEditModel';\nimport type { ProjectEventNoteModel } from '../models/ProjectEventNoteModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsNoteService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event note by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns CustomerEventNoteModel All went well\n     * @throws ApiError\n     */\n    public projectEventNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<CustomerEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */\n    public updateProjectNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventNoteAddEditModel,\n    ): CancelablePromise<ProjectEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectNote(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event note\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventNoteAddEditModel\n     * @returns ProjectEventNoteModel All went well\n     * @throws ApiError\n     */\n    public newProjectNote(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventNoteAddEditModel,\n    ): CancelablePromise<ProjectEventNoteModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsNotesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event notes list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventNotes(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/notes',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventTaskAddEditModel } from '../models/ProjectEventTaskAddEditModel';\nimport type { ProjectEventTaskModel } from '../models/ProjectEventTaskModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsTaskService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event task by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public projectEventTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Update project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public updateProjectTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n        requestBody?: ProjectEventTaskAddEditModel,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'PUT',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Delete project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Event Id\n     * @returns any All went well\n     * @throws ApiError\n     */\n    public deleteProjectTask(\n        companyId: number,\n        projectId: number,\n        id: string,\n    ): CancelablePromise<any> {\n        return this.httpRequest.request({\n            method: 'DELETE',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n    /**\n     * Add project event task\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param requestBody ProjectEventTaskAddEditModel\n     * @returns ProjectEventTaskModel All went well\n     * @throws ApiError\n     */\n    public newProjectTask(\n        companyId: number,\n        projectId: number,\n        requestBody?: ProjectEventTaskAddEditModel,\n    ): CancelablePromise<ProjectEventTaskModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectEventBaseModel } from '../models/ProjectEventBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectEventsTasksService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project event tasks list\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectEventBaseModel All went well\n     * @throws ApiError\n     */\n    public projectEventTasks(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectEventBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/events/tasks',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectPipelineModel } from '../models/ProjectPipelineModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectPipelinesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project pipelines\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectPipelineModel All went well\n     * @throws ApiError\n     */\n    public projectPipelines(\n        companyId: number,\n    ): CancelablePromise<Array<ProjectPipelineModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/pipelines',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectReferenceModel } from '../models/ProjectReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectReferenceService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @param id Project reference Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */\n    public projectReference(\n        companyId: number,\n        projectId: number,\n        id: number,\n    ): CancelablePromise<ProjectReferenceModel> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/references/{id}',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n                'id': id,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectReferenceModel } from '../models/ProjectReferenceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectReferencesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get project reference by id\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @param projectId Project Id\n     * @returns ProjectReferenceModel All went well\n     * @throws ApiError\n     */\n    public projectReferences(\n        companyId: number,\n        projectId: number,\n    ): CancelablePromise<Array<ProjectReferenceModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects/{projectId}/references',\n            path: {\n                'companyId': companyId,\n                'projectId': projectId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ProjectBaseModel } from '../models/ProjectBaseModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get projects list  - please note this endpoint currently only returns projects with the status WON. Please use the SearchProjects endpoint for more options of filtering desired Projects\n     * Requires access level: CompanyManager. Requires module: Assignments.\n     * @param companyId Company Id\n     * @returns ProjectBaseModel All went well\n     * @throws ApiError\n     */\n    public projects(\n        companyId: number,\n    ): CancelablePromise<Array<ProjectBaseModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/projects',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompanyTagModel } from '../models/CompanyTagModel';\nimport type { ProjectModel } from '../models/ProjectModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class ProjectTagsService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Edit Tags for Project\n     * Note:\n     *\n     * Posted tags will replace any existing tags for the project.\n     * A new tag will be created, if the id for a tag not provided.\n     *\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/projects/19870/tags\n     * [\n         * {\n             * \"name\": \"tag-name\",\n             * \"id\": 2\n             * },\n             * {\n                 * \"name\": \"tag-test\",\n                 * \"id\": 1\n                 * },\n                 * ]\n                 * @param companyId Company Id\n                 * @param projectId Project Id\n                 * @param requestBody CompanyTagModel\n                 * @returns ProjectModel All went well\n                 * @throws ApiError\n                 */\n                public editProjectTags(\n                    companyId: number,\n                    projectId: number,\n                    requestBody?: Array<CompanyTagModel>,\n                ): CancelablePromise<ProjectModel> {\n                    return this.httpRequest.request({\n                        method: 'POST',\n                        url: '/v0.1/companies/{companyId}/projects/{projectId}/tags',\n                        path: {\n                            'companyId': companyId,\n                            'projectId': projectId,\n                        },\n                        body: requestBody,\n                        mediaType: 'application/json-patch+json',\n                        errors: {\n                            400: `Incorrect request`,\n                            401: `Unauthorized request`,\n                            403: `Forbidden request`,\n                            404: `Resource not found`,\n                            500: `Server error`,\n                        },\n                    });\n                }\n            }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { RecruitmentSourceModel } from '../models/RecruitmentSourceModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class RecruitmentSourcesService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get recruitment sources\n     * Requires access level: CompanyRecruiter. Requires module: Recruitment.\n     * @param companyId Company Id\n     * @returns RecruitmentSourceModel All went well\n     * @throws ApiError\n     */\n    public recruitmentSources(\n        companyId: number,\n    ): CancelablePromise<Array<RecruitmentSourceModel>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/v0.1/companies/{companyId}/candidates/recruitment-sources',\n            path: {\n                'companyId': companyId,\n            },\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCandidateQueryModel } from '../models/SearchCompanyCandidateQueryModel';\nimport type { SearchCompanyCandidateResultModel } from '../models/SearchCompanyCandidateResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCandidateService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company candidates list from search criteria\n     * Sample request:\n     *\n     * POST /v0.1/companies/1/candidates/search\n     * {\n         * \"term\": \"candidate property value\",\n         * \"rating\": 3\n         * \"status\": 0,\n         * \"sources\": [],\n         * \"noRecruiter\": false,\n         * \"recruiters\": [],\n         * \"states\": [0],\n         * \"pipeline\": null,\n         * \"pageAndSortBy\": {\n             * \"page\": 1,\n             * \"itemsPerPage\": 15\n             * },\n             * \"pipelines\": []\n             * }\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCandidateQueryModel\n             * @returns SearchCompanyCandidateResultModel All went well\n             * @throws ApiError\n             */\n            public searchCompanyCandidate(\n                companyId: number,\n                requestBody?: SearchCompanyCandidateQueryModel,\n            ): CancelablePromise<SearchCompanyCandidateResultModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/candidates/search',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCustomerContactQueryModel } from '../models/SearchCompanyCustomerContactQueryModel';\nimport type { SearchCompanyCustomerContactResultModel } from '../models/SearchCompanyCustomerContactResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCustomerContactService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customer contacts list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerContactResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyCustomerContact(\n        companyId: number,\n        requestBody?: SearchCompanyCustomerContactQueryModel,\n    ): CancelablePromise<SearchCompanyCustomerContactResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/contacts/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyCustomerQueryModel } from '../models/SearchCompanyCustomerQueryModel';\nimport type { SearchCompanyCustomerResultModel } from '../models/SearchCompanyCustomerResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyCustomersService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company customers list from search criteria\n     * Requires access level: CompanyManager. Requires module: Customers.\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyCustomerQueryModel\n     * @returns SearchCompanyCustomerResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyCustomer(\n        companyId: number,\n        requestBody?: SearchCompanyCustomerQueryModel,\n    ): CancelablePromise<SearchCompanyCustomerResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/customers/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchCompanyUserQueryModel } from '../models/SearchCompanyUserQueryModel';\nimport type { SearchCompanyUserResultModel } from '../models/SearchCompanyUserResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchCompanyUserService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get company users list from search criteria\n     * @param companyId Company Id\n     * @param requestBody SearchCompanyUserQueryModel\n     * @returns SearchCompanyUserResultModel All went well\n     * @throws ApiError\n     */\n    public searchCompanyUser(\n        companyId: number,\n        requestBody?: SearchCompanyUserQueryModel,\n    ): CancelablePromise<SearchCompanyUserResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/users/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchProjectQueryModel } from '../models/SearchProjectQueryModel';\nimport type { SearchProjectsResultModel } from '../models/SearchProjectsResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SearchProjectService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Get projects list from search criteria\n     * Sample request\n     * {\n         * \"pipelines\": [4],\n         * \"projectStates\": [0],\n         * \"PageAndSortBy\": {\n             * \"SortBy\": \"0\",\n             * \"SortOrder\": \"1\",\n             * \"Page\": \"1\",\n             * \"ItemsPerPage\": \"15\",\n             * }\n             * }\n             * SortBy Parameter can be:\n             * CreatedDateTime=0 // Default\n             * Title=1\n             * Identifier=2\n             * CustomerIdentifier=3\n             * SeoId=4\n             * UpdatedDateTime=6\n             * LastTouchDateTime=7\n             * @param companyId Company Id\n             * @param requestBody SearchCompanyCustomerQueryModel\n             * @returns SearchProjectsResultModel All went well\n             * @throws ApiError\n             */\n            public searchProject(\n                companyId: number,\n                requestBody?: SearchProjectQueryModel,\n            ): CancelablePromise<SearchProjectsResultModel> {\n                return this.httpRequest.request({\n                    method: 'POST',\n                    url: '/v0.1/companies/{companyId}/projects/search',\n                    path: {\n                        'companyId': companyId,\n                    },\n                    body: requestBody,\n                    mediaType: 'application/json-patch+json',\n                    errors: {\n                        400: `Incorrect request`,\n                        401: `Unauthorized request`,\n                        500: `Server error`,\n                    },\n                });\n            }\n        }\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchSkillQueryModel } from '../models/SearchSkillQueryModel';\nimport type { SearchSkillResultModel } from '../models/SearchSkillResultModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SkillSearchService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search users by skill keyword id\n     * @param companyId Company Id\n     * @param requestBody SearchSkillQueryModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */\n    public searchSkill(\n        companyId: number,\n        requestBody?: SearchSkillQueryModel,\n    ): CancelablePromise<SearchSkillResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/skills/search',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { SearchSkillResultModel } from '../models/SearchSkillResultModel';\nimport type { SkillSearchQueryTermModel } from '../models/SkillSearchQueryTermModel';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\nexport class SkillSearchTermService {\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n    /**\n     * Search users with skills by term (string value)\n     * @param companyId Company Id\n     * @param requestBody SkillSearchQueryTermModel\n     * @returns SearchSkillResultModel All went well\n     * @throws ApiError\n     */\n    public searchSkillTerm(\n        companyId: number,\n        requestBody?: SkillSearchQueryTermModel,\n    ): CancelablePromise<SearchSkillResultModel> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/v0.1/companies/{companyId}/skills/search/term',\n            path: {\n                'companyId': companyId,\n            },\n            body: requestBody,\n            mediaType: 'application/json-patch+json',\n            errors: {\n                400: `Incorrect request`,\n                401: `Unauthorized request`,\n                404: `Resource not found`,\n                500: `Server error`,\n            },\n        });\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: 'https://api.cinode.com',\n    VERSION: '0.1',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * NoAccess = 0\n *\n * Anonymous = 50\n *\n * Read = 100\n *\n * Subcontractor = 110\n *\n * Candidate = 115\n *\n * RestrictedCompanyUser = 150\n *\n * CompanyApiUser = 180\n *\n * CompanyUser = 200\n *\n * PartnerManager = 240\n *\n * CompanyRecruiter = 250\n *\n * TeamManager = 270\n *\n * CompanyManager = 300\n *\n * CompanyAdmin = 400\n *\n * Owner = 500\n */\nexport enum AccessLevel {\n    NoAccess = 0,\n    Anonymous = 50,\n    Read = 100,\n    Subcontractor = 110,\n    Candidate = 115,\n    RestrictedCompanyUser = 150,\n    CompanyApiUser = 180,\n    CompanyUser = 200,\n    PartnerManager = 240,\n    CompanyRecruiter = 250,\n    TeamManager = 270,\n    CompanyManager = 300,\n    CompanyAdmin = 400,\n    Owner = 500,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * All = 1\n *\n * Created = 2\n *\n * Updated = 3\n *\n * Borttagen = 4\n */\nexport enum ActionType {\n    All = 1,\n    Created = 2,\n    Updated = 3,\n    Deleted = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Övrig = 0\n *\n * Besöksadress = 1\n *\n * Faktureringsadress = 2\n *\n * Placeringsort = 3\n */\nexport enum AddressType {\n    Undefined = 0,\n    StreetAddress = 1,\n    InvoiceAddress = 2,\n    LocationAddress = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * File = 0\n *\n * Uri = 1\n */\nexport enum AttachmentType {\n    File = 0,\n    Uri = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Status = 3\n *\n * Email = 4\n *\n * UpdatedDateTime = 5\n */\nexport enum CompanyCandidateQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Status = 3,\n    Email = 4,\n    UpdatedDateTime = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 10\n *\n * Pausad = 20\n *\n * Avböjd av kandidat = 30\n *\n * Avböjd av oss = 40\n */\nexport enum CompanyCandidateState {\n    Open = 0,\n    Won = 10,\n    Paused = 20,\n    Lost = 30,\n    Rejected = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n *\n * CustomerId = 5\n */\nexport enum CompanyCustomerContactQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Email = 3,\n    UpdatedDateTime = 4,\n    CustomerId = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * Name = 1\n *\n * Description = 2\n *\n * Identification = 3\n *\n * SeoId = 4\n *\n * Status = 5\n *\n * Phone = 6\n *\n * Email = 7\n *\n * Fax = 8\n *\n * Homepage = 9\n *\n * CorporateIdentityNumber = 10\n *\n * VATNumber = 11\n *\n * Intermediator = 12\n *\n * UpdatedDateTime = 13\n *\n * LastTouchDateTime = 14\n */\nexport enum CompanyCustomerQuerySort {\n    CreatedDateTime = 0,\n    Name = 1,\n    Description = 2,\n    Identification = 3,\n    SeoId = 4,\n    Status = 5,\n    Phone = 6,\n    Email = 7,\n    Fax = 8,\n    Homepage = 9,\n    CorporateIdentityNumber = 10,\n    VATNumber = 11,\n    Intermediator = 12,\n    UpdatedDateTime = 13,\n    LastTouchDateTime = 14,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n * 0 - Id (Default),\n * 1 - CompanyUserId,\n * 2 - CreatedDateTime,\n * 3 - UpdatedDateTime\n */\nexport enum CompanyProfileSort {\n    Id = 0,\n    CompanyUserId = 1,\n    CreatedWhen = 2,\n    UpdatedWhen = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Egenföretagare = 0\n *\n * 2-10 = 1\n *\n * 11-50 = 2\n *\n * 51-200 = 3\n *\n * 201-500 = 4\n *\n * 501-1 000 = 5\n *\n * 1 001-5 000 = 6\n *\n * 5 001-10 000 = 7\n *\n * 10 001+ = 8\n */\nexport enum CompanySize {\n    A = 0,\n    B = 1,\n    C = 2,\n    D = 3,\n    E = 4,\n    F = 5,\n    G = 6,\n    H = 7,\n    I = 8,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */\nexport enum CompanyUserCandidateStatus {\n    Disconnected = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * FirstName = 1\n *\n * LastName = 2\n *\n * Email = 3\n *\n * UpdatedDateTime = 4\n */\nexport enum CompanyUserQuerySort {\n    CreatedDateTime = 0,\n    FirstName = 1,\n    LastName = 2,\n    Email = 3,\n    UpdatedDateTime = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Kommande = 2\n *\n * Aktiv = 3\n */\nexport enum CompanyUserStatus {\n    Disconnected = 0,\n    PreActive = 2,\n    Active = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Frånkopplad = 0\n *\n * Aktiv = 1\n */\nexport enum CompanyUserSubcontractorStatus {\n    Disconnected = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Medarbetare = 0\n *\n * Kandidat = 10\n *\n * Underkonsult = 20\n *\n * Api = 30\n *\n * Bot = 40\n */\nexport enum CompanyUserType {\n    Employee = 0,\n    Candidate = 10,\n    Subcontractor = 20,\n    Api = 30,\n    Bot = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Timpris = 0\n *\n * Fastpris = 1\n */\nexport enum ContractType {\n    Hourly = 0,\n    Fixed = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */\nexport enum EventNoteType {\n    NotSpecified = 0,\n    Phone = 1,\n    Email = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inte påbörjad = 0\n *\n * Påbörjad = 1\n *\n * Färdig = 2\n *\n * Uppskjuten = 3\n *\n * Väntar = 4\n */\nexport enum EventStatusValue {\n    NotStarted = 0,\n    InProgress = 1,\n    Completed = 2,\n    Deferred = 3,\n    WaitingForSomeoneElse = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Telefonsamtal = 1\n *\n * E-mail = 2\n */\nexport enum EventTaskType {\n    NotSpecified = 0,\n    Phone = 1,\n    Email = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Möte = 0\n *\n * Notering = 1\n *\n * Uppgift = 2\n *\n * Samtal = 3\n */\nexport enum EventType {\n    Meeting = 0,\n    Note = 1,\n    Task = 2,\n    Call = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Publik = 0\n *\n * Privat = 1\n */\nexport enum EventVisibility {\n    Public = 0,\n    Private = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */\nexport enum ExtentType {\n    Percent = 0,\n    Hours = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Original = 0\n *\n * H40W40 = 1\n *\n * H100W100 = 2\n *\n * H200W200 = 3\n *\n * H300W300 = 4\n *\n * W100 = 5\n *\n * H60 = 6\n *\n * H100 = 7\n *\n * H40 = 8\n *\n * W340 = 9\n *\n * W1800 = 10\n *\n * H750W1800 = 11\n *\n * H250 = 12\n *\n * H400W400 = 13\n *\n * W150 = 14\n *\n * W1200 = 15\n */\nexport enum ImageSize {\n    Original = 0,\n    H40W40 = 1,\n    H100W100 = 2,\n    H200W200 = 3,\n    H300W300 = 4,\n    W100 = 5,\n    H60 = 6,\n    H100 = 7,\n    H40 = 8,\n    W340 = 9,\n    W1800 = 10,\n    H750W1800 = 11,\n    H250 = 12,\n    H400W400 = 13,\n    W150 = 14,\n    W1200 = 15,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Okategoriserad = 0\n *\n * Branscher = 1\n *\n * Roller = 2\n *\n * Verktyg = 3\n *\n * Tekniker = 4\n *\n * Metoder och processer = 5\n *\n * Plattformar = 6\n *\n * Produkter och tjänster = 7\n *\n * Certifieringar = 10\n *\n * Material = 11\n *\n * Specifikationer och förordningar = 12\n *\n * Hårdvara = 13\n *\n * Verksamhet och funktion = 14\n *\n * Byggnationer = 15\n *\n * Rapporter och utredningar = 16\n *\n * Specialiteter - Medicin = 17\n *\n * Standarder och regelverk = 18\n *\n * Behörigheter = 19\n *\n * Mjuka färdigheter = 20\n *\n * CustomName = 100\n */\nexport enum KeywordType {\n    Uncategorized = 0,\n    Industries = 1,\n    Roles = 2,\n    Tools = 3,\n    Techniques = 4,\n    MethodsProcesses = 5,\n    Platforms = 6,\n    Products = 7,\n    Certifications = 10,\n    Materials = 11,\n    SpecificationsRegulations = 12,\n    Hardware = 13,\n    OperationalAreaAndFunction = 14,\n    Construction = 15,\n    ReportsInvestigations = 16,\n    SpecialitiesMedicine = 17,\n    StandardsRegulations = 18,\n    Accreditation = 19,\n    SoftSkills = 20,\n    CustomName = 100,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Enstaka ord och fraser = 0\n *\n * Grundläggande kunskaper = 1\n *\n * Goda kunskaper = 2\n *\n * Flytande = 3\n *\n * Modersmål = 4\n */\nexport enum LanguageLevel {\n    Level0 = 0,\n    Level1 = 1,\n    Level2 = 2,\n    Level3 = 3,\n    Level4 = 4,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * InProgress = 0\n *\n * Completed = 1\n *\n * Failed = 2\n */\nexport enum LongRunningStatus {\n    InProgress = 0,\n    Completed = 1,\n    Failed = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CompanyUserResume = 1\n *\n * Customers = 2\n *\n * Assignments = 3\n *\n * Partners = 4\n *\n * Offers = 5\n *\n * Reports = 6\n *\n * Recruitment = 8\n *\n * Absence = 9\n *\n * Api = 10\n *\n * ReferenceText = 11\n *\n * ProfileCompleteness = 12\n *\n * CalendarSync = 13\n *\n * AllowWidgetModification = 14\n *\n * ConfiguredFilters = 19\n *\n * SkillSets = 20\n *\n * ProfileUpdateReminders = 21\n *\n * OverdueProjectReminders = 22\n *\n * EmailSync = 23\n *\n * ApplicationRegistration = 30\n *\n * ApplicationDirectory = 31\n *\n * NextGenResume = 40\n *\n * HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41\n *\n * ImportCv = 42\n *\n * AI = 43\n *\n * AITextGeneration = 44\n *\n * ProjectPlanning = 48\n *\n * ExternalAccounts = 50\n *\n * ConvertAccount = 51\n *\n * UserProvisioning = 52\n *\n * Webhooks = 60\n *\n * GrowthPlan = 70\n *\n * GUIShowcase = 80\n *\n * Appmixer = 90\n *\n * Intercom = 600\n */\nexport enum ModuleType {\n    CompanyUserResume = 1,\n    Customers = 2,\n    Assignments = 3,\n    Partners = 4,\n    Offers = 5,\n    Reports = 6,\n    Recruitment = 8,\n    Absence = 9,\n    Api = 10,\n    ReferenceText = 11,\n    ProfileCompleteness = 12,\n    CalendarSync = 13,\n    AllowWidgetModification = 14,\n    ConfiguredFilters = 19,\n    SkillSets = 20,\n    ProfileUpdateReminders = 21,\n    OverdueProjectReminders = 22,\n    EmailSync = 23,\n    ApplicationRegistration = 30,\n    ApplicationDirectory = 31,\n    NextGenResume = 40,\n    HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41,\n    ImportCv = 42,\n    AI = 43,\n    AITextGeneration = 44,\n    ProjectPlanning = 48,\n    ExternalAccounts = 50,\n    ConvertAccount = 51,\n    UserProvisioning = 52,\n    Webhooks = 60,\n    GrowthPlan = 70,\n    GUIShowcase = 80,\n    Appmixer = 90,\n    Intercom = 600,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Anonymiserat = 10\n *\n * Transparent = 20\n *\n * Avisera = 30\n *\n * Boka = 40\n *\n * Matcha = 50\n *\n * Tillgänglighet = 60\n *\n * UserCv = 70\n */\nexport enum PartnerConnectionTrustType {\n    UserViewAnonymous = 10,\n    UserViewTransparent = 20,\n    UserAssignRequest = 30,\n    UserAssignBook = 40,\n    UserSkillMatch = 50,\n    UserAvailability = 60,\n    UserCv = 70,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * WkHtmlToPdf = 0\n *\n * Puppeteer = 2\n */\nexport enum PdfEngineType {\n    WkHtmlToPdf = 0,\n    Puppeteer = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Portrait = 0\n *\n * Landscape = 1\n */\nexport enum PdfOrientation {\n    Portrait = 0,\n    Landscape = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej bokad = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n */\nexport enum ProjectAssignmentAllocationStatus {\n    NotBooked = 0,\n    Preliminary = 1,\n    Assigned = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Procent = 0\n *\n * Timmar = 1\n */\nexport enum ProjectAssignmentExtentType {\n    Percent = 0,\n    Hours = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * Preliminär = 1\n *\n * Tillsatt = 2\n *\n * Offererad = 3\n */\nexport enum ProjectAssignmentMemberAllocationStatus {\n    None = 0,\n    Preliminary = 1,\n    Assigned = 2,\n    Offered = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Tillagd = 0\n *\n * Offererad = 10\n *\n * Avböjd av kund = 20\n *\n * Avböjd av oss = 30\n *\n * Pausad = 40\n */\nexport enum ProjectAssignmentMemberState {\n    Allocated = 0,\n    Offered = 10,\n    Rejected = 20,\n    Revoked = 30,\n    Deferred = 40,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Unspecified = 0\n *\n * Medarbetare = 1\n *\n * Partnerkonsult = 2\n *\n * Underkonsult = 3\n */\nexport enum ProjectAssignmentMemberType {\n    Unspecified = 0,\n    CompanyUser = 1,\n    PartnerCompanyUser = 2,\n    CompanyUserSubcontractor = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Återkallad = 10\n *\n * Stängd = 20\n */\nexport enum ProjectAssignmentRequestStatus {\n    Open = 0,\n    Revoked = 10,\n    Closed = 20,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inga datum valda = 0\n *\n * Kommande = 1\n *\n * Pågående = 2\n *\n * Avslutat = 3\n */\nexport enum ProjectAssignmentStatus {\n    Unspecified = 0,\n    Coming = 1,\n    Ongoing = 2,\n    Ended = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Låg = 3\n *\n * Medel = 5\n *\n * Hög = 8\n */\nexport enum ProjectPriority {\n    Low = 3,\n    Medium = 5,\n    High = 8,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * CreatedDateTime = 0\n *\n * Title = 1\n *\n * Identifier = 2\n *\n * CustomerIdentifier = 3\n *\n * SeoId = 4\n *\n * UpdatedDateTime = 5\n *\n * LastTouchDateTime = 6\n */\nexport enum ProjectQuerySort {\n    CreatedDateTime = 0,\n    Title = 1,\n    Identifier = 2,\n    CustomerIdentifier = 3,\n    SeoId = 4,\n    UpdatedDateTime = 5,\n    LastTouchDateTime = 6,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Öppen = 0\n *\n * Vunnen = 30\n *\n * Förlorad = 40\n *\n * Avböjd = 50\n *\n * Uppskjuten = 60\n */\nexport enum ProjectState {\n    Open = 0,\n    Won = 30,\n    Lost = 40,\n    Abandoned = 50,\n    Suspended = 60,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * AllResumesOfLanguage = 3\n *\n * Profile = 5\n */\nexport enum SaveToApiOption {\n    AllResumesOfLanguage = 3,\n    Profile = 5,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n * 0 - Ascending,\n * 1 - Descending\n */\nexport enum SortOrder {\n    Ascending = 0,\n    Descending = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Inaktiv = 0\n *\n * Aktiv = 1\n */\nexport enum Status {\n    Inactive = 0,\n    Active = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Contains = 0\n *\n * StartsWith = 1\n *\n * EndsWith = 2\n *\n * Equals = 3\n */\nexport enum StringComparisonOperator {\n    Contains = 0,\n    StartsWith = 1,\n    EndsWith = 2,\n    Equals = 3,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * Primary = 1\n *\n * Classic = 2\n *\n * Dynamic = 3\n *\n * PageFlow = 4\n *\n * BlockWorkExperience = 50\n *\n * BlockSkillsByLevel = 51\n *\n * CinodePremium3PageFlow = 70\n *\n * CinodePremium2PageFlow = 71\n *\n * TemplateType = 100\n */\nexport enum TemplateAssetType {\n    None = 0,\n    Primary = 1,\n    Classic = 2,\n    Dynamic = 3,\n    PageFlow = 4,\n    BlockWorkExperience = 50,\n    BlockSkillsByLevel = 51,\n    CinodePremium3PageFlow = 70,\n    CinodePremium2PageFlow = 71,\n    TemplateType = 100,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Kurs = 0\n *\n * Certifiering = 1\n */\nexport enum TrainingType {\n    Course = 0,\n    Certification = 1,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * Ej angiven = 0\n *\n * Man = 1\n *\n * Kvinna = 2\n */\nexport enum UserGender {\n    Other = 0,\n    Male = 1,\n    Female = 2,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * All = 1\n *\n * CompanyCandidate = 2\n *\n * CompanyEmployee = 3\n *\n * CompanySubcontractor = 4\n *\n * CompanyCustomer = 5\n *\n * CompanyProject = 6\n *\n * Role = 7\n *\n * PublicAnnouncement = 8\n *\n * Absence = 9\n *\n * CompanyCustomerContact = 10\n */\nexport enum WebhookEntityType {\n    All = 1,\n    CompanyCandidate = 2,\n    CompanyEmployee = 3,\n    CompanySubcontractor = 4,\n    CompanyCustomer = 5,\n    CompanyProject = 6,\n    Role = 7,\n    PublicAnnouncement = 8,\n    Absence = 9,\n    CompanyCustomerContact = 10,\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n/**\n *\n *\n * None = 0\n *\n * GroupDocs = 1\n *\n * Aspose = 2\n */\nexport enum WordEngineType {\n    None = 0,\n    GroupDocs = 1,\n    Aspose = 2,\n}\n"],"names":["cache","TypedArray","product","AccessLevel","ActionType","AddressType","AttachmentType","CompanyCandidateQuerySort","CompanyCandidateState","CompanyCustomerContactQuerySort","CompanyCustomerQuerySort","CompanyProfileSort","CompanySize","CompanyUserCandidateStatus","CompanyUserQuerySort","CompanyUserStatus","CompanyUserSubcontractorStatus","CompanyUserType","ContractType","EventNoteType","EventStatusValue","EventTaskType","EventType","EventVisibility","ExtentType","ImageSize","KeywordType","LanguageLevel","LongRunningStatus","ModuleType","PartnerConnectionTrustType","PdfEngineType","PdfOrientation","ProjectAssignmentAllocationStatus","ProjectAssignmentExtentType","ProjectAssignmentMemberAllocationStatus","ProjectAssignmentMemberState","ProjectAssignmentMemberType","ProjectAssignmentRequestStatus","ProjectAssignmentStatus","ProjectPriority","ProjectQuerySort","ProjectState","SaveToApiOption","SortOrder","Status","StringComparisonOperator","TemplateAssetType","TrainingType","UserGender","WebhookEntityType","WordEngineType","$8a0a73e6b73fd0c4$export$d622b2ad8d90c771","$8a0a73e6b73fd0c4$export$6100ba28696e12de","$998eb38f4d082829$export$aafa59e2e03f2942","$998eb38f4d082829$export$68d8715fc104d294","$d66cd31ed1e926fc$export$2fad4038535569b7","$217dff30a3d4ac70$export$e4a712fff93fb00f","$1dcf91e3227adbde$export$189c6ba3eaa96ac2","$77adec0ef4cc3564$export$86cfdc1f02eaf37a","$c1cacdf8dfb07122$export$7561b63adb4bbd04","$ee1a76b9dce738ea$export$36a6a57a8e62490b","$35ced3e36f5d0f7e$export$b79c995920f3afc1","$60542ec1d49fc31b$export$14ae6a6b3ffd04a9","$ce7ed8451c935d0e$export$d30e01d0901a1ce6","$36b00609fc1b120c$export$41cc48adf872ce3b","$dbb6371482019f14$export$14ce8dcea15e7dd3","$834474c4a1ce0490$export$fb2ec0d0fb1caed1","$e155d8b2f173ff97$export$78ece8b332d00629","$61f3e2fa4b82d916$export$83981b6138d1ec0d","$599b97a53ef2ad12$export$7e1e40db963a5766","$7809228b23a78895$export$ac0154f53c770f12","$3c36f7581763a93c$export$b5d90d58758173e6","$89f607e80f4600fe$export$c5f296066cb6a74d","$70df5f40f8964230$export$fd3fb5071359f87c","$95c3f16aa49f3d77$export$3d7865934588d77e","$8facf9cb7c53c26b$export$361dc17531b2403c","$bfd1061e657fe337$export$a4f3dfa6f1416c0f","$573aadcc9216972b$export$28064ee355a535f2","$5223e238c10cf16f$export$7ae96d120743514d","$608da7722e8325e5$export$66b4c7ccfd8c5e33","$04a1d7a72b83cd0d$export$b69ffd3be5b6ff5c","$ae34271c237d1a11$export$6a8195ee8dd1cc03","$62a269496296dc0d$export$3090b6058eade22a","$27500fe556e27806$export$700ba33f355b1bcf","$d1da0387b90cbcde$export$4e525e4bebe39709","$4b6bfb55ff2a59d4$export$e2c6d619fe74c7ec","$c885cf5746f00e5d$export$14d394e96f15e153","$ef7cd373a21cada1$export$932fbbc5915a0ec0","$91651db947a5d6ed$export$b60025ff86d1f1a","$f0e6eb10d9ff0f96$export$3a87eafcf6b09bc8","$8c29d54674657bc2$export$b69cb4a58a0dc6b","$62f23f0f1fde7b23$export$4998eb9f99843070","$f5ea8b4ea6677b00$export$6e27aaf4b7580e65","$6cc2b912da2339a1$export$51868fa3a5f5dc72","$bcc35e41389c3a92$export$7082239a62c0df57","$37b76b0c7545da63$export$5e40e54564bab075","$3a5c069d91064eca$export$7ae723045d45777a","$8b0e062cfeef76a3$export$96e9906d6d93a972","$0b21466567af591c$export$efb204e93138f2d8","$aee9211db155cd1c$export$7593c8ee4e312d71","$0b442e42150884bf$export$b0710aa41382622d","$0871c506605f94fe$export$c078b135ab9633b9","$de4b528bb8d2e6f1$export$f350ca2a822d34f7","$9cb5610b88418148$export$e81b5809efab3b7","$parcel$global","globalThis","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$93b0f01b05e2607a$export$2e2bcd8739ae039","fn","thisArg","apply","arguments","toString","$aace3e920a0f1e4d$var$toString","prototype","getPrototypeOf","$aace3e920a0f1e4d$var$getPrototypeOf","$aace3e920a0f1e4d$var$kindOf","create","thing","str","call","slice","toLowerCase","$aace3e920a0f1e4d$var$kindOfTest","type","$aace3e920a0f1e4d$var$typeOfTest","isArray","$aace3e920a0f1e4d$var$isArray","Array","$aace3e920a0f1e4d$var$isUndefined","$aace3e920a0f1e4d$var$isArrayBuffer","$aace3e920a0f1e4d$var$isString","$aace3e920a0f1e4d$var$isFunction","$aace3e920a0f1e4d$var$isNumber","$aace3e920a0f1e4d$var$isObject","$aace3e920a0f1e4d$var$isPlainObject","val","Symbol","toStringTag","iterator","$aace3e920a0f1e4d$var$isDate","$aace3e920a0f1e4d$var$isFile","$aace3e920a0f1e4d$var$isBlob","$aace3e920a0f1e4d$var$isFileList","$aace3e920a0f1e4d$var$isURLSearchParams","$aace3e920a0f1e4d$var$forEach","obj","allOwnKeys","i","l","length","key","keys","getOwnPropertyNames","len","$aace3e920a0f1e4d$var$findKey","_key","$aace3e920a0f1e4d$var$_global","self","window","$aace3e920a0f1e4d$var$isContextDefined","context","$aace3e920a0f1e4d$var$isTypedArray","Uint8Array","$aace3e920a0f1e4d$var$isHTMLForm","$aace3e920a0f1e4d$var$hasOwnProperty","hasOwnProperty","prop","$aace3e920a0f1e4d$var$isRegExp","$aace3e920a0f1e4d$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","$aace3e920a0f1e4d$var$ALPHA","$aace3e920a0f1e4d$var$DIGIT","$aace3e920a0f1e4d$var$ALPHABET","DIGIT","ALPHA","ALPHA_DIGIT","toUpperCase","$aace3e920a0f1e4d$var$isAsyncFn","$aace3e920a0f1e4d$export$2e2bcd8739ae039","isArrayBuffer","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isBoolean","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isRegExp","isFunction","isStream","pipe","isURLSearchParams","isTypedArray","isFileList","forEach","merge","$aace3e920a0f1e4d$var$merge","caseless","result","assignValue","targetKey","extend","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","value","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","kindOf","kindOfTest","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","forEachEntry","generator","next","done","pair","matchAll","regExp","matches","exec","push","isHTMLForm","hasOwnProp","reduceDescriptors","freezeMethods","writable","Error","toObjectSet","arrayOrString","delimiter","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","findKey","global","isContextDefined","ALPHABET","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","then","catch","$0139f1d30f4d6bd5$var$AxiosError","message","code","config","request","response","captureStackTrace","toJSON","description","number","fileName","lineNumber","columnNumber","status","$0139f1d30f4d6bd5$var$prototype","$0139f1d30f4d6bd5$var$descriptors","from","error","customProps","axiosError","cause","b64","tmp","lens","$8a0a73e6b73fd0c4$var$getLens","validLen","placeHoldersLen","$8a0a73e6b73fd0c4$var$Arr","curByte","$8a0a73e6b73fd0c4$var$revLookup","uint8","extraBytes","parts","len2","$8a0a73e6b73fd0c4$var$encodeChunk","start","end","output","$8a0a73e6b73fd0c4$var$lookup","num","join","$8a0a73e6b73fd0c4$var$code","$8a0a73e6b73fd0c4$var$i","$8a0a73e6b73fd0c4$var$len","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","pow","c","rt","isNaN","abs","Infinity","floor","log","LN2","$0934e0939605d48c$var$customInspectSymbol","$0934e0939605d48c$var$createBuffer","RangeError","buf","setPrototypeOf","$0934e0939605d48c$var$Buffer","arg","encodingOrOffset","TypeError","$0934e0939605d48c$var$allocUnsafe","$0934e0939605d48c$var$from","$0934e0939605d48c$var$fromString","string","encoding","isEncoding","$0934e0939605d48c$var$byteLength","actual","write","$0934e0939605d48c$var$fromArrayView","arrayView","$0934e0939605d48c$var$isInstance","copy","$0934e0939605d48c$var$fromArrayBuffer","byteOffset","byteLength","$0934e0939605d48c$var$fromArrayLike","SharedArrayBuffer","valueOf","$0934e0939605d48c$var$fromObject","$0934e0939605d48c$var$checked","data","toPrimitive","$0934e0939605d48c$var$assertSize","array","mustMatch","loweredCase","$0934e0939605d48c$var$utf8ToBytes","$0934e0939605d48c$var$base64ToBytes","$0934e0939605d48c$var$slowToString","$0934e0939605d48c$var$hexSlice","out","$0934e0939605d48c$var$hexSliceLookupTable","$0934e0939605d48c$var$utf8Slice","$0934e0939605d48c$var$asciiSlice","min","fromCharCode","$0934e0939605d48c$var$latin1Slice","$0934e0939605d48c$var$utf16leSlice","bytes","res","$0934e0939605d48c$var$swap","$0934e0939605d48c$var$bidirectionalIndexOf","dir","$0934e0939605d48c$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","$0934e0939605d48c$var$decodeCodePointsArray","codePoints","$0934e0939605d48c$var$checkOffset","ext","$0934e0939605d48c$var$checkInt","max","$0934e0939605d48c$var$wrtBigUInt64LE","$0934e0939605d48c$var$checkIntBI","lo","BigInt","hi","$0934e0939605d48c$var$wrtBigUInt64BE","$0934e0939605d48c$var$checkIEEE754","$0934e0939605d48c$var$writeFloat","littleEndian","noAssert","$0934e0939605d48c$var$writeDouble","TYPED_ARRAY_SUPPORT","$0934e0939605d48c$var$typedArraySupport","proto","foo","console","poolSize","alloc","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","remaining","$0934e0939605d48c$var$hexWrite","strLen","parsed","parseInt","substr","$0934e0939605d48c$var$blitBuffer","$0934e0939605d48c$var$asciiToBytes","byteArray","$0934e0939605d48c$var$utf16leToBytes","units","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$0934e0939605d48c$var$defineBigIntMethod","$0934e0939605d48c$var$validateNumber","first","last","$0934e0939605d48c$var$boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$0934e0939605d48c$var$errors","$0934e0939605d48c$var$E","sym","getMessage","Base","$0934e0939605d48c$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$0934e0939605d48c$var$INVALID_BASE64_RE","leadSurrogate","$0934e0939605d48c$var$base64clean","src","dst","table","i16","$0934e0939605d48c$var$BufferBigIntNotDefined","$fd07b9cb0132c1f6$var$isVisitable","$fd07b9cb0132c1f6$var$removeBrackets","$fd07b9cb0132c1f6$var$renderKey","path","dots","map","token","$fd07b9cb0132c1f6$var$predicates","test","$fd07b9cb0132c1f6$export$2e2bcd8739ae039","formData","options","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","_Blob","Blob","convertValue","toISOString","$fd07b9cb0132c1f6$require$Buffer","JSON","stringify","some","el","index","exposedHelpers","isVisitable","build","pop","$344cf8e4292137b6$var$encode","charMap","encodeURIComponent","match","$344cf8e4292137b6$var$AxiosURLSearchParams","params","_pairs","$344cf8e4292137b6$var$prototype","$db2f05ec923f2ee7$var$encode","$db2f05ec923f2ee7$export$2e2bcd8739ae039","url","serializedParams","_encode","encode","serializeFn","serialize","hashmarkIndex","encoder","$01c17f80085c95b1$export$2e2bcd8739ae039","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","$3075bac9f30e7782$export$2e2bcd8739ae039","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$a85e5bed82430d61$export$2e2bcd8739ae039","URLSearchParams","$46b12d255f217052$export$2e2bcd8739ae039","$2e4211376cea43e6$export$2e2bcd8739ae039","$232de52881daaba8$exports","$232de52881daaba8$export$c4996c4b7b93b0bf","$232de52881daaba8$export$c0bcc9250309d66","$232de52881daaba8$export$c81692cf5af97dac","document","navigator","WorkerGlobalScope","importScripts","$852831b4a152a7ad$export$2e2bcd8739ae039","isBrowser","classes","protocols","$cb8fe7f388dc4432$export$2e2bcd8739ae039","entries","buildPath","isNumericKey","isLast","$cb8fe7f388dc4432$var$arrayToObject","$e30871f78dcd7f19$var$defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","helpers","isNode","_FormData","env","$e30871f78dcd7f19$var$stringifySafely","rawValue","parser","parse","transformResponse","JSONRequested","responseType","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","$36eacf0f5ae88424$var$ignoreDuplicateOf","$36eacf0f5ae88424$export$2e2bcd8739ae039","rawHeaders","line","substring","$54e5234108b8e954$var$$internals","$54e5234108b8e954$var$normalizeHeader","header","$54e5234108b8e954$var$normalizeValue","$54e5234108b8e954$var$isValidHeaderName","$54e5234108b8e954$var$matchHeaderValue","isHeaderNameFilter","$54e5234108b8e954$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","$54e5234108b8e954$var$parseTokens","tokens","tokensRE","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","w","char","targets","asStrings","computed","accessor","accessors","internals","defineAccessor","$54e5234108b8e954$var$buildAccessors","accessorName","methodName","arg1","arg2","arg3","$ec027d10dfede142$export$2e2bcd8739ae039","fns","$fbc9c01c5c3dc518$export$2e2bcd8739ae039","__CANCEL__","$63b8b72909769bf2$var$CanceledError","ERR_CANCELED","mapped","headerValue","$4d3cf801f7fd4dc6$export$2e2bcd8739ae039","hasStandardBrowserEnv","expires","domain","secure","cookie","Date","toGMTString","RegExp","decodeURIComponent","remove","now","$8ed3292b1f9dccb5$export$2e2bcd8739ae039","baseURL","requestedURL","relativeURL","$3a08e3bf7b3045fa$export$2e2bcd8739ae039","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","$48a8aeed25ee768a$export$2e2bcd8739ae039","samplesCount","firstSampleTS","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","round","$61abd1574bd1dd32$var$progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","$d570c100e0cb7a05$var$knownAdapters","http","xhr","$61abd1574bd1dd32$var$isXHRAdapterSupported","XMLHttpRequest","Promise","resolve","reject","onCanceled","requestData","requestHeaders","withXSRFToken","cancelToken","unsubscribe","signal","removeEventListener","hasStandardBrowserWebWorkerEnv","Boolean","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","err","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","$d570c100e0cb7a05$var$renderReason","reason","$d570c100e0cb7a05$var$isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","$96666136aaccd2e5$var$throwIfCancellationRequested","throwIfRequested","$96666136aaccd2e5$export$2e2bcd8739ae039","$20ede3a7e8b675d4$var$headersToObject","$20ede3a7e8b675d4$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$4c74d331112ba968$export$a4ad2735b021c132","$63efb8494987aa98$var$validators","$63efb8494987aa98$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","warn","$63efb8494987aa98$export$2e2bcd8739ae039","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","$cd0b8e3cbef64068$var$validators","$cd0b8e3cbef64068$var$Axios","instanceConfig","defaults","interceptors","configOrUrl","_request","dummy","promise","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","chain","bind","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","$3218dd97b5460664$var$CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","$edd7ef3f6e3b67e5$var$HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","$5d7526a7a1e5b3fb$var$axios","$5d7526a7a1e5b3fb$var$createInstance","defaultConfig","instance","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","all","promises","spread","callback","isAxiosError","payload","mergeConfig","AxiosHeaders","formToJSON","getAdapter","HttpStatusCode","default","$125d1ceb57662f9a$export$1c00760e9e5a4e95","$125d1ceb57662f9a$export$c1fbed17c2f6a328","$125d1ceb57662f9a$export$1ab0c6b20d94fa14","$125d1ceb57662f9a$export$3b22524397b493c6","$125d1ceb57662f9a$export$fd08e3cb425f0d61","$125d1ceb57662f9a$export$a4ad2735b021c132","$125d1ceb57662f9a$export$84bf76cd7afc7469","$125d1ceb57662f9a$export$848c9b7ead0df967","$125d1ceb57662f9a$export$fbafdbe06a5b5a9a","$125d1ceb57662f9a$export$3ae0fd4797ed47c8","$125d1ceb57662f9a$export$10ae0d317ea97f8b","$125d1ceb57662f9a$export$4e7d6ff0f3e6520","$125d1ceb57662f9a$export$a972f69c851492b3","$125d1ceb57662f9a$export$86d7c59254d6a2c9","$125d1ceb57662f9a$export$17ddc20a97d669e2","$125d1ceb57662f9a$export$7ec1ebcfa9d8bd6a","WeakMap"],"version":3,"file":"index.js.map"}