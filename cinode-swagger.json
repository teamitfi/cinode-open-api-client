{
  "openapi": "3.0.1",
  "info": {
    "title": "Cinode API",
    "description": "Cinode's Open API",
    "termsOfService": "https://cinode.com/en/terms/api-terms-of-service",
    "contact": {
      "name": "Cinode Support",
      "url": "https://support.cinode.com/"
    },
    "license": {
      "name": "Cinode AB",
      "url": "https://www.cinode.com"
    },
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://api.cinode.com"
    }
  ],
  "paths": {
    "/v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}": {
      "get": {
        "tags": [
          "Absence"
        ],
        "summary": "Get absence period by id",
        "operationId": "Absence",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Your company id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "The id of the actual user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id for the requested absence period",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Absence"
        ],
        "summary": "Update Absence Item for User",
        "operationId": "UpdateAbsence",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Absence Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileCommitmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Absence"
        ],
        "summary": "Delete absence",
        "operationId": "DeleteAbsence",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/absences": {
      "post": {
        "tags": [
          "Absence"
        ],
        "summary": "Create Absence Item for User",
        "operationId": "NewAbsence",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileCommitmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AbsenceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbsencePeriodModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "Absences"
        ],
        "summary": "Get absence period by company user id",
        "operationId": "Absences",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Your Cinode Company id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "The id of the actual User",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencePeriodDtoModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencePeriodDtoModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencePeriodDtoModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencePeriodDtoModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsencePeriodDtoModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/absence/types": {
      "get": {
        "tags": [
          "AbsenceType"
        ],
        "summary": "Get absence types for company",
        "operationId": "AbsenceTypes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceTypeModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceTypeModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceTypeModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceTypeModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceTypeModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/availability": {
      "post": {
        "tags": [
          "Availability"
        ],
        "summary": "Get availability for company users. Omitting companyUserId gets availability for all company users in company.",
        "operationId": "SearchAvailability",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Your Cinode Company id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Filter options",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailabilityFilterModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailabilityFilterModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailabilityFilterModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AvailabilityFilterModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailabilityModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get company by id",
        "operationId": "Company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "CompanyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/addresses/{id}/users": {
      "get": {
        "tags": [
          "CompanyAddressUsers"
        ],
        "summary": "Get company users list for an address",
        "operationId": "CompanyAddressUsers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}": {
      "get": {
        "tags": [
          "CompanyCandidate"
        ],
        "summary": "Get Candidate by Id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "Candidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CompanyCandidate"
        ],
        "summary": "Patch company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "PatchCompanyCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyCandidatePatchDocument` for full type information per property",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              },
              "example": [{"value":0,"path":"/pipelineid","op":"replace"},{"value":0,"path":"/pipelinestageid","op":"replace"},{"value":0,"path":"/recruitmentmanagerid","op":"replace"},{"value":0,"path":"/state","op":"replace"},{"value":"2024-02-24T20:48:50.0685193+01:00","path":"/availablefromdate","op":"replace"},{"value":"string","path":"/campaigncode","op":"replace"}]
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCandidate"
        ],
        "summary": "Delete candidate from the system\r\nThis action is irreversible, use with caution",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "DeleteCompanyCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates": {
      "post": {
        "tags": [
          "CompanyCandidate"
        ],
        "summary": "Create Candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "AddCompanyCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCandidateAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateExtendedModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCandidates"
        ],
        "summary": "Get Candidates",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "Candidates",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/invite": {
      "post": {
        "tags": [
          "CompanyCandidate"
        ],
        "summary": "Invite the CompanyCandidate to create their own Cinode account\r\nA email is sent with your message and details for how to login",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "InviteCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Model with data about the candidate needed for the invitation",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddInviteModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddInviteModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddInviteModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddInviteModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/{id}": {
      "get": {
        "tags": [
          "CompanyCandidateEvent"
        ],
        "summary": "Get company candidates event by id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateEvent",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}": {
      "get": {
        "tags": [
          "CompanyCandidateEventMeeting"
        ],
        "summary": "Get company candidates meeting event with specified id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCandidateEventMeeting"
        ],
        "summary": "Update meeting event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "UpdateCompanyCandidateEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCandidateEventMeeting"
        ],
        "summary": "Delete company candidate meeting event",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "DeleteCompanyCandidateEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings": {
      "post": {
        "tags": [
          "CompanyCandidateEventMeeting"
        ],
        "summary": "Add new meeting event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "NewCompanyCandidateEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCandidateEventMeetings"
        ],
        "summary": "Get company candidates events meetings list",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateMeetingEventList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}": {
      "get": {
        "tags": [
          "CompanyCandidateEventNote"
        ],
        "summary": "Get company candidates note event with specified id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCandidateEventNote"
        ],
        "summary": "Update note event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "UpdateCompanyCandidateEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Note Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCandidateEventNote"
        ],
        "summary": "Delete company candidate note event",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "DeleteCompanyCandidateEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/notes": {
      "post": {
        "tags": [
          "CompanyCandidateEventNote"
        ],
        "summary": "Add new note event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "NewCompanyCandidateEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Note Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCandidateEventNotes"
        ],
        "summary": "Get company candidates events notes list",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateNoteEventList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events": {
      "get": {
        "tags": [
          "CompanyCandidateEvents"
        ],
        "summary": "Get company candidates events list",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateEvents",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}": {
      "get": {
        "tags": [
          "CompanyCandidateEventTask"
        ],
        "summary": "Get company candidates task event with specified id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCandidateEventTask"
        ],
        "summary": "Update task event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "UpdateCompanyCandidateEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Task Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCandidateEventTask"
        ],
        "summary": "Delete company candidate task event",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "DeleteCompanyCandidateEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks": {
      "post": {
        "tags": [
          "CompanyCandidateEventTask"
        ],
        "summary": "Add new task event for company candidate",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "NewCompanyCandidateEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Task Event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCandidateEventTasks"
        ],
        "summary": "Get company candidates events tasks list",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CompanyCandidateTaskEventList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidateEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "CompanyCandidateFileAttachment"
        ],
        "summary": "Get Candidate File Attachment by Id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "GetCandidateAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/attachments": {
      "post": {
        "tags": [
          "CompanyCandidateFileAttachments"
        ],
        "summary": "Upload Candidate File Attachment",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CandidateAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files",
                  "Title"
                ],
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateFileAttachmentListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateFileAttachmentListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateFileAttachmentListModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateFileAttachmentListModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateFileAttachmentListModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/pipelines": {
      "get": {
        "tags": [
          "CompanyCandidatePipelines"
        ],
        "summary": "Get candidate pipelines",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CandidatePipelines",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidatePipelineModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidatePipelineModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidatePipelineModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidatePipelineModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCandidatePipelineModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/skills": {
      "post": {
        "tags": [
          "CompanyCandidateSkills"
        ],
        "summary": "Add a Skill to company candidate",
        "description": "Sample request:\r\n\r\n    POST /v0.1/companies/1/candidates/19870/skills\r\n    {\r\n        \"name\": \"SQL\",\r\n        \"companyCandidateId\": 19870,\r\n        \"keywordSynonymId\": 577,\r\n        \"languageId\":1\r\n    }",
        "operationId": "NewCompanyCandidateSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCandidateSkillAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateSkillAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateSkillAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateSkillAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateSkillAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{candidateId}/skills/{id}": {
      "delete": {
        "tags": [
          "CompanyCandidateSkills"
        ],
        "summary": "Delete Candidate Skill",
        "description": "Sample request:\r\n\r\n    DELETE /v0.1/companies/1/candidates/19870/skills/577",
        "operationId": "DeleteCompanyCandidateSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "candidateId",
            "in": "path",
            "description": "CandidateId Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Skill Keyword Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/uriattachments": {
      "post": {
        "tags": [
          "CompanyCandidateUriAttachment"
        ],
        "summary": "Add Candidate Uri (Link)",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "CandidateUriAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateUriAttachmentAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateUriAttachmentAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateUriAttachmentAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateUriAttachmentAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/uriattachments/{attachmentId}": {
      "delete": {
        "tags": [
          "CompanyCandidateUriAttachment"
        ],
        "summary": "Delete Candidate Uri (Link)",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "DeleteCandidateUriAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCandidateUriAttachments"
        ],
        "summary": "Get Candidate Uri Attachment by Id",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "GetCandidateUriAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCandidateUriAttachmentModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/{id}/user": {
      "post": {
        "tags": [
          "CompanyCandidateUser"
        ],
        "summary": "Create an account for a candidate.\r\nNo email is sent to the candidate, you will have to communicate login details to the candidate yourself.",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "AddCandidateUserFromCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Basic account information",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddCandidateUserModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddCandidateUserModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddCandidateUserModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCandidateAddCandidateUserModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserCandidateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserCandidateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserCandidateModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserCandidateModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserCandidateModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/capabilities": {
      "get": {
        "tags": [
          "CompanyCapabilities"
        ],
        "summary": "Get company capabilities",
        "operationId": "CompanyCapabilities",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "CompanyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCapabilitiesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCapabilitiesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCapabilitiesModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCapabilitiesModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCapabilitiesModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/currencies": {
      "get": {
        "tags": [
          "CompanyCurrencies"
        ],
        "summary": "Get company currencies",
        "operationId": "CompanyCurrencies",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{id}": {
      "get": {
        "tags": [
          "CompanyCustomer"
        ],
        "summary": "Get company customer by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "GetCompanyCustomer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomer"
        ],
        "summary": "Update company customer",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "UpdateCompanyCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CompanyCustomer"
        ],
        "summary": "Patch company customer",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "PatchCompanyCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Patch of CompanyCustomerPatchModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              },
              "example": [{"value":false,"path":"/status","op":"replace"},{"value":"string","path":"/name","op":"replace"},{"value":"string","path":"/description","op":"replace"},{"value":"string","path":"/corporateidentitynumber","op":"replace"},{"value":"string","path":"/vatnumber","op":"replace"},{"value":"string","path":"/identification","op":"replace"},{"value":"string","path":"/email","op":"replace"},{"value":"string","path":"/homepage","op":"replace"},{"value":"string","path":"/phone","op":"replace"},{"value":"string","path":"/fax","op":"replace"},{"value":false,"path":"/intermediator","op":"replace"},{"value":0,"path":"/size","op":"replace"},{"value":0,"path":"/countryid","op":"replace"},{"value":0,"path":"/turnover","op":"replace"},{"value":0,"path":"/turnovercurrencyid","op":"replace"}]
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomer"
        ],
        "summary": "Delete customer",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteCompanyCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerDeleteModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerDeleteModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerDeleteModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerDeleteModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerDeleteModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers": {
      "post": {
        "tags": [
          "CompanyCustomer"
        ],
        "summary": "Add company customer",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewCompanyCustomer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCustomers"
        ],
        "summary": "Get company customers list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerAddress"
        ],
        "summary": "Get customer address by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CustomerAddress",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomerAddress"
        ],
        "summary": "Update customer address",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "EditCompanyCustomerAddress",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Customer Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerAddressAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomerAddress"
        ],
        "summary": "Delete customer address",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteCompanyCustomerAddress",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/addresses": {
      "post": {
        "tags": [
          "CompanyCustomerAddress"
        ],
        "summary": "Add customer address",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewCompanyCustomerAddress",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerAddressAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerAddressAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerAddressModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerContact"
        ],
        "summary": "Get customer contact by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "Contact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomerContact"
        ],
        "summary": "Update customer contact",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "EditCompanyCustomerContact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerContactAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomerContact"
        ],
        "summary": "Delete customer contact",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteCompanyCustomerContact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/contacts": {
      "post": {
        "tags": [
          "CompanyCustomerContact"
        ],
        "summary": "Add customer contact",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewCompanyCustomerContact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerContactAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerContactAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerContactModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCustomerContacts"
        ],
        "summary": "Get customer contact list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "Contacts",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerContactModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerContactModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerContactModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerContactModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerContactModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/contacts/{contactId}/tags": {
      "post": {
        "tags": [
          "CompanyCustomerContactTags"
        ],
        "summary": "Edit Tags for CustomerContact",
        "description": "Note:\r\n\r\n    Posted tags will replace any existing tags for the contact.\r\n    A new tag will be created if the Id for a tag is not provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/customers/19870/contacts/5360/tags\r\n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\",\r\n            \"id\": 1\r\n        },\r\n    ]",
        "operationId": "EditCustomerContactTags",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "CustomerContact Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyTagModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerEvent"
        ],
        "summary": "Get customer event by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEvent",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events": {
      "get": {
        "tags": [
          "CompanyCustomerEvents"
        ],
        "summary": "Get customer events list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEvents",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerEventsMeeting"
        ],
        "summary": "Get customer event meeting by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomerEventsMeeting"
        ],
        "summary": "Update customer event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "UpdateMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventMeetingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomerEventsMeeting"
        ],
        "summary": "Delete customer event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/meetings": {
      "post": {
        "tags": [
          "CompanyCustomerEventsMeeting"
        ],
        "summary": "Add customer event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventMeetingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCustomerEventsMeetings"
        ],
        "summary": "Get customer event meetings list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventMeetings",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerEventsNote"
        ],
        "summary": "Get customer event note by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomerEventsNote"
        ],
        "summary": "Update customer event note",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "UpdateNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventMeetingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomerEventsNote"
        ],
        "summary": "Delete customer event note",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/notes": {
      "post": {
        "tags": [
          "CompanyCustomerEventsNote"
        ],
        "summary": "Add customer event note",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventNoteAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCustomerEventsNotes"
        ],
        "summary": "Get customer event notes list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventNotes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}": {
      "get": {
        "tags": [
          "CompanyCustomerEventsTask"
        ],
        "summary": "Get customer event task by id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyCustomerEventsTask"
        ],
        "summary": "Update customer event task",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "UpdateTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventTaskAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyCustomerEventsTask"
        ],
        "summary": "Delete customer event task",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "DeleteTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/events/tasks": {
      "post": {
        "tags": [
          "CompanyCustomerEventsTask"
        ],
        "summary": "Add customer event task",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "NewTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerEventTaskAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyCustomerEventsTasks"
        ],
        "summary": "Get customer event tasks list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerEventTasks",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "CompanyCustomerFileAttachment"
        ],
        "summary": "Get customer file attachment by Id",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "GetCustomerAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/managers": {
      "get": {
        "tags": [
          "CompanyCustomerManagers"
        ],
        "summary": "Get customer managers",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CompanyCustomerManagers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyCustomerManagers"
        ],
        "summary": "Add customer responsible",
        "description": "Sample request:\r\n\r\n    POST /v0.1/companies/1/customers/22228/managers\r\n    {\r\n        [\r\n           51096\r\n        ]         \r\n    }",
        "operationId": "AddCompanyCustomerResponsible",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyCustomerManagersAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerManagersAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerManagersAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerManagersAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyCustomerManagersAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerManagerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/managers/{id}": {
      "delete": {
        "tags": [
          "CompanyCustomerManagers"
        ],
        "summary": "Remove customer responsible",
        "description": "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/customers/22228/managers/54632",
        "operationId": "RemoveCustomerManager",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/extended": {
      "get": {
        "tags": [
          "CompanyCustomersExtended"
        ],
        "summary": "Get extended company customers list",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "CustomersExtended",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCustomerExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/{customerId}/tags": {
      "post": {
        "tags": [
          "CompanyCustomerTags"
        ],
        "summary": "Edit Tags for Customer",
        "description": "Note:\r\n\r\n    Posted tags will replace any existing tags for the customer.\r\n    A new tag will be created if the Id for a tag is not provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/customers/19870/tags\r\n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\",\r\n            \"id\": 1\r\n        },\r\n    ]",
        "operationId": "EditCustomerTags",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyTagModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyCustomerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/images/{id}": {
      "get": {
        "tags": [
          "CompanyImage"
        ],
        "summary": "Get Company Image by Id",
        "operationId": "CompanyImage",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Image id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/images/{id}/{imageFileName}": {
      "get": {
        "tags": [
          "CompanyImage"
        ],
        "summary": "Download Company Image",
        "operationId": "CompanyImageDownload",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Image id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageFileName",
            "in": "path",
            "description": "Image File Name",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{id}/images": {
      "get": {
        "tags": [
          "CompanyImages"
        ],
        "summary": "Get Company Images Assigned to User",
        "operationId": "CompanyImages",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyImageModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyImageModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyImageModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyImageModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyImageModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      },
      "post": {
        "tags": [
          "CompanyImages"
        ],
        "summary": "Add Image to User",
        "operationId": "AddCompanyImage",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "SetAsPrimary": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "SetAsPrimary": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyImageModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/managers": {
      "get": {
        "tags": [
          "CompanyManagers"
        ],
        "summary": "Get company managers",
        "description": "Sample request:\r\n\r\n    GET /v0.1/companies/1/managers",
        "operationId": "CompanyManagers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/profiles": {
      "post": {
        "tags": [
          "CompanyProfiles"
        ],
        "summary": "Get profiles list",
        "description": "Sample request:\r\n\r\n    POST /v0.1/companies/1/profiles\r\n    {\r\n        \"createdOffsetDays\": 90,\r\n        \"updatedOffsetDays\": 30,\r\n        \"pageAndSortBy\": {             \r\n            \"page\": 1,\r\n            \"itemsPerPage\": 15,\r\n            \"order\": 0,\r\n            \"sortBy\": 1\r\n        }\r\n    }",
        "operationId": "CompanyProfiles",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Company Profile Filter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyProfileFilterModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyProfileFilterModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyProfileFilterModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyProfileFilterModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfilesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfilesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfilesModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfilesModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfilesModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "CompanyProjectFileAttachment"
        ],
        "summary": "Get Project file attachment by Id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "GetProjectAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/recruitment/managers": {
      "get": {
        "tags": [
          "CompanyRecruitmentManagers"
        ],
        "summary": "Get recruitment managers",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "RecruitmentManagers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRecruitmentManagerModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRecruitmentManagerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRecruitmentManagerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRecruitmentManagerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRecruitmentManagerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/resumes": {
      "get": {
        "tags": [
          "CompanyResumes"
        ],
        "summary": "Get resumes list",
        "description": "Requires module: CompanyUserResume. ",
        "operationId": "CompanyResumes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}": {
      "get": {
        "tags": [
          "CompanySubcontractorGroup"
        ],
        "summary": "Get Subcontractor Group by Id",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "GetCompanySubcontractorGroup",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorGroupId",
            "in": "path",
            "description": "Subcontractor Group Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members": {
      "post": {
        "tags": [
          "CompanySubcontractorGroupMembers"
        ],
        "summary": "Add subcontractor group member",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "AddCompanySubcontractorGroupMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorGroupId",
            "in": "path",
            "description": "Subcontractor Group Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "AddCompanySubcontractorGroupMemberModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddCompanySubcontractorGroupMemberModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddCompanySubcontractorGroupMemberModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddCompanySubcontractorGroupMemberModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddCompanySubcontractorGroupMemberModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/groups/{subcontractorGroupId}/members/{id}": {
      "delete": {
        "tags": [
          "CompanySubcontractorGroupMembers"
        ],
        "summary": "Delete subcontractor group member",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "DeleteCompanySubcontractorGroupMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorGroupId",
            "in": "path",
            "description": "Subcontractor Group Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Subcontractor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/groups": {
      "get": {
        "tags": [
          "CompanySubcontractorGroups"
        ],
        "summary": "Get Subcontractor Groups by Company Id",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "GetCompanySubcontractorGroups",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySubcontractorGroupModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/tags/{id}": {
      "get": {
        "tags": [
          "CompanyTag"
        ],
        "summary": "Get company tag by Id",
        "description": "Sample request:\r\n            \r\n    GET /v0.1/companies/1/tags/1",
        "operationId": "CompanyTag",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Tag Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "201": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/tags": {
      "get": {
        "tags": [
          "CompanyTags"
        ],
        "summary": "Get company tags",
        "description": "Sample request:\r\n\r\n    GET /v0.1/companies/1/tags",
        "operationId": "CompanyTags",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTagBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{id}": {
      "get": {
        "tags": [
          "CompanyTeam"
        ],
        "summary": "Get team by id",
        "operationId": "Team",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyTeam"
        ],
        "summary": "Update team",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams": {
      "post": {
        "tags": [
          "CompanyTeam"
        ],
        "summary": "Add team",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "NewTeam",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyTeams"
        ],
        "summary": "Get teams list",
        "operationId": "CompanyTeams",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/managers": {
      "get": {
        "tags": [
          "CompanyTeamManagers"
        ],
        "summary": "Get team managers",
        "operationId": "TeamManagers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyTeamManagers"
        ],
        "summary": "Add team manager",
        "description": "Sample request:\r\n            \r\n    POST /v0.1/companies/1/teams/1234/managers\r\n    {\r\n        \"teamId\" : 1234,\r\n        \"companyUserId\" : 54632\r\n    }",
        "operationId": "AddTeamManager",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "TeamMemberEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamManagerEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamManagerEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamManagerEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamManagerEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamManagerModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamManagerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamManagerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamManagerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamManagerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/managers/{id}": {
      "delete": {
        "tags": [
          "CompanyTeamManagers"
        ],
        "summary": "Remove team manager",
        "description": "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/teams/1234/managers/54632",
        "operationId": "RemoveTeamManager",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/members/{id}": {
      "get": {
        "tags": [
          "CompanyTeamMember"
        ],
        "summary": "Get team member",
        "operationId": "GetTeamMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyTeamMember"
        ],
        "summary": "Update team member",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "UpdateTeamMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamMemberEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyTeamMember"
        ],
        "summary": "Remove team member",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "RemoveTeamMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/members": {
      "post": {
        "tags": [
          "CompanyTeamMember"
        ],
        "summary": "Add team member",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "AddTeamMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamMemberAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyTeamMembers"
        ],
        "summary": "Get team members",
        "operationId": "GetTeamMembers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/members/{id}/move": {
      "post": {
        "tags": [
          "CompanyTeamMember"
        ],
        "summary": "Move team member and associated bookings to another team",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "MoveTeamMember",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamMemberMoveModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberMoveModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberMoveModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberMoveModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberMoveModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/users": {
      "get": {
        "tags": [
          "CompanyTeamUsers"
        ],
        "summary": "Get team members",
        "operationId": "GetTeamUsers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "CompanyTeamUsers"
        ],
        "summary": "Add team member",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "AddTeamUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "TeamMemberAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TeamMemberAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v0.1/companies/{companyId}/teams/{teamId}/users/{id}": {
      "delete": {
        "tags": [
          "CompanyTeamUsers"
        ],
        "summary": "Remove team member",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "RemoveTeamUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v0.1/companies/{companyId}/users/{id}": {
      "get": {
        "tags": [
          "CompanyUser"
        ],
        "summary": "Get company user by id",
        "operationId": "User",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUser"
        ],
        "summary": "Update company user",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "UpdateCompanyUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CompanyUser"
        ],
        "summary": "Patch company user",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "PatchCompanyUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Only certain properties on the user are patchable. See the generated example for a list of available properties, using the `op: \"replace\"` as example. See the generated schema for `ICompanyUserEmployeePatchDocument` for full type information per property",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              },
              "example": [{"value":0,"path":"/status","op":"replace"},{"value":"2024-02-24T20:48:50.5147148+01:00","path":"/employmentstartdate","op":"replace"},{"value":"2024-02-24T20:48:50.5147186+01:00","path":"/employmentenddate","op":"replace"},{"value":"string","path":"/employmentnumber","op":"replace"},{"value":0,"path":"/invoicinggoal","op":"replace"},{"value":0,"path":"/mobility","op":"replace"},{"value":0,"path":"/availabilitypercent","op":"replace"},{"value":"2024-02-24T20:48:50.5147221+01:00","path":"/availablefromdate","op":"replace"},{"value":"string","path":"/title","op":"replace"},{"value":"string","path":"/email","op":"replace"},{"value":"string","path":"/taxtable","op":"replace"},{"value":0,"path":"/basesalary","op":"replace"},{"value":0,"path":"/provision","op":"replace"},{"value":0,"path":"/hourlytargetrate","op":"replace"},{"value":0,"path":"/selfcost","op":"replace"},{"value":0,"path":"/locationid","op":"replace"},{"value":0,"path":"/defaultcurrencyid","op":"replace"},{"value":0,"path":"/displaycurrencyid","op":"replace"},{"value":"string","path":"/firstname","op":"replace"},{"value":"string","path":"/lastname","op":"replace"},{"value":"2024-02-24T20:48:50.5147288+01:00","path":"/dateofbirth","op":"replace"},{"value":0,"path":"/gender","op":"replace"},{"value":0,"path":"/companycalendarid","op":"replace"},{"value":"string","path":"/timezoneid","op":"replace"},{"value":"string","path":"/phone","op":"replace"},{"value":"string","path":"/desiredassignment","op":"replace"},{"value":"string","path":"/internalidentifier","op":"replace"},{"value":"string","path":"/twitter","op":"replace"},{"value":"string","path":"/linkedin","op":"replace"},{"value":"string","path":"/homepage","op":"replace"},{"value":"string","path":"/blog","op":"replace"},{"value":"string","path":"/github","op":"replace"}]
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUser"
        ],
        "summary": "Delete user from the system\r\nFirstly, the user has to be disconnected, which can be done through a PATCH or PUT\r\nThis action is irreversible, use with caution",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "DeleteCompanyUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "CompanyUser FirstName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "CompanyUser LastName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users": {
      "post": {
        "tags": [
          "CompanyUser"
        ],
        "summary": "Add company user employee",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "AddCompanyUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUsers"
        ],
        "summary": "Get company users list",
        "operationId": "CompanyUsers",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/convert-aad": {
      "post": {
        "tags": [
          "CompanyUserConvert"
        ],
        "summary": "Convert company user employee to an AAD account",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "ConvertUserToAadAccount",
        "parameters": [
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ConvertCompanyUserToAadAccountModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertCompanyUserToAadAccountModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertCompanyUserToAadAccountModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertCompanyUserToAadAccountModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertCompanyUserToAadAccountModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/{id}": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEvent"
        ],
        "summary": "Get employee event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEvent",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEventMeeting"
        ],
        "summary": "Get employee meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserEmployeeEventMeeting"
        ],
        "summary": "Updates employee meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "UpdateCompanyUserEmployeeEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserEmployeeEventMeeting"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "DeleteCompanyUserEmployeeEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings": {
      "post": {
        "tags": [
          "CompanyUserEmployeeEventMeeting"
        ],
        "summary": "Creates new employee meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "NewCompanyUserEmployeeEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUserEmployeeEventsMeetings"
        ],
        "summary": "Get employee meetings events list",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventMeetingList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEventNote"
        ],
        "summary": "Get employee note event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserEmployeeEventNote"
        ],
        "summary": "Updates employee note event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "UpdateCompanyUserEmployeeEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Note event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserEmployeeEventNote"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "DeleteCompanyUserEmployeeEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/notes": {
      "post": {
        "tags": [
          "CompanyUserEmployeeEventNote"
        ],
        "summary": "Creates new employee note event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "NewCompanyUserEmployeeEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Note event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUserEmployeeEventsNotes"
        ],
        "summary": "Get employee notes events list",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventNoteList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEvents"
        ],
        "summary": "Get employee events list",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEvents",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEventsTasks"
        ],
        "summary": "Get employee tasks events list",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventTaskList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyUserEmployeeEventTask"
        ],
        "summary": "Creates new employee task event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "NewCompanyUserEmployeeEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Task event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}": {
      "get": {
        "tags": [
          "CompanyUserEmployeeEventTask"
        ],
        "summary": "Get employee task event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "CompanyUserEmployeeEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserEmployeeEventTask"
        ],
        "summary": "Updates employee's task event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "UpdateCompanyUserEmployeeEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Task event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserEmployeeEventTask"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: CompanyManager. ",
        "operationId": "DeleteCompanyUserEmployeeEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users-full/{id}": {
      "get": {
        "tags": [
          "CompanyUserFull"
        ],
        "summary": "Get company user, including financial fields, by id",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "UserFull",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/permissions": {
      "put": {
        "tags": [
          "CompanyUserPermissions"
        ],
        "summary": "Update Permissions for Company User",
        "description": "Requires access level: CompanyAdmin. ",
        "operationId": "UpdatePermissions",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserPermissionsEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserPermissionsEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserPermissionsEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserPermissionsEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserPermissionsEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile": {
      "get": {
        "tags": [
          "CompanyUserProfile"
        ],
        "summary": "Get profile by company user id",
        "operationId": "CompanyUserProfile",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileFullModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileFullModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyUserProfile"
        ],
        "summary": "Create Profile for user",
        "operationId": "NewCompanyUserProfile",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileCommitmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileCommitment"
        ],
        "summary": "Get profile commitment by id",
        "operationId": "CompanyUserProfileCommitment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileCommitment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileCommitment"
        ],
        "summary": "Update Profile Commitment",
        "operationId": "UpdateCompanyUserProfileCommitment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileCommitmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileCommitment"
        ],
        "summary": "Delete Commitment",
        "operationId": "DeleteCompanyUserProfileCommitment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments": {
      "post": {
        "tags": [
          "CompanyUserProfileCommitment"
        ],
        "summary": "Create Profile Commitment",
        "operationId": "NewCompanyUserProfileCommitment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileCommitmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileCommitmentAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileEducation"
        ],
        "summary": "Get profile education by id",
        "operationId": "CompanyUserProfileEducation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileEducation Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileEducation"
        ],
        "summary": "Update Profile Education",
        "operationId": "UpdateCompanyUserProfileEducation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileEducationAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileEducation"
        ],
        "summary": "Delete Profile Education",
        "operationId": "DeleteCompanyUserProfileEducation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/educations": {
      "post": {
        "tags": [
          "CompanyUserProfileEducation"
        ],
        "summary": "Create Profile Education",
        "operationId": "NewCompanyUserProfileEducation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileEducationAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEducationAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileEmployer"
        ],
        "summary": "Get profile employer by id",
        "operationId": "CompanyUserProfileEmployer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileEmployer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileEmployer"
        ],
        "summary": "Update Profile Employer",
        "operationId": "UpdateCompanyUserProfileEmployer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileEmployerAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileEmployer"
        ],
        "summary": "Delete Profile Employer",
        "operationId": "DeleteCompanyUserProfileEmployer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/employers": {
      "post": {
        "tags": [
          "CompanyUserProfileEmployer"
        ],
        "summary": "Create Employer profile item",
        "operationId": "NewCompanyUserProfileEmployer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileEmployerAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileEmployerAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileExtSkill"
        ],
        "summary": "Get profile external skill by id",
        "operationId": "CompanyUserProfileExtSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileExtSkill Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileExtSkill"
        ],
        "summary": "Update Extra Skill Profile Item",
        "operationId": "UpdateCompanyUserProfileExtSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileExtraSkillAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileExtSkill"
        ],
        "summary": "Delete Extra Skill Profile Item",
        "operationId": "DeleteCompanyUserProfileExtSkill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills": {
      "post": {
        "tags": [
          "CompanyUserProfileExtSkill"
        ],
        "summary": "Create Extra Skill Profile Item",
        "operationId": "NewCompanyUserProfileExtSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileExtSkillAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileExtSkillAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/import": {
      "post": {
        "tags": [
          "CompanyUserProfileImport"
        ],
        "summary": "Create new profile import for a user.",
        "description": "This will start an async operation.\r\n- If the operation is started successfully, the response will be `202 Accepted` and the `Location` header will contain the URL to get the status of the operation.\r\n- If the operation is not started successfully, the response will be `400 Bad Request`",
        "operationId": "CreateCompanyUserProfileImport",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "MapSkillExperienceYearsToLevel": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "MapSkillExperienceYearsToLevel": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/import/{operationId}": {
      "get": {
        "tags": [
          "CompanyUserProfileImport"
        ],
        "summary": "Get current status of the async profile import operation.",
        "description": "This will return the status of an async operation.\r\n- If the operation is still in progress, the response will be `202 Accepted`\r\n- If the operation is completed successfully, the response will be `200 OK` and the `status` property will be `Completed`\r\n- If the operation is completed with errors, the response will be `200 OK` and the `status` property will be `Failed`",
        "operationId": "GetCompanyUserProfileImport",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportProfileAsyncOperation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportProfileAsyncOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportProfileAsyncOperation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileLanguage"
        ],
        "summary": "Get profile language by id",
        "operationId": "CompanyUserProfileLanguage",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileLanguage Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileLanguage"
        ],
        "summary": "Update Language Profile Item",
        "operationId": "UpdateCompanyUserProfileLanguage",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileExtraSkillAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileLanguage"
        ],
        "summary": "Delete Language Profile Item",
        "operationId": "DeleteCompanyUserProfileLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/languages": {
      "post": {
        "tags": [
          "CompanyUserProfileLanguage"
        ],
        "summary": "Create Language Profile Item",
        "operationId": "NewCompanyUserProfileLanguage",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileLanguageAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileLanguageAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/languages": {
      "get": {
        "tags": [
          "CompanyUserProfileLanguages"
        ],
        "summary": "Get Available Profile Languages",
        "operationId": "ProfileLanguages",
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileLanguageModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileLanguageModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileLanguageModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileLanguageModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileLanguageModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation": {
      "get": {
        "tags": [
          "CompanyUserProfilePresentation"
        ],
        "summary": "Get profile presentation",
        "operationId": "CompanyUserProfilePresentation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfilePresentation"
        ],
        "summary": "Edit Profile Presentation",
        "operationId": "UpdateCompanyUserProfilePresentation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfilePresentationEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfilePresentationEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfilePresentationEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfilePresentationEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfilePresentationEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileReference"
        ],
        "summary": "Get profile reference by id",
        "operationId": "CompanyUserProfileReference",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileReference Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileReference"
        ],
        "summary": "Update Profile Reference Item",
        "operationId": "UpdateCompanyUserProfileReference",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileReferenceAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileReference"
        ],
        "summary": "Delete Profile Reference Item",
        "operationId": "DeleteCompanyUserProfileReference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/references": {
      "post": {
        "tags": [
          "CompanyUserProfileReference"
        ],
        "summary": "Create Profile Reference Item",
        "operationId": "NewCompanyUserProfileReference",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileReferenceAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileReferenceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profiles": {
      "get": {
        "tags": [
          "CompanyUserProfiles"
        ],
        "summary": "Get profiles list",
        "operationId": "CompanyUserProfiles",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileSkill"
        ],
        "summary": "Get profile skill by id",
        "operationId": "CompanyUserProfileSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileSkill Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileSkill"
        ],
        "summary": "Update Profile Skill",
        "operationId": "UpdateCompanyUserProfileSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileSkillEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileSkill"
        ],
        "summary": "Delete Profile Skill",
        "operationId": "DeleteCompanyUserProfileSkill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/skills": {
      "post": {
        "tags": [
          "CompanyUserProfileSkill"
        ],
        "summary": "Add Skill to profile",
        "operationId": "NewCompanyUserProfileSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileSkillAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileSkillAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileTraining"
        ],
        "summary": "Get profile training by id",
        "operationId": "CompanyUserProfileTraining",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileTraining Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileTraining"
        ],
        "summary": "Update Profile Training Item",
        "operationId": "UpdateCompanyUserProfileTraining",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileTrainingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileTraining"
        ],
        "summary": "Delete Profile Training Item",
        "operationId": "DeleteCompanyUserProfileTraining",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings": {
      "post": {
        "tags": [
          "CompanyUserProfileTraining"
        ],
        "summary": "Create Profile Training Item",
        "operationId": "NewCompanyUserProfileTraining",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileTrainingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileTrainingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}": {
      "get": {
        "tags": [
          "CompanyUserProfileWorkExperience"
        ],
        "summary": "Get profile work experience by id",
        "operationId": "CompanyUserProfileWorkExperience",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProfileWorkExperience Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserProfileWorkExperience"
        ],
        "summary": "Update Profile Work Experience",
        "operationId": "UpdateCompanyUserProfileWorkExperience",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserProfileWorkExperienceAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserProfileWorkExperience"
        ],
        "summary": "Delete Profile Work Experience Item",
        "operationId": "DeleteCompanyUserProfileWorkExperience",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "Company User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences": {
      "post": {
        "tags": [
          "CompanyUserProfileWorkExperience"
        ],
        "summary": "Create WorkExperience Profile Item",
        "operationId": "NewCompanyUserProfileWorkExperience",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserWorkExperienceAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}": {
      "get": {
        "tags": [
          "CompanyUserResume"
        ],
        "summary": "Get resume by id",
        "description": "Requires module: CompanyUserResume. ",
        "operationId": "GetResume",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Resume Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClassicCompanyUserResumeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassicCompanyUserResumeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassicCompanyUserResumeModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClassicCompanyUserResumeModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClassicCompanyUserResumeModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/resumes": {
      "get": {
        "tags": [
          "CompanyUserResumes"
        ],
        "summary": "Get company user resumes list",
        "description": "Requires module: CompanyUserResume. ",
        "operationId": "CompanyUserResumes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{id}/roles": {
      "get": {
        "tags": [
          "CompanyUserRoles"
        ],
        "summary": "Get Roles for CompanyUser by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "CompanyUserRoles",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/extended": {
      "get": {
        "tags": [
          "CompanyUsersExtended"
        ],
        "summary": "Get extended company users list",
        "operationId": "CompanyUsersExtended",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserExtendedModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/skills/{id}": {
      "get": {
        "tags": [
          "CompanyUserSkill"
        ],
        "summary": "Get skill by id",
        "operationId": "Skill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Skill Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/skills": {
      "get": {
        "tags": [
          "CompanyUserSkills"
        ],
        "summary": "Get skills list",
        "operationId": "Skills",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSkillModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSkillModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSkillModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSkillModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSkillModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{id}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractor"
        ],
        "summary": "Get company user by id",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanySubcontractor",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserSubcontractor"
        ],
        "summary": "Delete subcontractor from the system\r\nThis action is irreversible, use with caution",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "DeleteCompanySubcontractor",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Subcontractor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Subcontractor FirstName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Subcontractor LastName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors": {
      "post": {
        "tags": [
          "CompanyUserSubcontractor"
        ],
        "summary": "Add subcontractor",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "AddCompanyUserSubcontractor",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyUserSubcontractorAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUserSubcontractors"
        ],
        "summary": "Get subcontractors list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractors",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserSubcontractorBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/{id}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEvent"
        ],
        "summary": "Get subcontractors events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEvent",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventMeeting"
        ],
        "summary": "Get subcontractor meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Meeting event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserSubcontractorEventMeeting"
        ],
        "summary": "Updates subcontractor meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "UpdateCompanyUserSubcontractorEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserSubcontractorEventMeeting"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "DeleteCompanyUserSubcontractorEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings": {
      "post": {
        "tags": [
          "CompanyUserSubcontractorEventMeeting"
        ],
        "summary": "Creates new subcontractor meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "NewCompanyUserSubcontractorEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventsMeetings"
        ],
        "summary": "Get subcontractors meetings events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventMeetingList",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventNote"
        ],
        "summary": "Get subcontractors notes events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserSubcontractorEventNote"
        ],
        "summary": "Updates subcontractor note event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "UpdateCompanyUserSubcontractorEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Note event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserSubcontractorEventNote"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "DeleteCompanyUserSubcontractorEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes": {
      "post": {
        "tags": [
          "CompanyUserSubcontractorEventNote"
        ],
        "summary": "Creates new subcontractors note event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "NewCompanyUserSubcontractorEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Note event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      },
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventsNotes"
        ],
        "summary": "Get subcontractors notes events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventsNotes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/events": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEvents"
        ],
        "summary": "Get subcontractors events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEvents",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventsTasks"
        ],
        "summary": "Get subcontractors tasks events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventsTasks",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyUserSubcontractorEventTask"
        ],
        "summary": "Creates new subcontractor task event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "NewCompanyUserSubcontractorEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Task event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorEventTask"
        ],
        "summary": "Get subcontractors tasks events list",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "CompanyUserSubcontractorEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyUserSubcontractorEventTask"
        ],
        "summary": "Updates subcontractor task event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "UpdateCompanyUserSubcontractorEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Task event details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompanyUserEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyUserSubcontractorEventTask"
        ],
        "summary": "Deletes meeting event",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "DeleteCompanyUserSubcontractorEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorFileAttachment"
        ],
        "summary": "Get subcontractor File Attachment by Id",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "GetSubcontractorAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{id}/attachments": {
      "post": {
        "tags": [
          "CompanyUserSubcontractorFileAttachments"
        ],
        "summary": "Upload subcontractor file attachment",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "SubcontractorAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Candidate Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Files",
                  "Title"
                ],
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorRoles"
        ],
        "summary": "Get assigned and prospect roles for subcontractor",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "GetSubcontractorRoles",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorId",
            "in": "path",
            "description": "Subcontractor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRolesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRolesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRolesModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRolesModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRolesModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/subcontractors/{subcontractorId}/roles/{projectAssignmentId}": {
      "get": {
        "tags": [
          "CompanyUserSubcontractorRoles"
        ],
        "summary": "Get a specific role, assigned and or prospected, for subcontractor by role id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "GetSubcontractorRole",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subcontractorId",
            "in": "path",
            "description": "Subcontractor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectAssignmentId",
            "in": "path",
            "description": "Project assignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/tags": {
      "post": {
        "tags": [
          "CompanyUserTags"
        ],
        "summary": "Edit Tags for User",
        "description": "Note:\r\n\r\n    Posted tags will replace any existing tags for the user.\r\n    A new tag will be created if the id for a tag is not provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/users/19870/tags\r\n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-new\",\r\n        },\r\n    ]",
        "operationId": "EditCompanyUserTags",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyTagModel[]",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/teams": {
      "get": {
        "tags": [
          "CompanyUserTeams"
        ],
        "summary": "Get teams for team member",
        "operationId": "UserTeams",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/webhooks": {
      "post": {
        "tags": [
          "CompanyWebhook"
        ],
        "summary": "Add Webhook",
        "description": "Sample request:\r\n            \r\n    POST /v0.1/companies/1/webhooks\r\n    {\r\n        \"isActive\": false,\r\n        \"endpointUrl\": \"https://webhook.site/7a619ffb-e67c-41fc-8113-083d6013f76c\",\r\n        \"configurations\": [\r\n            {\r\n                \"entityType\": 1,\r\n                \"actionType\": 1\r\n            }\r\n        ],\r\n        \"credentials\": [\r\n            {\r\n                \"isBasicAuthentication\": true,\r\n                \"headerName\": \"user\",\r\n                \"headerValue\": \"somevalue\"\r\n            }\r\n        ]\r\n    }",
        "operationId": "NewWebhook",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "WebhookAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CompanyWebhooks"
        ],
        "summary": "Get company webhooks",
        "description": "Sample request:\r\n\r\n    GET /v0.1/companies/1/webhooks",
        "operationId": "CompanyWebhooks",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/webhooks/manifest": {
      "post": {
        "tags": [
          "CompanyWebhook"
        ],
        "description": "Requires access level: CompanyAdmin. Requires module: Webhooks. ",
        "operationId": "InstallWebhookManifest",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookAddModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookAddModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookAddModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookAddModel"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/webhooks/{id}": {
      "delete": {
        "tags": [
          "CompanyWebhook"
        ],
        "summary": "Remove webhook",
        "description": "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/webhooks/42a3a220-766c-eb11-8e13-000c29b4e92f",
        "operationId": "RemoveWebhook",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Webhook Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}/dynamic": {
      "get": {
        "tags": [
          "DynamicCompanyUserResume"
        ],
        "summary": "Get resume by id",
        "description": "Requires module: CompanyUserResume. ",
        "operationId": "DynamicResume",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyUserId",
            "in": "path",
            "description": "CompanyUser Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Resume Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicCompanyUserResumeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicCompanyUserResumeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicCompanyUserResumeModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicCompanyUserResumeModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicCompanyUserResumeModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/keywords/search/{term}": {
      "get": {
        "tags": [
          "KeywordSearch"
        ],
        "summary": "Search keywords by term",
        "operationId": "SearchKeyword",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "path",
            "description": "Search term",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/mentions/to-natural-text": {
      "post": {
        "tags": [
          "Mentions"
        ],
        "summary": "Translates any mention-ids in a text to their human readable form. \r\nTranslations are access restricted, if you don't have enough access\r\nto get the name of an id, it won't be translated.",
        "operationId": "TranslateMentions",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The model with one property, value, which contains the text containing the mentions you're looking to translate.  Example of a text with a mention inside: `\"Hello @(1|123456) can you please consider this role?\"`",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MentionTextModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MentionTextModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MentionTextModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MentionTextModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/partners": {
      "post": {
        "tags": [
          "Partners"
        ],
        "summary": "Get Partners by filter",
        "description": "Requires access level: PartnerManager. Requires module: Partners. ",
        "operationId": "SearchPartners",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Filter options",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PartnersFilterModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PartnersFilterModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PartnersFilterModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PartnersFilterModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersOverviewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersOverviewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersOverviewModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersOverviewModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersOverviewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "Project",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update project",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateCompanyProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete project",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteCompanyProject",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add project",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "NewCompanyProject",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get projects list  - please note this endpoint currently only returns projects with the status WON. Please use the SearchProjects endpoint for more options of filtering desired Projects",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "Projects",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/projectassignments/{id}": {
      "get": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Get projectassignment by id (Obsolete)",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "OldProjectAssignment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProjectAssignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{id}": {
      "get": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Get Role by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectAssignment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProjectAssignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Edit Role",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectAssignment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProjectAssignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Delete Role",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectAssignment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ProjectAssignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles": {
      "post": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Add Role",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "NewProjectAssignment",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{projectAssignmentId}/announce": {
      "post": {
        "tags": [
          "ProjectAssignment"
        ],
        "summary": "Announce a role (ProjectAssignment) to the Partner Network and optionally also to Cinode Market(https://cinode.market/requests). \r\nIf you are testing, set the \"PublishForReal\" to \"false\", otherwise you will publish this announcement for real. When you're testing (\"PublishForReal = false) RequestId will be 0 in the response.",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "AnnounceProjectAssignment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectAssignmentId",
            "in": "path",
            "description": "ProjectAssignment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentAnnounceModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAnnounceModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAnnounceModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAnnounceModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentAnnounceModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentAnnouncementBaseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentAnnouncementBaseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentAnnouncementBaseModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentAnnouncementBaseModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentAnnouncementBaseModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "201": {
            "description": "All went well"
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee": {
      "post": {
        "tags": [
          "ProjectAssignmentMember"
        ],
        "summary": "Add Role Member Employee",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "AddProjectAssignmentMemberEmployee",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberEmployeeAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor": {
      "post": {
        "tags": [
          "ProjectAssignmentMember"
        ],
        "summary": "Add Role Member Subcontractor",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "AddProjectAssignmentMemberSubcontractor",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberSubcontractorAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee/{id}": {
      "put": {
        "tags": [
          "ProjectAssignmentMember"
        ],
        "summary": "Edit Role Member Employee",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectAssignmentMemberEmployee",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Role Member Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberSubcontractorAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberEmployeeEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor/{id}": {
      "put": {
        "tags": [
          "ProjectAssignmentMember"
        ],
        "summary": "Edit Role Member Subcontractor",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectAssignmentMemberSubcontractor",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Role Member Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberSubcontractorAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/{id}": {
      "delete": {
        "tags": [
          "ProjectAssignmentMember"
        ],
        "summary": "Delete Role Member",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectAssignmentMemberEmployee",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Role Member Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/roles": {
      "post": {
        "tags": [
          "ProjectAssignments"
        ],
        "summary": "Get Roles by Filter\r\nRate limited, restricted to once per minute, max 1000 requests per day",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "SearchRoles",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Filter options",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentFilterModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentFilterModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentFilterModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentFilterModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentWithStatusModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentWithStatusModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentWithStatusModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentWithStatusModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentWithStatusModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills": {
      "post": {
        "tags": [
          "ProjectAssignmentSkills"
        ],
        "summary": "Add Role Skill",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "AddProjectAssignmentSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberSkillAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillAddModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillAddModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillAddModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillAddModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}": {
      "put": {
        "tags": [
          "ProjectAssignmentSkills"
        ],
        "summary": "Update Role Skill",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectAssignmentSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Keyword Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectAssignmentMemberSkillAddModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectAssignmentSkillEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectAssignmentSkills"
        ],
        "summary": "Delete Role Skill",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectAssignmentSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Keyword Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAssignmentSkillModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/{id}": {
      "get": {
        "tags": [
          "ProjectEvent"
        ],
        "summary": "Get project event by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEvent",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events": {
      "get": {
        "tags": [
          "ProjectEvents"
        ],
        "summary": "Get project events list",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEvents",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}": {
      "get": {
        "tags": [
          "ProjectEventsMeeting"
        ],
        "summary": "Get project event meeting by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectEventsMeeting"
        ],
        "summary": "Update project event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventMeetingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectEventsMeeting"
        ],
        "summary": "Delete project event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/meetings": {
      "post": {
        "tags": [
          "ProjectEventsMeeting"
        ],
        "summary": "Add project event meeting",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "NewProjectMeeting",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventMeetingAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventMeetingAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventMeetingModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProjectEventsMeetings"
        ],
        "summary": "Get project events meetings list",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventMeetings",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}": {
      "get": {
        "tags": [
          "ProjectEventsNote"
        ],
        "summary": "Get project event note by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectEventsNote"
        ],
        "summary": "Update project event note",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventNoteAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectEventsNote"
        ],
        "summary": "Delete project event note",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/notes": {
      "post": {
        "tags": [
          "ProjectEventsNote"
        ],
        "summary": "Add project event note",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "NewProjectNote",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventNoteAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventNoteAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventNoteModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProjectEventsNotes"
        ],
        "summary": "Get project event notes list",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventNotes",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}": {
      "get": {
        "tags": [
          "ProjectEventsTask"
        ],
        "summary": "Get project event task by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectEventsTask"
        ],
        "summary": "Update project event task",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "UpdateProjectTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventTaskAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectEventsTask"
        ],
        "summary": "Delete project event task",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "DeleteProjectTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well"
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/events/tasks": {
      "post": {
        "tags": [
          "ProjectEventsTask"
        ],
        "summary": "Add project event task",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "NewProjectTask",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "ProjectEventTaskAddEditModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectEventTaskAddEditModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEventTaskModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProjectEventsTasks"
        ],
        "summary": "Get project event tasks list",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectEventTasks",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEventBaseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/pipelines": {
      "get": {
        "tags": [
          "ProjectPipelines"
        ],
        "summary": "Get project pipelines",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectPipelines",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPipelineModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPipelineModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPipelineModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPipelineModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPipelineModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/references/{id}": {
      "get": {
        "tags": [
          "ProjectReference"
        ],
        "summary": "Get project reference by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectReference",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Project reference Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReferenceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReferenceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReferenceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReferenceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReferenceModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/references": {
      "get": {
        "tags": [
          "ProjectReferences"
        ],
        "summary": "Get project reference by id",
        "description": "Requires access level: CompanyManager. Requires module: Assignments. ",
        "operationId": "ProjectReferences",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/{projectId}/tags": {
      "post": {
        "tags": [
          "ProjectTags"
        ],
        "summary": "Edit Tags for Project",
        "description": "Note:\r\n\r\n    Posted tags will replace any existing tags for the project.\r\n    A new tag will be created, if the id for a tag not provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/projects/19870/tags\r\n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\",\r\n            \"id\": 1\r\n        },\r\n    ]",
        "operationId": "EditProjectTags",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "CompanyTagModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyTagModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/recruitment-sources": {
      "get": {
        "tags": [
          "RecruitmentSources"
        ],
        "summary": "Get recruitment sources",
        "description": "Requires access level: CompanyRecruiter. Requires module: Recruitment. ",
        "operationId": "RecruitmentSources",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentSourceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentSourceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentSourceModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentSourceModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentSourceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/candidates/search": {
      "post": {
        "tags": [
          "SearchCompanyCandidate"
        ],
        "summary": "Get company candidates list from search criteria",
        "description": "Sample request:\r\n\r\n    POST /v0.1/companies/1/candidates/search\r\n    {\r\n        \"term\": \"candidate property value\",\r\n        \"rating\": 3         \r\n        \"status\": 0,\r\n        \"sources\": [],\r\n        \"noRecruiter\": false,\r\n        \"recruiters\": [],\r\n        \"states\": [0],\r\n        \"pipeline\": null,\r\n        \"pageAndSortBy\": {\r\n            \"page\": 1,\r\n            \"itemsPerPage\": 15\r\n        },\r\n        \"pipelines\": []\r\n    }",
        "operationId": "SearchCompanyCandidate",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchCompanyCandidateQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCandidateQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCandidateQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCandidateQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCandidateQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCandidateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCandidateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCandidateResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCandidateResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCandidateResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/contacts/search": {
      "post": {
        "tags": [
          "SearchCompanyCustomerContact"
        ],
        "summary": "Get company customer contacts list from search criteria",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "SearchCompanyCustomerContact",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchCompanyCustomerQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerContactQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerContactQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerContactQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerContactQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerContactResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerContactResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerContactResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerContactResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerContactResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/customers/search": {
      "post": {
        "tags": [
          "SearchCompanyCustomers"
        ],
        "summary": "Get company customers list from search criteria",
        "description": "Requires access level: CompanyManager. Requires module: Customers. ",
        "operationId": "SearchCompanyCustomer",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchCompanyCustomerQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyCustomerQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyCustomerResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/users/search": {
      "post": {
        "tags": [
          "SearchCompanyUser"
        ],
        "summary": "Get company users list from search criteria",
        "operationId": "SearchCompanyUser",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchCompanyUserQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyUserQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyUserQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyUserQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchCompanyUserQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyUserResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyUserResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyUserResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyUserResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCompanyUserResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/projects/search": {
      "post": {
        "tags": [
          "SearchProject"
        ],
        "summary": "Get projects list from search criteria",
        "description": "Sample request\r\n{\r\n    \"pipelines\": [4],\r\n    \"projectStates\": [0],\r\n    \"PageAndSortBy\": {\r\n    \"SortBy\": \"0\",\r\n    \"SortOrder\": \"1\",\r\n    \"Page\": \"1\",\r\n    \"ItemsPerPage\": \"15\",\r\n    }\r\n}\r\nSortBy Parameter can be:\r\n    CreatedDateTime=0 // Default\r\n    Title=1\r\n    Identifier=2\r\n    CustomerIdentifier=3\r\n    SeoId=4\r\n    UpdatedDateTime=6\r\n    LastTouchDateTime=7",
        "operationId": "SearchProject",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchCompanyCustomerQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchProjectQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchProjectQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchProjectQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchProjectQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProjectsResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProjectsResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProjectsResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProjectsResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProjectsResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/skills/search": {
      "post": {
        "tags": [
          "SkillSearch"
        ],
        "summary": "Search users by skill keyword id",
        "operationId": "SearchSkill",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SearchSkillQueryModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchSkillQueryModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchSkillQueryModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchSkillQueryModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchSkillQueryModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/v0.1/companies/{companyId}/skills/search/term": {
      "post": {
        "tags": [
          "SkillSearchTerm"
        ],
        "summary": "Search users with skills by term (string value)",
        "operationId": "SearchSkillTerm",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "SkillSearchQueryTermModel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SkillSearchQueryTermModel"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SkillSearchQueryTermModel"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SkillSearchQueryTermModel"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SkillSearchQueryTermModel"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All went well",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSkillResultModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AbscencePeriodDayModel": {
        "type": "object",
        "properties": {
          "calendarDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarDayModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbsenceAddEditModel": {
        "required": [
          "absenceTypeId",
          "extentPercentage",
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extentPercentage": {
            "type": "number",
            "format": "float"
          },
          "absenceTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AbsencePeriodDtoModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "absenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AbsenceTypeDto"
              }
            ],
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "extentPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserSeoId": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companySeoId": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbsencePeriodModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "absenceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "absenceTypeName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbscencePeriodDayModel"
            },
            "nullable": true
          },
          "extentPercentage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AbsenceTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbsenceTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessLevel": {
        "enum": [
          0,
          50,
          100,
          110,
          115,
          150,
          180,
          200,
          240,
          250,
          270,
          300,
          400,
          500
        ],
        "type": "integer",
        "description": "\n\nNoAccess = 0\n\nAnonymous = 50\n\nRead = 100\n\nSubcontractor = 110\n\nCandidate = 115\n\nRestrictedCompanyUser = 150\n\nCompanyApiUser = 180\n\nCompanyUser = 200\n\nPartnerManager = 240\n\nCompanyRecruiter = 250\n\nTeamManager = 270\n\nCompanyManager = 300\n\nCompanyAdmin = 400\n\nOwner = 500",
        "format": "int32",
        "x-enumNames": [
          "NoAccess",
          "Anonymous",
          "Read",
          "Subcontractor",
          "Candidate",
          "RestrictedCompanyUser",
          "CompanyApiUser",
          "CompanyUser",
          "PartnerManager",
          "CompanyRecruiter",
          "TeamManager",
          "CompanyManager",
          "CompanyAdmin",
          "Owner"
        ],
        "x-enum-varnames": [
          "NoAccess",
          "Anonymous",
          "Read",
          "Subcontractor",
          "Candidate",
          "RestrictedCompanyUser",
          "CompanyApiUser",
          "CompanyUser",
          "PartnerManager",
          "CompanyRecruiter",
          "TeamManager",
          "CompanyManager",
          "CompanyAdmin",
          "Owner"
        ],
        "x-ms-enum": {
          "name": "AccessLevel",
          "values": [
            {
              "name": "NoAccess",
              "value": 0
            },
            {
              "name": "Anonymous",
              "value": 50
            },
            {
              "name": "Read",
              "value": 100
            },
            {
              "name": "Subcontractor",
              "value": 110
            },
            {
              "name": "Candidate",
              "value": 115
            },
            {
              "name": "RestrictedCompanyUser",
              "value": 150
            },
            {
              "name": "CompanyApiUser",
              "value": 180
            },
            {
              "name": "CompanyUser",
              "value": 200
            },
            {
              "name": "PartnerManager",
              "value": 240
            },
            {
              "name": "CompanyRecruiter",
              "value": 250
            },
            {
              "name": "TeamManager",
              "value": 270
            },
            {
              "name": "CompanyManager",
              "value": 300
            },
            {
              "name": "CompanyAdmin",
              "value": 400
            },
            {
              "name": "Owner",
              "value": 500
            }
          ]
        }
      },
      "ActionType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "\n\nAll = 1\n\nCreated = 2\n\nUpdated = 3\n\nBorttagen = 4",
        "format": "int32",
        "x-enumNames": [
          "All",
          "Created",
          "Updated",
          "Deleted"
        ],
        "x-enum-varnames": [
          "All",
          "Created",
          "Updated",
          "Deleted"
        ],
        "x-ms-enum": {
          "name": "ActionType",
          "values": [
            {
              "name": "All",
              "value": 1
            },
            {
              "name": "Created",
              "value": 2
            },
            {
              "name": "Updated",
              "value": 3
            },
            {
              "name": "Deleted",
              "value": 4
            }
          ]
        }
      },
      "AddCompanySubcontractorGroupMemberModel": {
        "required": [
          "companyUserSubcontractorId"
        ],
        "type": "object",
        "properties": {
          "companyUserSubcontractorId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddressInfoBlockViewModel": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nÖvrig = 0\n\nBesöksadress = 1\n\nFaktureringsadress = 2\n\nPlaceringsort = 3",
        "format": "int32",
        "x-enumNames": [
          "Undefined",
          "StreetAddress",
          "InvoiceAddress",
          "LocationAddress"
        ],
        "x-enum-varnames": [
          "Undefined",
          "StreetAddress",
          "InvoiceAddress",
          "LocationAddress"
        ],
        "x-ms-enum": {
          "name": "AddressType",
          "values": [
            {
              "name": "Undefined",
              "value": 0
            },
            {
              "name": "StreetAddress",
              "value": 1
            },
            {
              "name": "InvoiceAddress",
              "value": 2
            },
            {
              "name": "LocationAddress",
              "value": 3
            }
          ]
        }
      },
      "AttachmentType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nFile = 0\n\nUri = 1",
        "format": "int32",
        "x-enumNames": [
          "File",
          "Uri"
        ],
        "x-enum-varnames": [
          "File",
          "Uri"
        ],
        "x-ms-enum": {
          "name": "AttachmentType",
          "values": [
            {
              "name": "File",
              "value": 0
            },
            {
              "name": "Uri",
              "value": 1
            }
          ]
        }
      },
      "AvailabilityFilterModel": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AvailabilityModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "availability": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CalendarDayModel": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "weekday": {
            "type": "integer",
            "format": "int32"
          },
          "week": {
            "type": "integer",
            "format": "int32"
          },
          "quarter": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClassicCompanyUserResumeModel": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32"
          },
          "parentCompanyUserResumeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resume": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreatedModel"
              }
            ],
            "nullable": true
          },
          "updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatedModel"
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateLanguageModel"
              }
            ],
            "nullable": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateBaseModel"
              }
            ],
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommitmentBlockItemModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CommitmentBlockModel": {
        "type": "object",
        "properties": {
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "hideUrl": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommitmentBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyAddressModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ],
            "description": "Undefined = 0,\r\nStreetAddress = 1 (VisitingAddress)\r\nInvoiceAddress = 2,\r\nLocationAddress = 3 (Used to connect an Employee to an office registered in Cinode)"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateAddCandidateUserModel": {
        "required": [
          "confirmPassword",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "createProfile": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateAddInviteModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateAddModel": {
        "required": [
          "firstName",
          "lastName",
          "state"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ]
          },
          "birthYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "linkedInUrl": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateState"
              }
            ]
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodOfNoticeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salaryRequirement": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMobile": {
            "type": "boolean"
          },
          "recruitmentManagerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyAddressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recruitmentSourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentEmployer": {
            "type": "string",
            "nullable": true
          },
          "campaignCode": {
            "type": "string",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offeredSalary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notifyRecruitmentManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateAttachmentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastTouchDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateEventBaseModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateEventMeetingModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateEventModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateEventNoteModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateEventTaskModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "description": "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2",
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateExtendedModel": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodOfNoticeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salaryRequirement": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offeredSalary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateState"
              }
            ],
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMobile": {
            "type": "boolean"
          },
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recruitmentManagerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "campaignCode": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ],
            "description": "Other = 0,\r\nMale = 1,\r\nFemale = 2"
          },
          "birthYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "linkedInUrl": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCandidateAttachmentModel"
            },
            "nullable": true
          },
          "recruitmentManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "currentEmployer": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastTouchDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateFileAttachmentListModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCandidateFileAttachmentModel"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateFileAttachmentModel": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidatePipelineModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCandidatePipelineStageModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidatePipelineStageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "probability": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateQuerySort": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "\n\nCreatedDateTime = 0\n\nFirstName = 1\n\nLastName = 2\n\nStatus = 3\n\nEmail = 4\n\nUpdatedDateTime = 5",
        "format": "int32",
        "x-enumNames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Status",
          "Email",
          "UpdatedDateTime"
        ],
        "x-enum-varnames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Status",
          "Email",
          "UpdatedDateTime"
        ],
        "x-ms-enum": {
          "name": "CompanyCandidateQuerySort",
          "values": [
            {
              "name": "CreatedDateTime",
              "value": 0
            },
            {
              "name": "FirstName",
              "value": 1
            },
            {
              "name": "LastName",
              "value": 2
            },
            {
              "name": "Status",
              "value": 3
            },
            {
              "name": "Email",
              "value": 4
            },
            {
              "name": "UpdatedDateTime",
              "value": 5
            }
          ]
        }
      },
      "CompanyCandidateQuerySortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateQuerySort"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateSkillAddModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateSkillModel": {
        "type": "object",
        "properties": {
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordId": {
            "type": "integer",
            "format": "int32"
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordSynonym": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordSynonymModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateState": {
        "enum": [
          0,
          10,
          20,
          30,
          40
        ],
        "type": "integer",
        "description": "\n\nÖppen = 0\n\nVunnen = 10\n\nPausad = 20\n\nAvböjd av kandidat = 30\n\nAvböjd av oss = 40",
        "format": "int32",
        "x-enumNames": [
          "Open",
          "Won",
          "Paused",
          "Lost",
          "Rejected"
        ],
        "x-enum-varnames": [
          "Open",
          "Won",
          "Paused",
          "Lost",
          "Rejected"
        ],
        "x-ms-enum": {
          "name": "CompanyCandidateState",
          "values": [
            {
              "name": "Open",
              "value": 0
            },
            {
              "name": "Won",
              "value": 10
            },
            {
              "name": "Paused",
              "value": 20
            },
            {
              "name": "Lost",
              "value": 30
            },
            {
              "name": "Rejected",
              "value": 40
            }
          ]
        }
      },
      "CompanyCandidateUriAttachmentAddModel": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCandidateUriAttachmentModel": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyCandidateId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCapabilitiesModel": {
        "type": "object",
        "properties": {
          "enabledModules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyEnabledModuleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerAddModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "intermediator": {
            "type": "boolean"
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanySize"
              }
            ],
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "turnOver": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "turnOverCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerAddressAddEditModel": {
        "type": "object",
        "properties": {
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerAddressModel": {
        "type": "object",
        "properties": {
          "companyCustomerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ],
            "description": "Undefined = 0,\r\nStreetAddress = 1 (VisitingAddress)\r\nInvoiceAddress = 2,\r\nLocationAddress = 3 (Used to connect an Employee to an office registered in Cinode)"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerAttachmentModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerContactAddEditModel": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerContactBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerContactModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerContactQuerySort": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "\n\nCreatedDateTime = 0\n\nFirstName = 1\n\nLastName = 2\n\nEmail = 3\n\nUpdatedDateTime = 4\n\nCustomerId = 5",
        "format": "int32",
        "x-enumNames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Email",
          "UpdatedDateTime",
          "CustomerId"
        ],
        "x-enum-varnames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Email",
          "UpdatedDateTime",
          "CustomerId"
        ],
        "x-ms-enum": {
          "name": "CompanyCustomerContactQuerySort",
          "values": [
            {
              "name": "CreatedDateTime",
              "value": 0
            },
            {
              "name": "FirstName",
              "value": 1
            },
            {
              "name": "LastName",
              "value": 2
            },
            {
              "name": "Email",
              "value": 3
            },
            {
              "name": "UpdatedDateTime",
              "value": 4
            },
            {
              "name": "CustomerId",
              "value": 5
            }
          ]
        }
      },
      "CompanyCustomerContactQuerySortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerContactQuerySort"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerDeleteModel": {
        "type": "object",
        "properties": {
          "customerVerificationName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerEditModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "intermediator": {
            "type": "boolean"
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanySize"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerExtendedModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "managers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerManagerModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerManagerModel": {
        "type": "object",
        "properties": {
          "companyCustomerManagerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerManagersAddEditModel": {
        "type": "object",
        "properties": {
          "companyUserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerModel": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerContactBaseModel"
            },
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerAddressModel"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectBaseModel"
            },
            "nullable": true
          },
          "intermediator": {
            "type": "boolean",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerAttachmentModel"
            },
            "nullable": true
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanySize"
              }
            ],
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryModel"
              }
            ],
            "nullable": true
          },
          "turnOver": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "turnOverCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "turnOverCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "managers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerManagerModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyCustomerQuerySort": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "type": "integer",
        "description": "\n\nCreatedDateTime = 0\n\nName = 1\n\nDescription = 2\n\nIdentification = 3\n\nSeoId = 4\n\nStatus = 5\n\nPhone = 6\n\nEmail = 7\n\nFax = 8\n\nHomepage = 9\n\nCorporateIdentityNumber = 10\n\nVATNumber = 11\n\nIntermediator = 12\n\nUpdatedDateTime = 13\n\nLastTouchDateTime = 14",
        "format": "int32",
        "x-enumNames": [
          "CreatedDateTime",
          "Name",
          "Description",
          "Identification",
          "SeoId",
          "Status",
          "Phone",
          "Email",
          "Fax",
          "Homepage",
          "CorporateIdentityNumber",
          "VATNumber",
          "Intermediator",
          "UpdatedDateTime",
          "LastTouchDateTime"
        ],
        "x-enum-varnames": [
          "CreatedDateTime",
          "Name",
          "Description",
          "Identification",
          "SeoId",
          "Status",
          "Phone",
          "Email",
          "Fax",
          "Homepage",
          "CorporateIdentityNumber",
          "VATNumber",
          "Intermediator",
          "UpdatedDateTime",
          "LastTouchDateTime"
        ],
        "x-ms-enum": {
          "name": "CompanyCustomerQuerySort",
          "values": [
            {
              "name": "CreatedDateTime",
              "value": 0
            },
            {
              "name": "Name",
              "value": 1
            },
            {
              "name": "Description",
              "value": 2
            },
            {
              "name": "Identification",
              "value": 3
            },
            {
              "name": "SeoId",
              "value": 4
            },
            {
              "name": "Status",
              "value": 5
            },
            {
              "name": "Phone",
              "value": 6
            },
            {
              "name": "Email",
              "value": 7
            },
            {
              "name": "Fax",
              "value": 8
            },
            {
              "name": "Homepage",
              "value": 9
            },
            {
              "name": "CorporateIdentityNumber",
              "value": 10
            },
            {
              "name": "VATNumber",
              "value": 11
            },
            {
              "name": "Intermediator",
              "value": 12
            },
            {
              "name": "UpdatedDateTime",
              "value": 13
            },
            {
              "name": "LastTouchDateTime",
              "value": 14
            }
          ]
        }
      },
      "CompanyCustomerQuerySortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerQuerySort"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "CompanyEnabledModuleModel": {
        "type": "object",
        "properties": {
          "moduleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyImageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageFileName": {
            "type": "string",
            "format": "uuid"
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "assignedToCompanyUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "uploadedByCompanyUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyModel": {
        "type": "object",
        "properties": {
          "corporateIdentityNumber": {
            "type": "string",
            "description": "External identifier",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "registrationYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isTaxRegistered": {
            "type": "boolean",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyAddressModel"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyProfileFilterModel": {
        "type": "object",
        "properties": {
          "createdOffsetDays": {
            "type": "integer",
            "description": "If set to true, the results will include only Profiles created within the last X days",
            "format": "int32",
            "nullable": true
          },
          "updatedOffsetDays": {
            "type": "integer",
            "description": "If set to true, the results will include only Profiles updated within the last X days",
            "format": "int32",
            "nullable": true
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyProfileSortPageAndSortByModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyProfileSort": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "0 - Id (Default),\r\n1 - CompanyUserId,\r\n2 - CreatedDateTime,\r\n3 - UpdatedDateTime",
        "format": "int32",
        "x-enumNames": [
          "Id",
          "CompanyUserId",
          "CreatedWhen",
          "UpdatedWhen"
        ],
        "x-enum-varnames": [
          "Id",
          "CompanyUserId",
          "CreatedWhen",
          "UpdatedWhen"
        ],
        "x-ms-enum": {
          "name": "CompanyProfileSort",
          "values": [
            {
              "name": "Id",
              "value": 0
            },
            {
              "name": "CompanyUserId",
              "value": 1
            },
            {
              "name": "CreatedWhen",
              "value": 2
            },
            {
              "name": "UpdatedWhen",
              "value": 3
            }
          ]
        }
      },
      "CompanyProfileSortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyProfileSort"
              }
            ],
            "description": "0 - Id (Default),\r\n1 - CompanyUserId,\r\n2 - CreatedDateTime,\r\n3 - UpdatedDateTime"
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "CompanyProfilesModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyRecruitmentManagerModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResumeTemplateBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResumeTemplateLanguageModel": {
        "type": "object",
        "properties": {
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanySize": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "\n\nEgenföretagare = 0\n\n2-10 = 1\n\n11-50 = 2\n\n51-200 = 3\n\n201-500 = 4\n\n501-1 000 = 5\n\n1 001-5 000 = 6\n\n5 001-10 000 = 7\n\n10 001+ = 8",
        "format": "int32",
        "x-enumNames": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I"
        ],
        "x-enum-varnames": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I"
        ],
        "x-ms-enum": {
          "name": "CompanySize",
          "values": [
            {
              "name": "A",
              "value": 0
            },
            {
              "name": "B",
              "value": 1
            },
            {
              "name": "C",
              "value": 2
            },
            {
              "name": "D",
              "value": 3
            },
            {
              "name": "E",
              "value": 4
            },
            {
              "name": "F",
              "value": 5
            },
            {
              "name": "G",
              "value": 6
            },
            {
              "name": "H",
              "value": 7
            },
            {
              "name": "I",
              "value": 8
            }
          ]
        }
      },
      "CompanySubcontractorGroupBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanySubcontractorGroupModel": {
        "type": "object",
        "properties": {
          "companyUserManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserBaseModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyTagBaseModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyTagModel": {
        "type": "object",
        "properties": {
          "tagType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyTagTypeModel"
              }
            ],
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyTagTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserAddModel": {
        "required": [
          "confirmPassword",
          "email",
          "firstName",
          "gender",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ]
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addProfile": {
            "type": "boolean"
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mustChangePassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyUserBaseModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserCandidateModel": {
        "type": "object",
        "properties": {
          "resumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
            },
            "nullable": true
          },
          "defaultCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserCandidateStatus"
              }
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserCandidateStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nFrånkopplad = 0\n\nAktiv = 1",
        "format": "int32",
        "x-enumNames": [
          "Disconnected",
          "Active"
        ],
        "x-enum-varnames": [
          "Disconnected",
          "Active"
        ],
        "x-ms-enum": {
          "name": "CompanyUserCandidateStatus",
          "values": [
            {
              "name": "Disconnected",
              "value": 0
            },
            {
              "name": "Active",
              "value": 1
            }
          ]
        }
      },
      "CompanyUserEditModel": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ]
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "invoicingGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobility": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "taxTable": {
            "type": "string",
            "nullable": true
          },
          "baseSalary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hourlyTargetRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "selfCost": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ]
          },
          "companyCalendarId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventBaseModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventMeetingAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for StartDateTime and EndDateTime properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventMeetingModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventNoteAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for NoteDate property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventNoteModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventTaskAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for DueDateTime property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserEventTaskModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "description": "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2",
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserExtendedModel": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ],
            "description": "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "companyUserEmail": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserFullModel": {
        "type": "object",
        "properties": {
          "invoicingGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxTable": {
            "type": "string",
            "nullable": true
          },
          "baseSalary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hourlyTargetRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "selfCost": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobility": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "resumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleModel"
            },
            "nullable": true
          },
          "teamManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamManagerModel"
            },
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamMemberModel"
            },
            "nullable": true
          },
          "customerManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerManagerModel"
            },
            "nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbsencePeriodModel"
            },
            "nullable": true
          },
          "defaultCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagModel"
            },
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ],
            "description": "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "companyUserEmail": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserImageModel": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "largeImageUrl": {
            "type": "string",
            "nullable": true
          },
          "uploadedWhen": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserInfoBlockViewModel": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressInfoBlockViewModel"
              }
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserModel": {
        "type": "object",
        "properties": {
          "employmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobility": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "resumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleModel"
            },
            "nullable": true
          },
          "teamManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamManagerModel"
            },
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamMemberModel"
            },
            "nullable": true
          },
          "customerManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerManagerModel"
            },
            "nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbsencePeriodModel"
            },
            "nullable": true
          },
          "defaultCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagModel"
            },
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ],
            "description": "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "companyUserEmail": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserPermissionsEditModel": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessLevel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileAddEditModel": {
        "type": "object",
        "properties": {
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "presentation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
              }
            ],
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32"
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileCommitmentAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileCommitmentModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileCommitmentTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileCommitmentTranslationModel": {
        "type": "object",
        "properties": {
          "profileCommitmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEducationAddEditModel": {
        "required": [
          "programName",
          "schoolName"
        ],
        "type": "object",
        "properties": {
          "schoolName": {
            "minLength": 1,
            "type": "string"
          },
          "programName": {
            "minLength": 1,
            "type": "string"
          },
          "degree": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEducationModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileEducationTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEducationTranslationModel": {
        "type": "object",
        "properties": {
          "profileEducationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "degree": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEmployerAddEditModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEmployerModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileEmployerTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileEmployerTranslationModel": {
        "type": "object",
        "properties": {
          "profileEmployerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileExtSkillAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileExtSkillModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileExtSkillTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileExtSkillTranslationModel": {
        "type": "object",
        "properties": {
          "profileExtSkillId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileFullModel": {
        "type": "object",
        "properties": {
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileEmployerModel"
            },
            "nullable": true
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceModel"
            },
            "nullable": true
          },
          "education": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileEducationModel"
            },
            "nullable": true
          },
          "training": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileTrainingModel"
            },
            "nullable": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileReferenceModel"
            },
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
            },
            "nullable": true
          },
          "extSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileExtSkillModel"
            },
            "nullable": true
          },
          "commitments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileCommitmentModel"
            },
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileLanguageModel"
            },
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedWhen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "presentation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfilePresentationModel"
              }
            ],
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32"
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileLanguageAddModel": {
        "required": [
          "languageId"
        ],
        "type": "object",
        "properties": {
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageLevel"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileLanguageBranchModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileLanguageModel"
              }
            ],
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileLanguageEditModel": {
        "required": [
          "languageId"
        ],
        "type": "object",
        "properties": {
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageLevel"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileLanguageModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileLanguageModel"
              }
            ],
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfilePresentationEditModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "personalDescription": {
            "type": "string",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfilePresentationModel": {
        "type": "object",
        "properties": {
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfilePresentationTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfilePresentationTranslationModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "personalDescription": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileReferenceAddEditModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "profileWorkExperienceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileReferenceModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "profileWorkExperienceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileReferenceTranslationModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileReferenceTranslationModel": {
        "type": "object",
        "properties": {
          "profileReferenceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileSkillAddModel": {
        "type": "object",
        "properties": {
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileSkillEditModel": {
        "type": "object",
        "properties": {
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileSkillHistoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "changeDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "favourite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileSkillModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelGoalDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "changeHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileSkillHistoryModel"
            },
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileSkillTranslationModel"
            },
            "nullable": true
          },
          "favourite": {
            "type": "boolean"
          },
          "numberOfDaysWorkExperience": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileSkillTranslationModel": {
        "type": "object",
        "properties": {
          "keywordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordSynonym": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordSynonymModel"
              }
            ],
            "nullable": true
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileTrainingAddEditModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "trainingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TrainingType"
              }
            ]
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileTrainingModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trainingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TrainingType"
              }
            ],
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileTrainingTranslationModel"
            },
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileTrainingTranslationModel": {
        "type": "object",
        "properties": {
          "profileTrainingId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileTranslationModel": {
        "type": "object",
        "properties": {
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageBranch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileLanguageBranchModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileWorkExperienceAddEditModel": {
        "required": [
          "description",
          "employer",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "employer": {
            "minLength": 1,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceSkillAddModel"
            },
            "nullable": true
          },
          "saveTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaveToApiOption"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileWorkExperienceModel": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileWorkExperienceTranslationModel"
            },
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserProfileSkillModel"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileWorkExperienceSkillAddModel": {
        "required": [
          "keywordSynonymId",
          "name"
        ],
        "type": "object",
        "properties": {
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProfileWorkExperienceTranslationModel": {
        "type": "object",
        "properties": {
          "profileWorkExperienceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employer": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "profileTranslation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileTranslationModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserProjectAssignmentModel": {
        "type": "object",
        "properties": {
          "assigned": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentBaseModel"
            },
            "nullable": true
          },
          "prospect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentBaseModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserQuerySort": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "\n\nCreatedDateTime = 0\n\nFirstName = 1\n\nLastName = 2\n\nEmail = 3\n\nUpdatedDateTime = 4",
        "format": "int32",
        "x-enumNames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Email",
          "UpdatedDateTime"
        ],
        "x-enum-varnames": [
          "CreatedDateTime",
          "FirstName",
          "LastName",
          "Email",
          "UpdatedDateTime"
        ],
        "x-ms-enum": {
          "name": "CompanyUserQuerySort",
          "values": [
            {
              "name": "CreatedDateTime",
              "value": 0
            },
            {
              "name": "FirstName",
              "value": 1
            },
            {
              "name": "LastName",
              "value": 2
            },
            {
              "name": "Email",
              "value": 3
            },
            {
              "name": "UpdatedDateTime",
              "value": 4
            }
          ]
        }
      },
      "CompanyUserQuerySortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserQuerySort"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "CompanyUserResumeBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreatedModel"
              }
            ],
            "nullable": true
          },
          "updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatedModel"
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateLanguageModel"
              }
            ],
            "nullable": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateBaseModel"
              }
            ],
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSearchSkillModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressDisplayName": {
            "type": "string",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamBaseModel"
            },
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillResultModel"
            },
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ],
            "nullable": true
          },
          "companyCandidateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySubcontractorGroupBaseModel"
            },
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSkillModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfDaysWorkExperience": {
            "type": "integer",
            "format": "int32"
          },
          "profileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "levelGoalDeadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "favourite": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserStatus": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nFrånkopplad = 0\n\nKommande = 2\n\nAktiv = 3",
        "format": "int32",
        "x-enumNames": [
          "Disconnected",
          "PreActive",
          "Active"
        ],
        "x-enum-varnames": [
          "Disconnected",
          "PreActive",
          "Active"
        ],
        "x-ms-enum": {
          "name": "CompanyUserStatus",
          "values": [
            {
              "name": "Disconnected",
              "value": 0
            },
            {
              "name": "PreActive",
              "value": 2
            },
            {
              "name": "Active",
              "value": 3
            }
          ]
        }
      },
      "CompanyUserSubcontractorAddEditModel": {
        "required": [
          "email",
          "firstName",
          "gender",
          "languageId",
          "lastName",
          "password",
          "passwordConfirm"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "passwordConfirm": {
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ]
          },
          "profileLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createProfile": {
            "type": "boolean"
          },
          "tariff": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "companyCalendarId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyAddressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorAttachmentModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorBaseModel": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserSubcontractorStatus"
              }
            ],
            "description": "Disconnected = 0\r\nActive = 1",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorFileAttachmentListModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserSubcontractorFileAttachmentModel"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorFileAttachmentModel": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorModel": {
        "type": "object",
        "properties": {
          "resumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserResumeBaseModel"
            },
            "nullable": true
          },
          "defaultCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "tariff": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySubcontractorGroupBaseModel"
            },
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserSubcontractorAttachmentModel"
            },
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserSubcontractorStatus"
              }
            ],
            "description": "Disconnected = 0\r\nActive = 1",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyIdentifier": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyAddressModel"
              }
            ],
            "nullable": true
          },
          "homeAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "image": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserImageModel"
              }
            ],
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "description": "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorRoleMemberModel": {
        "type": "object",
        "properties": {
          "projectAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentTariff": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "currentState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberStateHistoryModel"
              }
            ],
            "nullable": true
          },
          "projectAssignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentBaseModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorRolesModel": {
        "type": "object",
        "properties": {
          "assigned": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
            },
            "nullable": true
          },
          "prospect": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserSubcontractorRoleMemberModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyUserSubcontractorStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nFrånkopplad = 0\n\nAktiv = 1",
        "format": "int32",
        "x-enumNames": [
          "Disconnected",
          "Active"
        ],
        "x-enum-varnames": [
          "Disconnected",
          "Active"
        ],
        "x-ms-enum": {
          "name": "CompanyUserSubcontractorStatus",
          "values": [
            {
              "name": "Disconnected",
              "value": 0
            },
            {
              "name": "Active",
              "value": 1
            }
          ]
        }
      },
      "CompanyUserType": {
        "enum": [
          0,
          10,
          20,
          30,
          40
        ],
        "type": "integer",
        "description": "\n\nMedarbetare = 0\n\nKandidat = 10\n\nUnderkonsult = 20\n\nApi = 30\n\nBot = 40",
        "format": "int32",
        "x-enumNames": [
          "Employee",
          "Candidate",
          "Subcontractor",
          "Api",
          "Bot"
        ],
        "x-enum-varnames": [
          "Employee",
          "Candidate",
          "Subcontractor",
          "Api",
          "Bot"
        ],
        "x-ms-enum": {
          "name": "CompanyUserType",
          "values": [
            {
              "name": "Employee",
              "value": 0
            },
            {
              "name": "Candidate",
              "value": 10
            },
            {
              "name": "Subcontractor",
              "value": 20
            },
            {
              "name": "Api",
              "value": 30
            },
            {
              "name": "Bot",
              "value": 40
            }
          ]
        }
      },
      "ContractType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nTimpris = 0\n\nFastpris = 1",
        "format": "int32",
        "x-enumNames": [
          "Hourly",
          "Fixed"
        ],
        "x-enum-varnames": [
          "Hourly",
          "Fixed"
        ],
        "x-ms-enum": {
          "name": "ContractType",
          "values": [
            {
              "name": "Hourly",
              "value": 0
            },
            {
              "name": "Fixed",
              "value": 1
            }
          ]
        }
      },
      "ConvertCompanyUserToAadAccountModel": {
        "required": [
          "objectIdentifier"
        ],
        "type": "object",
        "properties": {
          "objectIdentifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CountryModel": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerEventBaseModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerEventMeetingAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for StartDateTime and EndDateTime properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CustomerEventMeetingModel": {
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerEventModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerEventNoteAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for NoteDate property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CustomerEventNoteModel": {
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerEventTaskAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for DueDateTime property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CustomerEventTaskModel": {
        "type": "object",
        "properties": {
          "customerContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "description": "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2",
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicCompanyUserResumeModel": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32"
          },
          "parentCompanyUserResumeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resume": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DynamicTemplateViewModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreatedModel"
              }
            ],
            "nullable": true
          },
          "updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatedModel"
              }
            ],
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateLanguageModel"
              }
            ],
            "nullable": true
          },
          "template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResumeTemplateBaseModel"
              }
            ],
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicTemplateViewModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDynamicBlockViewModel"
            },
            "nullable": true
          },
          "logotype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ITemplateLogotype"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "resumeTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "logotypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wordEnabled": {
            "type": "boolean"
          },
          "profileImageSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              }
            ]
          },
          "allowNoProfileImage": {
            "type": "boolean"
          },
          "hideProfileImageInEdit": {
            "type": "boolean"
          },
          "companyLogotypeImageSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              }
            ]
          },
          "pdfEngineType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PdfEngineType"
              }
            ]
          },
          "wordEngineType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WordEngineType"
              }
            ]
          },
          "pdfOrientation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PdfOrientation"
              }
            ]
          },
          "pdfMarginTop": {
            "type": "integer",
            "format": "int32"
          },
          "pdfMarginRight": {
            "type": "integer",
            "format": "int32"
          },
          "pdfMarginBottom": {
            "type": "integer",
            "format": "int32"
          },
          "pdfMarginLeft": {
            "type": "integer",
            "format": "int32"
          },
          "customFooterForWkhtml": {
            "type": "boolean"
          },
          "pdfFooter": {
            "type": "boolean"
          },
          "showPreviewToggle": {
            "type": "boolean"
          },
          "contactInfoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContactInfoViewModel"
              }
            ],
            "nullable": true
          },
          "userInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ITemplateUserInfo"
              }
            ],
            "nullable": true
          },
          "companyUserInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserInfoBlockViewModel"
              }
            ],
            "nullable": true
          },
          "profileImage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ITemplateProfileImage"
              }
            ],
            "nullable": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ITemplateCompany"
              }
            ],
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "languageBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "locked": {
            "type": "boolean"
          },
          "currentLanguage": {
            "type": "string",
            "nullable": true
          },
          "styleAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITemplateStyleAssetViewModel"
            },
            "nullable": true
          },
          "customerManagedStyleAsset": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ITemplateStyleAssetViewModel"
              }
            ],
            "nullable": true
          },
          "sharedStyleAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
            },
            "nullable": true
          },
          "sharedScriptAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
            },
            "nullable": true
          },
          "sharedFontAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
            },
            "nullable": true
          },
          "primaryStyleAssets": {
            "type": "object",
            "properties": {
              "None": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Primary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Classic": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Dynamic": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "BlockWorkExperience": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "BlockSkillsByLevel": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "CinodePremium3PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "CinodePremium2PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "TemplateType": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "primaryScriptAssets": {
            "type": "object",
            "properties": {
              "None": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Primary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Classic": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "Dynamic": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "BlockWorkExperience": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "BlockSkillsByLevel": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "CinodePremium3PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "CinodePremium2PageFlow": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              },
              "TemplateType": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ITemplateSharedAssetViewModel"
                }
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "templateAssetTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateAssetType"
            },
            "nullable": true
          },
          "isAnsweringToRequest": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EducationBlockItemModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "degree": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationBlockModel"
              }
            ],
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EducationBlockModel": {
        "type": "object",
        "properties": {
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployerBlockItemModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EmployerBlockModel": {
        "type": "object",
        "properties": {
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorModel": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "CorrelationId",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Severity of error",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Error description in plain text",
            "nullable": true
          },
          "code": {
            "type": "integer",
            "description": "Cinode specific error code",
            "format": "int32",
            "nullable": true
          },
          "moreInfo": {
            "type": "string",
            "description": "Url to help page containing more information",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventCommentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventMeetingAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for StartDateTime and EndDateTime properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "EventNoteAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for NoteDate property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "EventNoteType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nEj angiven = 0\n\nTelefonsamtal = 1\n\nE-mail = 2",
        "format": "int32",
        "x-enumNames": [
          "NotSpecified",
          "Phone",
          "Email"
        ],
        "x-enum-varnames": [
          "NotSpecified",
          "Phone",
          "Email"
        ],
        "x-ms-enum": {
          "name": "EventNoteType",
          "values": [
            {
              "name": "NotSpecified",
              "value": 0
            },
            {
              "name": "Phone",
              "value": 1
            },
            {
              "name": "Email",
              "value": 2
            }
          ]
        }
      },
      "EventStatusValue": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "\n\nInte påbörjad = 0\n\nPåbörjad = 1\n\nFärdig = 2\n\nUppskjuten = 3\n\nVäntar = 4",
        "format": "int32",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "Completed",
          "Deferred",
          "WaitingForSomeoneElse"
        ],
        "x-enum-varnames": [
          "NotStarted",
          "InProgress",
          "Completed",
          "Deferred",
          "WaitingForSomeoneElse"
        ],
        "x-ms-enum": {
          "name": "EventStatusValue",
          "values": [
            {
              "name": "NotStarted",
              "value": 0
            },
            {
              "name": "InProgress",
              "value": 1
            },
            {
              "name": "Completed",
              "value": 2
            },
            {
              "name": "Deferred",
              "value": 3
            },
            {
              "name": "WaitingForSomeoneElse",
              "value": 4
            }
          ]
        }
      },
      "EventTaskAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for DueDateTime property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "EventTaskType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nEj angiven = 0\n\nTelefonsamtal = 1\n\nE-mail = 2",
        "format": "int32",
        "x-enumNames": [
          "NotSpecified",
          "Phone",
          "Email"
        ],
        "x-enum-varnames": [
          "NotSpecified",
          "Phone",
          "Email"
        ],
        "x-ms-enum": {
          "name": "EventTaskType",
          "values": [
            {
              "name": "NotSpecified",
              "value": 0
            },
            {
              "name": "Phone",
              "value": 1
            },
            {
              "name": "Email",
              "value": 2
            }
          ]
        }
      },
      "EventType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nMöte = 0\n\nNotering = 1\n\nUppgift = 2\n\nSamtal = 3",
        "format": "int32",
        "x-enumNames": [
          "Meeting",
          "Note",
          "Task",
          "Call"
        ],
        "x-enum-varnames": [
          "Meeting",
          "Note",
          "Task",
          "Call"
        ],
        "x-ms-enum": {
          "name": "EventType",
          "values": [
            {
              "name": "Meeting",
              "value": 0
            },
            {
              "name": "Note",
              "value": 1
            },
            {
              "name": "Task",
              "value": 2
            },
            {
              "name": "Call",
              "value": 3
            }
          ]
        }
      },
      "EventVisibility": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nPublik = 0\n\nPrivat = 1",
        "format": "int32",
        "x-enumNames": [
          "Public",
          "Private"
        ],
        "x-enum-varnames": [
          "Public",
          "Private"
        ],
        "x-ms-enum": {
          "name": "EventVisibility",
          "values": [
            {
              "name": "Public",
              "value": 0
            },
            {
              "name": "Private",
              "value": 1
            }
          ]
        }
      },
      "ExtentType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nProcent = 0\n\nTimmar = 1",
        "format": "int32",
        "x-enumNames": [
          "Percent",
          "Hours"
        ],
        "x-enum-varnames": [
          "Percent",
          "Hours"
        ],
        "x-ms-enum": {
          "name": "ExtentType",
          "values": [
            {
              "name": "Percent",
              "value": 0
            },
            {
              "name": "Hours",
              "value": 1
            }
          ]
        }
      },
      "ExtraSkillBlockModel": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtraSkillItemBlockModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtraSkillItemBlockModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FilterModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HighlightedWorkExperienceBlockItemModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "employer": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationBlockModel"
              }
            ],
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "logotype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageBlockModel"
              }
            ],
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HighlightedWorkExperienceBlockModel": {
        "type": "object",
        "properties": {
          "numberOfItemsInList": {
            "type": "integer",
            "format": "int32"
          },
          "titleLength": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionLength": {
            "type": "integer",
            "format": "int32"
          },
          "employerLength": {
            "type": "integer",
            "format": "int32"
          },
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "useAdvancedFormatting": {
            "type": "boolean"
          },
          "editorSettings": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighlightedWorkExperienceBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ICompanyAddressViewModel": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ICompanyCandidatePatchDocument": {
        "type": "object",
        "properties": {
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recruitmentManagerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateState"
              }
            ],
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "campaignCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ICompanyUserEmployeePatchDocument": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ]
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentNumber": {
            "type": "string",
            "nullable": true
          },
          "invoicingGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobility": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "taxTable": {
            "type": "string",
            "nullable": true
          },
          "baseSalary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "provision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hourlyTargetRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "selfCost": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGender"
              }
            ]
          },
          "companyCalendarId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "desiredAssignment": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "gitHub": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IContactInfoViewModel": {
        "type": "object",
        "properties": {
          "contactInfoId": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ICompanyAddressViewModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IDynamicBlockViewModel": {
        "type": "object",
        "properties": {
          "viewComponentName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "templateAssetTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateAssetType"
            },
            "nullable": true,
            "readOnly": true
          },
          "companyUserResumeId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "isEditable": {
            "type": "boolean"
          },
          "partialEditViewPath": {
            "type": "string",
            "nullable": true
          },
          "friendlyBlockName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "hasUpdatesInProfile": {
            "type": "boolean"
          },
          "heading": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ITemplateCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "registrationYear": {
            "type": "integer",
            "format": "int32"
          },
          "isTaxRegistered": {
            "type": "boolean"
          },
          "isUsingFreemiumResumes": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ITemplateLogotype": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageOriginalUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              }
            ],
            "readOnly": true
          },
          "imageFileName": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "extension": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ITemplateProfileImage": {
        "type": "object",
        "properties": {
          "allowNoProfileImage": {
            "type": "boolean"
          },
          "showImage": {
            "type": "boolean"
          },
          "useDefaultImage": {
            "type": "boolean",
            "readOnly": true
          },
          "companyUserResumeId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "imageId": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "imageOriginalUrl": {
            "type": "string",
            "nullable": true
          },
          "imageSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              }
            ],
            "readOnly": true
          },
          "imageFileName": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "extension": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ITemplateSharedAssetViewModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ITemplateStyleAssetViewModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "resumeTemplateId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ITemplateUserInfo": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "fullname": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "twitterUserName": {
            "type": "string",
            "nullable": true
          },
          "linkedInUserName": {
            "type": "string",
            "nullable": true
          },
          "homepageUrl": {
            "type": "string",
            "nullable": true
          },
          "bloggUrl": {
            "type": "string",
            "nullable": true
          },
          "gitHubUserName": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "internalIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageBlockModel": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "imageOriginalUrl": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "format": "uuid"
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageSize": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "description": "\n\nOriginal = 0\n\nH40W40 = 1\n\nH100W100 = 2\n\nH200W200 = 3\n\nH300W300 = 4\n\nW100 = 5\n\nH60 = 6\n\nH100 = 7\n\nH40 = 8\n\nW340 = 9\n\nW1800 = 10\n\nH750W1800 = 11\n\nH250 = 12\n\nH400W400 = 13\n\nW150 = 14\n\nW1200 = 15",
        "format": "int32",
        "x-enumNames": [
          "Original",
          "H40W40",
          "H100W100",
          "H200W200",
          "H300W300",
          "W100",
          "H60",
          "H100",
          "H40",
          "W340",
          "W1800",
          "H750W1800",
          "H250",
          "H400W400",
          "W150",
          "W1200"
        ],
        "x-enum-varnames": [
          "Original",
          "H40W40",
          "H100W100",
          "H200W200",
          "H300W300",
          "W100",
          "H60",
          "H100",
          "H40",
          "W340",
          "W1800",
          "H750W1800",
          "H250",
          "H400W400",
          "W150",
          "W1200"
        ],
        "x-ms-enum": {
          "name": "ImageSize",
          "values": [
            {
              "name": "Original",
              "value": 0
            },
            {
              "name": "H40W40",
              "value": 1
            },
            {
              "name": "H100W100",
              "value": 2
            },
            {
              "name": "H200W200",
              "value": 3
            },
            {
              "name": "H300W300",
              "value": 4
            },
            {
              "name": "W100",
              "value": 5
            },
            {
              "name": "H60",
              "value": 6
            },
            {
              "name": "H100",
              "value": 7
            },
            {
              "name": "H40",
              "value": 8
            },
            {
              "name": "W340",
              "value": 9
            },
            {
              "name": "W1800",
              "value": 10
            },
            {
              "name": "H750W1800",
              "value": 11
            },
            {
              "name": "H250",
              "value": 12
            },
            {
              "name": "H400W400",
              "value": 13
            },
            {
              "name": "W150",
              "value": 14
            },
            {
              "name": "W1200",
              "value": 15
            }
          ]
        }
      },
      "ImportProfileAsyncOperation": {
        "type": "object",
        "properties": {
          "profile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserProfileBaseModel"
              }
            ],
            "nullable": true
          },
          "operationId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LongRunningStatus"
              }
            ],
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "JsonPatchDocument": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Operation"
        },
        "description": "Array of patch operations to perform"
      },
      "KeywordModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordType"
              }
            ],
            "description": "Uncategorized = 0,\r\nIndustries = 1\r\nRoles = 2\r\nTools = 3\r\nTechniques = 4\r\nMethodsProcesses = 5\r\nPlatforms = 6\r\nProducts = 7\r\nCertifications = 10\r\nMaterials = 11\r\nSpecificationsRegulations = 12\r\nHardware = 13\r\nOperationalAreaAndFunction = 14\r\nConstruction = 15\r\nReportsInvestigations = 16\r\nSpecialitiesMedicine = 17\r\nStandardsRegulations = 18\r\nAccreditation = 19"
          },
          "masterSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "masterSynonym": {
            "type": "string",
            "nullable": true
          },
          "synonyms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "universal": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "KeywordSynonymModel": {
        "type": "object",
        "properties": {
          "keywordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeywordType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          100
        ],
        "type": "integer",
        "description": "\n\nOkategoriserad = 0\n\nBranscher = 1\n\nRoller = 2\n\nVerktyg = 3\n\nTekniker = 4\n\nMetoder och processer = 5\n\nPlattformar = 6\n\nProdukter och tjänster = 7\n\nCertifieringar = 10\n\nMaterial = 11\n\nSpecifikationer och förordningar = 12\n\nHårdvara = 13\n\nVerksamhet och funktion = 14\n\nByggnationer = 15\n\nRapporter och utredningar = 16\n\nSpecialiteter - Medicin = 17\n\nStandarder och regelverk = 18\n\nBehörigheter = 19\n\nMjuka färdigheter = 20\n\nCustomName = 100",
        "format": "int32",
        "x-enumNames": [
          "Uncategorized",
          "Industries",
          "Roles",
          "Tools",
          "Techniques",
          "MethodsProcesses",
          "Platforms",
          "Products",
          "Certifications",
          "Materials",
          "SpecificationsRegulations",
          "Hardware",
          "OperationalAreaAndFunction",
          "Construction",
          "ReportsInvestigations",
          "SpecialitiesMedicine",
          "StandardsRegulations",
          "Accreditation",
          "SoftSkills",
          "CustomName"
        ],
        "x-enum-varnames": [
          "Uncategorized",
          "Industries",
          "Roles",
          "Tools",
          "Techniques",
          "MethodsProcesses",
          "Platforms",
          "Products",
          "Certifications",
          "Materials",
          "SpecificationsRegulations",
          "Hardware",
          "OperationalAreaAndFunction",
          "Construction",
          "ReportsInvestigations",
          "SpecialitiesMedicine",
          "StandardsRegulations",
          "Accreditation",
          "SoftSkills",
          "CustomName"
        ],
        "x-ms-enum": {
          "name": "KeywordType",
          "values": [
            {
              "name": "Uncategorized",
              "value": 0
            },
            {
              "name": "Industries",
              "value": 1
            },
            {
              "name": "Roles",
              "value": 2
            },
            {
              "name": "Tools",
              "value": 3
            },
            {
              "name": "Techniques",
              "value": 4
            },
            {
              "name": "MethodsProcesses",
              "value": 5
            },
            {
              "name": "Platforms",
              "value": 6
            },
            {
              "name": "Products",
              "value": 7
            },
            {
              "name": "Certifications",
              "value": 10
            },
            {
              "name": "Materials",
              "value": 11
            },
            {
              "name": "SpecificationsRegulations",
              "value": 12
            },
            {
              "name": "Hardware",
              "value": 13
            },
            {
              "name": "OperationalAreaAndFunction",
              "value": 14
            },
            {
              "name": "Construction",
              "value": 15
            },
            {
              "name": "ReportsInvestigations",
              "value": 16
            },
            {
              "name": "SpecialitiesMedicine",
              "value": 17
            },
            {
              "name": "StandardsRegulations",
              "value": 18
            },
            {
              "name": "Accreditation",
              "value": 19
            },
            {
              "name": "SoftSkills",
              "value": 20
            },
            {
              "name": "CustomName",
              "value": 100
            }
          ]
        }
      },
      "LanguageBlockModel": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageItemBlockModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageItemBlockModel": {
        "type": "object",
        "properties": {
          "culture": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LanguageLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "\n\nEnstaka ord och fraser = 0\n\nGrundläggande kunskaper = 1\n\nGoda kunskaper = 2\n\nFlytande = 3\n\nModersmål = 4",
        "format": "int32",
        "x-enumNames": [
          "Level0",
          "Level1",
          "Level2",
          "Level3",
          "Level4"
        ],
        "x-enum-varnames": [
          "Level0",
          "Level1",
          "Level2",
          "Level3",
          "Level4"
        ],
        "x-ms-enum": {
          "name": "LanguageLevel",
          "values": [
            {
              "name": "Level0",
              "value": 0
            },
            {
              "name": "Level1",
              "value": 1
            },
            {
              "name": "Level2",
              "value": 2
            },
            {
              "name": "Level3",
              "value": 3
            },
            {
              "name": "Level4",
              "value": 4
            }
          ]
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "methods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationBlockModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "googleId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "webSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "webSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LongRunningStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nInProgress = 0\n\nCompleted = 1\n\nFailed = 2",
        "format": "int32",
        "x-enumNames": [
          "InProgress",
          "Completed",
          "Failed"
        ],
        "x-enum-varnames": [
          "InProgress",
          "Completed",
          "Failed"
        ],
        "x-ms-enum": {
          "name": "LongRunningStatus",
          "values": [
            {
              "name": "InProgress",
              "value": 0
            },
            {
              "name": "Completed",
              "value": 1
            },
            {
              "name": "Failed",
              "value": 2
            }
          ]
        }
      },
      "MentionTextModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          19,
          20,
          21,
          22,
          23,
          30,
          31,
          40,
          41,
          42,
          43,
          44,
          48,
          50,
          51,
          52,
          60,
          70,
          80,
          90,
          600
        ],
        "type": "integer",
        "description": "\n\nCompanyUserResume = 1\n\nCustomers = 2\n\nAssignments = 3\n\nPartners = 4\n\nOffers = 5\n\nReports = 6\n\nRecruitment = 8\n\nAbsence = 9\n\nApi = 10\n\nReferenceText = 11\n\nProfileCompleteness = 12\n\nCalendarSync = 13\n\nAllowWidgetModification = 14\n\nConfiguredFilters = 19\n\nSkillSets = 20\n\nProfileUpdateReminders = 21\n\nOverdueProjectReminders = 22\n\nEmailSync = 23\n\nApplicationRegistration = 30\n\nApplicationDirectory = 31\n\nNextGenResume = 40\n\nHideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41\n\nImportCv = 42\n\nAI = 43\n\nAITextGeneration = 44\n\nProjectPlanning = 48\n\nExternalAccounts = 50\n\nConvertAccount = 51\n\nUserProvisioning = 52\n\nWebhooks = 60\n\nGrowthPlan = 70\n\nGUIShowcase = 80\n\nAppmixer = 90\n\nIntercom = 600",
        "format": "int32",
        "x-enumNames": [
          "CompanyUserResume",
          "Customers",
          "Assignments",
          "Partners",
          "Offers",
          "Reports",
          "Recruitment",
          "Absence",
          "Api",
          "ReferenceText",
          "ProfileCompleteness",
          "CalendarSync",
          "AllowWidgetModification",
          "ConfiguredFilters",
          "SkillSets",
          "ProfileUpdateReminders",
          "OverdueProjectReminders",
          "EmailSync",
          "ApplicationRegistration",
          "ApplicationDirectory",
          "NextGenResume",
          "HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips",
          "ImportCv",
          "AI",
          "AITextGeneration",
          "ProjectPlanning",
          "ExternalAccounts",
          "ConvertAccount",
          "UserProvisioning",
          "Webhooks",
          "GrowthPlan",
          "GUIShowcase",
          "Appmixer",
          "Intercom"
        ],
        "x-enum-varnames": [
          "CompanyUserResume",
          "Customers",
          "Assignments",
          "Partners",
          "Offers",
          "Reports",
          "Recruitment",
          "Absence",
          "Api",
          "ReferenceText",
          "ProfileCompleteness",
          "CalendarSync",
          "AllowWidgetModification",
          "ConfiguredFilters",
          "SkillSets",
          "ProfileUpdateReminders",
          "OverdueProjectReminders",
          "EmailSync",
          "ApplicationRegistration",
          "ApplicationDirectory",
          "NextGenResume",
          "HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips",
          "ImportCv",
          "AI",
          "AITextGeneration",
          "ProjectPlanning",
          "ExternalAccounts",
          "ConvertAccount",
          "UserProvisioning",
          "Webhooks",
          "GrowthPlan",
          "GUIShowcase",
          "Appmixer",
          "Intercom"
        ],
        "x-ms-enum": {
          "name": "ModuleType",
          "values": [
            {
              "name": "CompanyUserResume",
              "value": 1
            },
            {
              "name": "Customers",
              "value": 2
            },
            {
              "name": "Assignments",
              "value": 3
            },
            {
              "name": "Partners",
              "value": 4
            },
            {
              "name": "Offers",
              "value": 5
            },
            {
              "name": "Reports",
              "value": 6
            },
            {
              "name": "Recruitment",
              "value": 8
            },
            {
              "name": "Absence",
              "value": 9
            },
            {
              "name": "Api",
              "value": 10
            },
            {
              "name": "ReferenceText",
              "value": 11
            },
            {
              "name": "ProfileCompleteness",
              "value": 12
            },
            {
              "name": "CalendarSync",
              "value": 13
            },
            {
              "name": "AllowWidgetModification",
              "value": 14
            },
            {
              "name": "ConfiguredFilters",
              "value": 19
            },
            {
              "name": "SkillSets",
              "value": 20
            },
            {
              "name": "ProfileUpdateReminders",
              "value": 21
            },
            {
              "name": "OverdueProjectReminders",
              "value": 22
            },
            {
              "name": "EmailSync",
              "value": 23
            },
            {
              "name": "ApplicationRegistration",
              "value": 30
            },
            {
              "name": "ApplicationDirectory",
              "value": 31
            },
            {
              "name": "NextGenResume",
              "value": 40
            },
            {
              "name": "HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips",
              "value": 41
            },
            {
              "name": "ImportCv",
              "value": 42
            },
            {
              "name": "AI",
              "value": 43
            },
            {
              "name": "AITextGeneration",
              "value": 44
            },
            {
              "name": "ProjectPlanning",
              "value": 48
            },
            {
              "name": "ExternalAccounts",
              "value": 50
            },
            {
              "name": "ConvertAccount",
              "value": 51
            },
            {
              "name": "UserProvisioning",
              "value": 52
            },
            {
              "name": "Webhooks",
              "value": 60
            },
            {
              "name": "GrowthPlan",
              "value": 70
            },
            {
              "name": "GUIShowcase",
              "value": 80
            },
            {
              "name": "Appmixer",
              "value": 90
            },
            {
              "name": "Intercom",
              "value": 600
            }
          ]
        }
      },
      "Operation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "nullable": true
          },
          "path": {
            "type": "string"
          }
        }
      },
      "PartnerBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "partnerConnection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartnerConnectionBaseModel"
              }
            ],
            "nullable": true
          },
          "companyUserManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "hasTrusts": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PartnerConnectionBaseModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyBaseModel"
              }
            ],
            "nullable": true
          },
          "partnerId": {
            "type": "integer",
            "format": "int32"
          },
          "connectedPartnerConnectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partnerCompanyId": {
            "type": "integer",
            "format": "int32"
          },
          "partnerCompany": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyBaseModel"
              }
            ],
            "nullable": true
          },
          "grantedTrusts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerConnectionTrustType"
            },
            "nullable": true
          },
          "receivedTrusts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerConnectionTrustType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartnerConnectionTrustType": {
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60,
          70
        ],
        "type": "integer",
        "description": "\n\nAnonymiserat = 10\n\nTransparent = 20\n\nAvisera = 30\n\nBoka = 40\n\nMatcha = 50\n\nTillgänglighet = 60\n\nUserCv = 70",
        "format": "int32",
        "x-enumNames": [
          "UserViewAnonymous",
          "UserViewTransparent",
          "UserAssignRequest",
          "UserAssignBook",
          "UserSkillMatch",
          "UserAvailability",
          "UserCv"
        ],
        "x-enum-varnames": [
          "UserViewAnonymous",
          "UserViewTransparent",
          "UserAssignRequest",
          "UserAssignBook",
          "UserSkillMatch",
          "UserAvailability",
          "UserCv"
        ],
        "x-ms-enum": {
          "name": "PartnerConnectionTrustType",
          "values": [
            {
              "name": "UserViewAnonymous",
              "value": 10
            },
            {
              "name": "UserViewTransparent",
              "value": 20
            },
            {
              "name": "UserAssignRequest",
              "value": 30
            },
            {
              "name": "UserAssignBook",
              "value": 40
            },
            {
              "name": "UserSkillMatch",
              "value": 50
            },
            {
              "name": "UserAvailability",
              "value": 60
            },
            {
              "name": "UserCv",
              "value": 70
            }
          ]
        }
      },
      "PartnerRecipientBaseModel": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "format": "int32"
          },
          "requestedCompanyUserAnonymousHash": {
            "type": "string",
            "nullable": true
          },
          "requestedCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartnersFilterModel": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          },
          "onlyIncludeConnectedPartners": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PartnersOverviewModel": {
        "type": "object",
        "properties": {
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerBaseModel"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartnersFilterModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PdfEngineType": {
        "enum": [
          0,
          2
        ],
        "type": "integer",
        "description": "\n\nWkHtmlToPdf = 0\n\nPuppeteer = 2",
        "format": "int32",
        "x-enumNames": [
          "WkHtmlToPdf",
          "Puppeteer"
        ],
        "x-enum-varnames": [
          "WkHtmlToPdf",
          "Puppeteer"
        ],
        "x-ms-enum": {
          "name": "PdfEngineType",
          "values": [
            {
              "name": "WkHtmlToPdf",
              "value": 0
            },
            {
              "name": "Puppeteer",
              "value": 2
            }
          ]
        }
      },
      "PdfOrientation": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nPortrait = 0\n\nLandscape = 1",
        "format": "int32",
        "x-enumNames": [
          "Portrait",
          "Landscape"
        ],
        "x-enum-varnames": [
          "Portrait",
          "Landscape"
        ],
        "x-ms-enum": {
          "name": "PdfOrientation",
          "values": [
            {
              "name": "Portrait",
              "value": 0
            },
            {
              "name": "Landscape",
              "value": 1
            }
          ]
        }
      },
      "PresentationBlockModel": {
        "type": "object",
        "properties": {
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "personalDescription": {
            "type": "string",
            "nullable": true
          },
          "personalDescriptionHeading": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "subHeading": {
            "type": "string",
            "nullable": true
          },
          "useAdvancedFormatting": {
            "type": "boolean"
          },
          "editorSettings": {
            "type": "string",
            "nullable": true
          },
          "hideSubHeading": {
            "type": "boolean"
          },
          "personalPresentationLength": {
            "type": "integer",
            "format": "int32"
          },
          "showPersonalPresentation": {
            "type": "boolean"
          },
          "titleLength": {
            "type": "integer",
            "format": "int32"
          },
          "descriptionLength": {
            "type": "integer",
            "format": "int32"
          },
          "employerLength": {
            "type": "integer",
            "format": "int32"
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileLanguageModel": {
        "type": "object",
        "properties": {
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAddEditModel": {
        "required": [
          "customerId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "customerIdentifier": {
            "type": "string",
            "nullable": true
          },
          "intermediatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "estimatedValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "probability": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pipelineStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectState"
              }
            ]
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationModel"
              }
            ],
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectPriority"
              }
            ],
            "default": 5
          },
          "salesManagerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of sales managers employee ids",
            "nullable": true
          },
          "projectManagerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of project managers employee ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentAddModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "oralAgreementToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "optionToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractType"
              }
            ]
          },
          "extentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtentType"
              }
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentAllocationStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nEj bokad = 0\n\nPreliminär = 1\n\nTillsatt = 2",
        "format": "int32",
        "x-enumNames": [
          "NotBooked",
          "Preliminary",
          "Assigned"
        ],
        "x-enum-varnames": [
          "NotBooked",
          "Preliminary",
          "Assigned"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentAllocationStatus",
          "values": [
            {
              "name": "NotBooked",
              "value": 0
            },
            {
              "name": "Preliminary",
              "value": 1
            },
            {
              "name": "Assigned",
              "value": 2
            }
          ]
        }
      },
      "ProjectAssignmentAnnounceModel": {
        "required": [
          "deadline",
          "managerCompanyUserId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isPriceNegotiable": {
            "type": "boolean"
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "managerCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "partnerRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerRecipientBaseModel"
            },
            "nullable": true
          },
          "subcontractorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "announceToPartnerNetwork": {
            "type": "boolean",
            "nullable": true
          },
          "announceToMarket": {
            "type": "boolean",
            "nullable": true
          },
          "isRemote": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "remotePercentage": {
            "type": "integer",
            "description": "Accepts values between 0 and 100. 0 indicates that the work is to be done on site. 100 means that the position is fully remote.",
            "format": "int32",
            "nullable": true
          },
          "isEndCustomerAssignment": {
            "type": "boolean",
            "nullable": true
          },
          "publishForReal": {
            "type": "boolean",
            "description": "Set to true if you actually want to publish the announcement to your recipients, if you are developing/testing the endpoint it should be false, then no persist will take place."
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentAnnouncementBaseModel": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "contractType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractType"
              }
            ],
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentRequestStatus"
              }
            ]
          },
          "statusText": {
            "type": "string",
            "nullable": true
          },
          "isAnnouncedToPartnerNetwork": {
            "type": "boolean",
            "nullable": true
          },
          "isPriceNegotiable": {
            "type": "boolean"
          },
          "isRemote": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "remotePercentage": {
            "type": "integer",
            "description": "0 indicates that the work is to be done on site. 100 means that the position is fully remote.",
            "format": "int32",
            "nullable": true
          },
          "isAnnouncedToMarket": {
            "type": "boolean",
            "nullable": true
          },
          "isEndCustomerAssignment": {
            "type": "boolean",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentBaseModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectBaseModel"
              }
            ],
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtentType"
              }
            ]
          },
          "extent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentEditModel": {
        "required": [
          "projectAssignmentId",
          "title"
        ],
        "type": "object",
        "properties": {
          "projectAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "oralAgreementToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "optionToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractType"
              }
            ]
          },
          "extentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtentType"
              }
            ]
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentExtentType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nProcent = 0\n\nTimmar = 1",
        "format": "int32",
        "x-enumNames": [
          "Percent",
          "Hours"
        ],
        "x-enum-varnames": [
          "Percent",
          "Hours"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentExtentType",
          "values": [
            {
              "name": "Percent",
              "value": 0
            },
            {
              "name": "Hours",
              "value": 1
            }
          ]
        }
      },
      "ProjectAssignmentFilterModel": {
        "type": "object",
        "properties": {
          "pipelines": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Pipeline Ids can be retrieved from the Project Pipelines endpoint",
            "nullable": true
          },
          "projectAssignmentMemberTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentMemberType"
            },
            "description": "0 - Employee\r\n1 - Partner consultant\r\n2- Subcontractor",
            "nullable": true
          },
          "projectAssignmentStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentStatus"
            },
            "description": "1 - Upcoming\r\n2 - Ongoing",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Team Id of Employee assigned to Role",
            "nullable": true
          },
          "projectStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectState"
            },
            "description": "0 - Open\r\n30 - Won\r\n40 - Lost\r\n50 - Abandoned\r\n60 - Suspended",
            "nullable": true
          },
          "projectAssignmentAllocationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentAllocationStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberAllocationStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nNone = 0\n\nPreliminär = 1\n\nTillsatt = 2\n\nOffererad = 3",
        "format": "int32",
        "x-enumNames": [
          "None",
          "Preliminary",
          "Assigned",
          "Offered"
        ],
        "x-enum-varnames": [
          "None",
          "Preliminary",
          "Assigned",
          "Offered"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentMemberAllocationStatus",
          "values": [
            {
              "name": "None",
              "value": 0
            },
            {
              "name": "Preliminary",
              "value": 1
            },
            {
              "name": "Assigned",
              "value": 2
            },
            {
              "name": "Offered",
              "value": 3
            }
          ]
        }
      },
      "ProjectAssignmentMemberEmployeeAddModel": {
        "required": [
          "companyUserId",
          "status"
        ],
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentAllocationStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberEmployeeEditModel": {
        "required": [
          "companyUserId",
          "id",
          "state",
          "status"
        ],
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberState"
              }
            ]
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentAllocationStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserType"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserStatus"
              }
            ],
            "description": "Obsolete",
            "nullable": true
          },
          "projectAssignmentMemberId": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentMemberState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberState"
              }
            ],
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberState": {
        "enum": [
          0,
          10,
          20,
          30,
          40
        ],
        "type": "integer",
        "description": "\n\nTillagd = 0\n\nOffererad = 10\n\nAvböjd av kund = 20\n\nAvböjd av oss = 30\n\nPausad = 40",
        "format": "int32",
        "x-enumNames": [
          "Allocated",
          "Offered",
          "Rejected",
          "Revoked",
          "Deferred"
        ],
        "x-enum-varnames": [
          "Allocated",
          "Offered",
          "Rejected",
          "Revoked",
          "Deferred"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentMemberState",
          "values": [
            {
              "name": "Allocated",
              "value": 0
            },
            {
              "name": "Offered",
              "value": 10
            },
            {
              "name": "Rejected",
              "value": 20
            },
            {
              "name": "Revoked",
              "value": 30
            },
            {
              "name": "Deferred",
              "value": 40
            }
          ]
        }
      },
      "ProjectAssignmentMemberStateHistoryModel": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberState"
              }
            ]
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberSubcontractorAddModel": {
        "required": [
          "companyUserId",
          "status"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tariff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentAllocationStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberSubcontractorEditModel": {
        "required": [
          "companyUserId",
          "id",
          "state",
          "status"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tariff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberState"
              }
            ]
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentAllocationStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentMemberType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nUnspecified = 0\n\nMedarbetare = 1\n\nPartnerkonsult = 2\n\nUnderkonsult = 3",
        "format": "int32",
        "x-enumNames": [
          "Unspecified",
          "CompanyUser",
          "PartnerCompanyUser",
          "CompanyUserSubcontractor"
        ],
        "x-enum-varnames": [
          "Unspecified",
          "CompanyUser",
          "PartnerCompanyUser",
          "CompanyUserSubcontractor"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentMemberType",
          "values": [
            {
              "name": "Unspecified",
              "value": 0
            },
            {
              "name": "CompanyUser",
              "value": 1
            },
            {
              "name": "PartnerCompanyUser",
              "value": 2
            },
            {
              "name": "CompanyUserSubcontractor",
              "value": 3
            }
          ]
        }
      },
      "ProjectAssignmentModel": {
        "type": "object",
        "properties": {
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyBaseModel"
              }
            ],
            "nullable": true
          },
          "assigned": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberModel"
              }
            ],
            "nullable": true
          },
          "prospects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentMemberModel"
            },
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentSkillBaseModel"
            },
            "nullable": true
          },
          "projectAssignmentMemberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "oralAgreementToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "optionToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContractType"
              }
            ]
          },
          "isAssigned": {
            "type": "boolean",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectBaseModel"
              }
            ],
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtentType"
              }
            ]
          },
          "extent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentRequestStatus": {
        "enum": [
          0,
          10,
          20
        ],
        "type": "integer",
        "description": "\n\nÖppen = 0\n\nÅterkallad = 10\n\nStängd = 20",
        "format": "int32",
        "x-enumNames": [
          "Open",
          "Revoked",
          "Closed"
        ],
        "x-enum-varnames": [
          "Open",
          "Revoked",
          "Closed"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentRequestStatus",
          "values": [
            {
              "name": "Open",
              "value": 0
            },
            {
              "name": "Revoked",
              "value": 10
            },
            {
              "name": "Closed",
              "value": 20
            }
          ]
        }
      },
      "ProjectAssignmentSkillAddModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMandatory": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentSkillBaseModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentSkillEditModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMandatory": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentSkillModel": {
        "type": "object",
        "properties": {
          "projectAssignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentBaseModel"
              }
            ],
            "nullable": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectBaseModel"
              }
            ],
            "nullable": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyBaseModel"
              }
            ],
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordSynonym": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordSynonymModel"
              }
            ],
            "nullable": true
          },
          "isMandatory": {
            "type": "boolean"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "keyword": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeywordModel"
              }
            ],
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAssignmentStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nInga datum valda = 0\n\nKommande = 1\n\nPågående = 2\n\nAvslutat = 3",
        "format": "int32",
        "x-enumNames": [
          "Unspecified",
          "Coming",
          "Ongoing",
          "Ended"
        ],
        "x-enum-varnames": [
          "Unspecified",
          "Coming",
          "Ongoing",
          "Ended"
        ],
        "x-ms-enum": {
          "name": "ProjectAssignmentStatus",
          "values": [
            {
              "name": "Unspecified",
              "value": 0
            },
            {
              "name": "Coming",
              "value": 1
            },
            {
              "name": "Ongoing",
              "value": 2
            },
            {
              "name": "Ended",
              "value": 3
            }
          ]
        }
      },
      "ProjectAssignmentWithStatusModel": {
        "type": "object",
        "properties": {
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPipelineStageTitle": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "projectState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectState"
              }
            ],
            "description": "0 - Open\r\n30 - Won\r\n40 - Lost\r\n50 - Abandoned\r\n60 - Suspended"
          },
          "probability": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentId": {
            "type": "integer",
            "description": "Unspecified = 0,\r\nComing = 1,\r\nOngoing = 2,\r\nEnded = 3",
            "format": "int32"
          },
          "projectAssignmentAllocationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberAllocationStatus"
              }
            ],
            "description": "None = 0,\r\nPreliminary = 1,\r\nAssigned = 2,"
          },
          "projectAssignmentMemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberType"
              }
            ],
            "description": "Unspecified = 0,\r\nEmployee = 1,\r\nPartner Consultant = 2,\r\nSubcontractor = 3"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "optionToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oralAgreementToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "projectAssignmentExtent": {
            "type": "integer",
            "format": "int32"
          },
          "projectAssignmentExtentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentExtentType"
              }
            ],
            "description": "Percent = 0,\r\nHours = 1,"
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "estimatedValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assigned": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAssignmentMemberModel"
              }
            ],
            "nullable": true
          },
          "prospects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentMemberModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectAttachmentModel": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentType"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectBaseModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "customerIdentifier": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectEventBaseModel": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectEventMeetingAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for StartDateTime and EndDateTime properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectEventMeetingModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectEventModel": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectEventNoteAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for NoteDate property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectEventNoteModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventNoteType"
              }
            ],
            "nullable": true
          },
          "noteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectEventTaskAddEditModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timezoneId": {
            "type": "string",
            "description": "The desired timezone to be used for DueDateTime property. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty, the timezone of the executing user (API account) will be used.",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectEventTaskModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventTaskType"
              }
            ],
            "description": "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2",
            "nullable": true
          },
          "hasTime": {
            "type": "boolean",
            "nullable": true
          },
          "dueDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedToCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventStatusValue"
              }
            ]
          },
          "createdByCompanyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByCompanyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventVisibility"
              }
            ]
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCommentModel"
            },
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ],
            "description": "Meeting = 0\r\nNote = 1\r\nTask = 2"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionDelta": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectModel": {
        "type": "object",
        "properties": {
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyBaseModel"
              }
            ],
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "seoId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "googleId": {
            "type": "string",
            "nullable": true
          },
          "probability": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "managers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserBaseModel"
            },
            "nullable": true
          },
          "salesManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true,
            "deprecated": true
          },
          "salesManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserBaseModel"
            },
            "nullable": true
          },
          "intermediator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerBaseModel"
              }
            ],
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectEventBaseModel"
            },
            "nullable": true
          },
          "customerContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerContactBaseModel"
            },
            "nullable": true
          },
          "intermediatorContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerContactBaseModel"
            },
            "nullable": true
          },
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAssignmentBaseModel"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectAttachmentModel"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyTagBaseModel"
            },
            "nullable": true
          },
          "pipelineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentStageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyModel"
              }
            ],
            "nullable": true
          },
          "projectReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectReferenceModel"
            },
            "nullable": true
          },
          "currentState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectState"
              }
            ],
            "description": "0 = Open\r\n30 = Won\r\n40 = Lost\r\n50 = Abandoned\r\n60 = Suspended"
          },
          "stateHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectStateHistoryModel"
            },
            "nullable": true
          },
          "createdBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "updatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salesManagerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of sales managers employee ids",
            "nullable": true
          },
          "projectManagerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of project managers employee ids",
            "nullable": true
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectPriority"
              }
            ]
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "customerIdentifier": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectPipelineModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPipelineStageModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectPipelineStageModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "probability": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectPriority": {
        "enum": [
          3,
          5,
          8
        ],
        "type": "integer",
        "description": "\n\nLåg = 3\n\nMedel = 5\n\nHög = 8",
        "format": "int32",
        "x-enumNames": [
          "Low",
          "Medium",
          "High"
        ],
        "x-enum-varnames": [
          "Low",
          "Medium",
          "High"
        ],
        "x-ms-enum": {
          "name": "ProjectPriority",
          "values": [
            {
              "name": "Low",
              "value": 3
            },
            {
              "name": "Medium",
              "value": 5
            },
            {
              "name": "High",
              "value": 8
            }
          ]
        }
      },
      "ProjectQuerySort": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "\n\nCreatedDateTime = 0\n\nTitle = 1\n\nIdentifier = 2\n\nCustomerIdentifier = 3\n\nSeoId = 4\n\nUpdatedDateTime = 5\n\nLastTouchDateTime = 6",
        "format": "int32",
        "x-enumNames": [
          "CreatedDateTime",
          "Title",
          "Identifier",
          "CustomerIdentifier",
          "SeoId",
          "UpdatedDateTime",
          "LastTouchDateTime"
        ],
        "x-enum-varnames": [
          "CreatedDateTime",
          "Title",
          "Identifier",
          "CustomerIdentifier",
          "SeoId",
          "UpdatedDateTime",
          "LastTouchDateTime"
        ],
        "x-ms-enum": {
          "name": "ProjectQuerySort",
          "values": [
            {
              "name": "CreatedDateTime",
              "value": 0
            },
            {
              "name": "Title",
              "value": 1
            },
            {
              "name": "Identifier",
              "value": 2
            },
            {
              "name": "CustomerIdentifier",
              "value": 3
            },
            {
              "name": "SeoId",
              "value": 4
            },
            {
              "name": "UpdatedDateTime",
              "value": 5
            },
            {
              "name": "LastTouchDateTime",
              "value": 6
            }
          ]
        }
      },
      "ProjectQuerySortPageAndSortByModel": {
        "type": "object",
        "properties": {
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectQuerySort"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Ascending = 0 (Default)\r\nDescending = 1"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "default": 15
          }
        },
        "additionalProperties": false
      },
      "ProjectReferenceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectState": {
        "enum": [
          0,
          30,
          40,
          50,
          60
        ],
        "type": "integer",
        "description": "\n\nÖppen = 0\n\nVunnen = 30\n\nFörlorad = 40\n\nAvböjd = 50\n\nUppskjuten = 60",
        "format": "int32",
        "x-enumNames": [
          "Open",
          "Won",
          "Lost",
          "Abandoned",
          "Suspended"
        ],
        "x-enum-varnames": [
          "Open",
          "Won",
          "Lost",
          "Abandoned",
          "Suspended"
        ],
        "x-ms-enum": {
          "name": "ProjectState",
          "values": [
            {
              "name": "Open",
              "value": 0
            },
            {
              "name": "Won",
              "value": 30
            },
            {
              "name": "Lost",
              "value": 40
            },
            {
              "name": "Abandoned",
              "value": 50
            },
            {
              "name": "Suspended",
              "value": 60
            }
          ]
        }
      },
      "ProjectStateHistoryModel": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectState"
              }
            ]
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectStateReasonModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectStateReasonModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecruitmentSourceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReferenceBlockItemModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "workExperience": {
            "type": "string",
            "nullable": true
          },
          "workExperienceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReferenceBlockModel": {
        "type": "object",
        "properties": {
          "hideDescription": {
            "type": "boolean"
          },
          "hideInEdit": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResumeModel": {
        "type": "object",
        "properties": {
          "presentation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PresentationBlockModel"
              }
            ],
            "nullable": true
          },
          "highlightedWorkExperience": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HighlightedWorkExperienceBlockModel"
              }
            ],
            "nullable": true
          },
          "skillsByCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillByCategoryBlockModel"
              }
            ],
            "nullable": true
          },
          "topSkills": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopSkillBlockModel"
              }
            ],
            "nullable": true
          },
          "workExperience": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkExperienceBlockModel"
              }
            ],
            "nullable": true
          },
          "skills": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillModelModel"
              }
            ],
            "nullable": true
          },
          "employer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerBlockModel"
              }
            ],
            "nullable": true
          },
          "training": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TrainingBlockModel"
              }
            ],
            "nullable": true
          },
          "education": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EducationBlockModel"
              }
            ],
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageBlockModel"
              }
            ],
            "nullable": true
          },
          "commitment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommitmentBlockModel"
              }
            ],
            "nullable": true
          },
          "extraSkills": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtraSkillBlockModel"
              }
            ],
            "nullable": true
          },
          "reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceBlockModel"
              }
            ],
            "nullable": true
          },
          "text": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TextBlockModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RoleModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessLevel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveToApiOption": {
        "enum": [
          3,
          5
        ],
        "type": "integer",
        "description": "\n\nAllResumesOfLanguage = 3\n\nProfile = 5",
        "format": "int32",
        "x-enumNames": [
          "AllResumesOfLanguage",
          "Profile"
        ],
        "x-enum-varnames": [
          "AllResumesOfLanguage",
          "Profile"
        ],
        "x-ms-enum": {
          "name": "SaveToApiOption",
          "values": [
            {
              "name": "AllResumesOfLanguage",
              "value": 3
            },
            {
              "name": "Profile",
              "value": 5
            }
          ]
        }
      },
      "SearchCompanyCandidateQueryModel": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCandidateState"
            },
            "nullable": true
          },
          "pipeline": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noRecruiter": {
            "type": "boolean"
          },
          "recruiters": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyCandidateResultModel": {
        "type": "object",
        "properties": {
          "pagedAndSortedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCandidateQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCandidateBaseModel"
            },
            "nullable": true
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyCustomerContactQueryModel": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "managers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerContactQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyCustomerContactResultModel": {
        "type": "object",
        "properties": {
          "pagedAndSortedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerContactQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerContactModel"
            },
            "nullable": true
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyCustomerQueryModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameOperator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringComparisonOperator"
              }
            ]
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "identificationOperator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringComparisonOperator"
              }
            ]
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumberOperator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringComparisonOperator"
              }
            ]
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyCustomerResultModel": {
        "type": "object",
        "properties": {
          "pagedAndSortedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyCustomerQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyCustomerBaseModel"
            },
            "nullable": true
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyUserQueryModel": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          },
          "includeDisconnected": {
            "type": "boolean"
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchCompanyUserResultModel": {
        "type": "object",
        "properties": {
          "pagedAndSortedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserExtendedModel"
            },
            "nullable": true
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchProjectQueryModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "customerIdentifier": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageAndSortBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "pipelines": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Your Project Pipelines can be retrieved from the GET ProjectPipelines endpoint",
            "nullable": true
          },
          "salesManagers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "intermediators": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "projectStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectState"
            },
            "description": "Open = 0,\r\nWon = 30,\r\nLost = 40,\r\nAbandoned = 50,\r\nSuspended = 60",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchProjectsResultModel": {
        "type": "object",
        "properties": {
          "pagedAndSortedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectQuerySortPageAndSortByModel"
              }
            ],
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectBaseModel"
            },
            "nullable": true
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchSkillModel": {
        "type": "object",
        "properties": {
          "keywordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchSkillQueryModel": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchSkillModel"
            },
            "nullable": true
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchSkillResultModel": {
        "type": "object",
        "properties": {
          "query": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchSkillQueryModel"
              }
            ],
            "nullable": true
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyUserSearchSkillModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillBlockItemModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "keywordTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordTypeName": {
            "type": "string",
            "nullable": true
          },
          "numberOfDaysWorkExperience": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastWorkExperienceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32"
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SkillByCategoryBlockItemModel": {
        "type": "object",
        "properties": {
          "keywordTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillBlockItemModel"
            },
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SkillByCategoryBlockModel": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillByCategoryBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillModelModel": {
        "type": "object",
        "properties": {
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillResultModel": {
        "type": "object",
        "properties": {
          "keywordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keywordSynonymName": {
            "type": "string",
            "nullable": true
          },
          "masterSynonymId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "masterSynonymName": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillSearchQueryTermModel": {
        "required": [
          "term"
        ],
        "type": "object",
        "properties": {
          "term": {
            "minLength": 1,
            "type": "string"
          },
          "min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortOrder": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "0 - Ascending,\r\n1 - Descending",
        "format": "int32",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "x-enum-varnames": [
          "Ascending",
          "Descending"
        ],
        "x-ms-enum": {
          "name": "SortOrder",
          "values": [
            {
              "name": "Ascending",
              "value": 0
            },
            {
              "name": "Descending",
              "value": 1
            }
          ]
        }
      },
      "Status": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nInaktiv = 0\n\nAktiv = 1",
        "format": "int32",
        "x-enumNames": [
          "Inactive",
          "Active"
        ],
        "x-enum-varnames": [
          "Inactive",
          "Active"
        ],
        "x-ms-enum": {
          "name": "Status",
          "values": [
            {
              "name": "Inactive",
              "value": 0
            },
            {
              "name": "Active",
              "value": 1
            }
          ]
        }
      },
      "StringComparisonOperator": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\nContains = 0\n\nStartsWith = 1\n\nEndsWith = 2\n\nEquals = 3",
        "format": "int32",
        "x-enumNames": [
          "Contains",
          "StartsWith",
          "EndsWith",
          "Equals"
        ],
        "x-enum-varnames": [
          "Contains",
          "StartsWith",
          "EndsWith",
          "Equals"
        ],
        "x-ms-enum": {
          "name": "StringComparisonOperator",
          "values": [
            {
              "name": "Contains",
              "value": 0
            },
            {
              "name": "StartsWith",
              "value": 1
            },
            {
              "name": "EndsWith",
              "value": 2
            },
            {
              "name": "Equals",
              "value": 3
            }
          ]
        }
      },
      "TeamAddEditModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internalIdentification": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "parentTeamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamManagerEditModel": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TeamManagerModel": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "team": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamBaseModel"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberAddModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberEditModel": {
        "type": "object",
        "properties": {
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberModel": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyUserBaseModel"
              }
            ],
            "nullable": true
          },
          "team": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamBaseModel"
              }
            ],
            "nullable": true
          },
          "availabilityPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberMoveModel": {
        "required": [
          "toTeamId"
        ],
        "type": "object",
        "properties": {
          "toTeamId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TeamModel": {
        "type": "object",
        "properties": {
          "internalIdentification": {
            "type": "string",
            "nullable": true
          },
          "corporateIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "parentTeamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateAssetType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          50,
          51,
          70,
          71,
          100
        ],
        "type": "integer",
        "description": "\n\nNone = 0\n\nPrimary = 1\n\nClassic = 2\n\nDynamic = 3\n\nPageFlow = 4\n\nBlockWorkExperience = 50\n\nBlockSkillsByLevel = 51\n\nCinodePremium3PageFlow = 70\n\nCinodePremium2PageFlow = 71\n\nTemplateType = 100",
        "format": "int32",
        "x-enumNames": [
          "None",
          "Primary",
          "Classic",
          "Dynamic",
          "PageFlow",
          "BlockWorkExperience",
          "BlockSkillsByLevel",
          "CinodePremium3PageFlow",
          "CinodePremium2PageFlow",
          "TemplateType"
        ],
        "x-enum-varnames": [
          "None",
          "Primary",
          "Classic",
          "Dynamic",
          "PageFlow",
          "BlockWorkExperience",
          "BlockSkillsByLevel",
          "CinodePremium3PageFlow",
          "CinodePremium2PageFlow",
          "TemplateType"
        ],
        "x-ms-enum": {
          "name": "TemplateAssetType",
          "values": [
            {
              "name": "None",
              "value": 0
            },
            {
              "name": "Primary",
              "value": 1
            },
            {
              "name": "Classic",
              "value": 2
            },
            {
              "name": "Dynamic",
              "value": 3
            },
            {
              "name": "PageFlow",
              "value": 4
            },
            {
              "name": "BlockWorkExperience",
              "value": 50
            },
            {
              "name": "BlockSkillsByLevel",
              "value": 51
            },
            {
              "name": "CinodePremium3PageFlow",
              "value": 70
            },
            {
              "name": "CinodePremium2PageFlow",
              "value": 71
            },
            {
              "name": "TemplateType",
              "value": 100
            }
          ]
        }
      },
      "TextBlockModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopSkillBlockItemModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TopSkillBlockModel": {
        "type": "object",
        "properties": {
          "useLevel": {
            "type": "boolean"
          },
          "minValue": {
            "type": "integer",
            "format": "int32"
          },
          "maxValue": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfItemsInList": {
            "type": "integer",
            "format": "int32"
          },
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopSkillBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrainingBlockModel": {
        "type": "object",
        "properties": {
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingItemBlockModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrainingItemBlockModel": {
        "type": "object",
        "properties": {
          "trainingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TrainingType"
              }
            ]
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "supplier": {
            "type": "string",
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TrainingType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\nKurs = 0\n\nCertifiering = 1",
        "format": "int32",
        "x-enumNames": [
          "Course",
          "Certification"
        ],
        "x-enum-varnames": [
          "Course",
          "Certification"
        ],
        "x-ms-enum": {
          "name": "TrainingType",
          "values": [
            {
              "name": "Course",
              "value": 0
            },
            {
              "name": "Certification",
              "value": 1
            }
          ]
        }
      },
      "UpdatedModel": {
        "type": "object",
        "properties": {
          "companyUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGender": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nEj angiven = 0\n\nMan = 1\n\nKvinna = 2",
        "format": "int32",
        "x-enumNames": [
          "Other",
          "Male",
          "Female"
        ],
        "x-enum-varnames": [
          "Other",
          "Male",
          "Female"
        ],
        "x-ms-enum": {
          "name": "UserGender",
          "values": [
            {
              "name": "Other",
              "value": 0
            },
            {
              "name": "Male",
              "value": 1
            },
            {
              "name": "Female",
              "value": 2
            }
          ]
        }
      },
      "ValidationModel": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Collection of validation errors",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookAddModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "endpointUrl": {
            "type": "string",
            "nullable": true
          },
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookConfigurationAddModel"
            },
            "nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookCredentialsAddModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookConfigurationAddModel": {
        "type": "object",
        "properties": {
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookEntityType"
              }
            ]
          },
          "actionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "WebhookConfigurationModel": {
        "type": "object",
        "properties": {
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookEntityType"
              }
            ]
          },
          "actionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "WebhookCredentialsAddModel": {
        "type": "object",
        "properties": {
          "headerValue": {
            "type": "string",
            "nullable": true
          },
          "isBasicAuthentication": {
            "type": "boolean",
            "nullable": true
          },
          "headerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookCredentialsModel": {
        "type": "object",
        "properties": {
          "isBasicAuthentication": {
            "type": "boolean",
            "nullable": true
          },
          "headerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookEntityType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "description": "\n\nAll = 1\n\nCompanyCandidate = 2\n\nCompanyEmployee = 3\n\nCompanySubcontractor = 4\n\nCompanyCustomer = 5\n\nCompanyProject = 6\n\nRole = 7\n\nPublicAnnouncement = 8\n\nAbsence = 9\n\nCompanyCustomerContact = 10",
        "format": "int32",
        "x-enumNames": [
          "All",
          "CompanyCandidate",
          "CompanyEmployee",
          "CompanySubcontractor",
          "CompanyCustomer",
          "CompanyProject",
          "Role",
          "PublicAnnouncement",
          "Absence",
          "CompanyCustomerContact"
        ],
        "x-enum-varnames": [
          "All",
          "CompanyCandidate",
          "CompanyEmployee",
          "CompanySubcontractor",
          "CompanyCustomer",
          "CompanyProject",
          "Role",
          "PublicAnnouncement",
          "Absence",
          "CompanyCustomerContact"
        ],
        "x-ms-enum": {
          "name": "WebhookEntityType",
          "values": [
            {
              "name": "All",
              "value": 1
            },
            {
              "name": "CompanyCandidate",
              "value": 2
            },
            {
              "name": "CompanyEmployee",
              "value": 3
            },
            {
              "name": "CompanySubcontractor",
              "value": 4
            },
            {
              "name": "CompanyCustomer",
              "value": 5
            },
            {
              "name": "CompanyProject",
              "value": 6
            },
            {
              "name": "Role",
              "value": 7
            },
            {
              "name": "PublicAnnouncement",
              "value": 8
            },
            {
              "name": "Absence",
              "value": 9
            },
            {
              "name": "CompanyCustomerContact",
              "value": 10
            }
          ]
        }
      },
      "WebhookModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "endpointUrl": {
            "type": "string",
            "nullable": true
          },
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookConfigurationModel"
            },
            "nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookCredentialsModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordEngineType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\nNone = 0\n\nGroupDocs = 1\n\nAspose = 2",
        "format": "int32",
        "x-enumNames": [
          "None",
          "GroupDocs",
          "Aspose"
        ],
        "x-enum-varnames": [
          "None",
          "GroupDocs",
          "Aspose"
        ],
        "x-ms-enum": {
          "name": "WordEngineType",
          "values": [
            {
              "name": "None",
              "value": 0
            },
            {
              "name": "GroupDocs",
              "value": 1
            },
            {
              "name": "Aspose",
              "value": 2
            }
          ]
        }
      },
      "WorkExperienceBlockItemModel": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillBlockItemModel"
            },
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "employer": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationBlockModel"
              }
            ],
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "logotype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageBlockModel"
              }
            ],
            "nullable": true
          },
          "parentBlockItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBlockItemUpdated": {
            "type": "boolean",
            "nullable": true
          },
          "profileTranslationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discarded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkExperienceBlockModel": {
        "type": "object",
        "properties": {
          "skillsHeading": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "subHeading": {
            "type": "string",
            "nullable": true
          },
          "hideSubHeading": {
            "type": "boolean"
          },
          "hideInEdit": {
            "type": "boolean"
          },
          "hideTitle": {
            "type": "boolean"
          },
          "hideDescription": {
            "type": "boolean"
          },
          "hideText": {
            "type": "boolean"
          },
          "useLogotype": {
            "type": "boolean"
          },
          "useAdvancedFormatting": {
            "type": "boolean"
          },
          "editorSettings": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperienceBlockItemModel"
            },
            "nullable": true
          },
          "blockId": {
            "type": "string",
            "format": "uuid"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}